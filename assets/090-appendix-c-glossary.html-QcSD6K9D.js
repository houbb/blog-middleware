import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as n,o as d}from"./app-8UyD4ORD.js";const r={};function t(h,a){return d(),s("div",null,[...a[0]||(a[0]=[n('<p>分布式文件存储系统涉及众多专业术语和概念，为了帮助读者更好地理解和使用本手册内容，本附录提供了相关术语的详细解释。这些术语涵盖了架构设计、数据管理、性能优化、安全防护等多个方面，是理解和应用分布式存储技术的基础。</p><h2 id="a" tabindex="-1"><a class="header-anchor" href="#a"><span>A</span></a></h2><h3 id="acl-access-control-list" tabindex="-1"><a class="header-anchor" href="#acl-access-control-list"><span>ACL (Access Control List)</span></a></h3><p>访问控制列表，用于定义用户或用户组对文件或目录的访问权限。ACL提供了比传统UNIX权限更细粒度的访问控制机制。</p><h3 id="acid" tabindex="-1"><a class="header-anchor" href="#acid"><span>ACID</span></a></h3><p>数据库事务的四个基本特性：原子性(Atomicity)、一致性(Consistency)、隔离性(Isolation)、持久性(Durability)。在分布式存储系统中，实现ACID特性是一个重要挑战。</p><h3 id="api-application-programming-interface" tabindex="-1"><a class="header-anchor" href="#api-application-programming-interface"><span>API (Application Programming Interface)</span></a></h3><p>应用程序编程接口，定义了软件组件之间交互的方式和规范。分布式存储系统通常提供多种API，如POSIX、S3、HDFS等。</p><h3 id="archival-storage" tabindex="-1"><a class="header-anchor" href="#archival-storage"><span>Archival Storage</span></a></h3><p>归档存储，用于长期保存不经常访问的数据的存储层级。通常具有较低的成本和较长的访问延迟。</p><h2 id="b" tabindex="-1"><a class="header-anchor" href="#b"><span>B</span></a></h2><h3 id="backup" tabindex="-1"><a class="header-anchor" href="#backup"><span>Backup</span></a></h3><p>备份，为防止数据丢失而创建的数据副本。备份策略包括完全备份、增量备份和差异备份等。</p><h3 id="block-storage" tabindex="-1"><a class="header-anchor" href="#block-storage"><span>Block Storage</span></a></h3><p>块存储，将数据分割成固定大小的块进行存储的方式。块存储提供原始存储空间，通常用于虚拟机磁盘或数据库存储。</p><h3 id="bucket" tabindex="-1"><a class="header-anchor" href="#bucket"><span>Bucket</span></a></h3><p>存储桶，对象存储中的逻辑容器，用于组织和管理对象。每个存储桶具有唯一的名称，并可以设置访问权限和存储策略。</p><h2 id="c" tabindex="-1"><a class="header-anchor" href="#c"><span>C</span></a></h2><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>Cache</span></a></h3><p>缓存，用于临时存储频繁访问数据的高速存储区域。缓存可以显著提高数据访问性能，减少对后端存储的访问压力。</p><h3 id="cap-theorem" tabindex="-1"><a class="header-anchor" href="#cap-theorem"><span>CAP Theorem</span></a></h3><p>CAP定理，分布式系统设计的基本原理，指出在一致性(Consistency)、可用性(Availability)和分区容忍性(Partition Tolerance)三者中，最多只能同时满足两个。</p><h3 id="ceph" tabindex="-1"><a class="header-anchor" href="#ceph"><span>Ceph</span></a></h3><p>一个开源的统一存储平台，提供对象存储、块存储和文件存储服务。Ceph以其高度可扩展性和无单点故障特性而闻名。</p><h3 id="chunk" tabindex="-1"><a class="header-anchor" href="#chunk"><span>Chunk</span></a></h3><p>数据块，在分布式存储系统中，大文件通常被分割成多个固定大小的数据块进行存储和管理。</p><h3 id="cinder" tabindex="-1"><a class="header-anchor" href="#cinder"><span>Cinder</span></a></h3><p>OpenStack的块存储服务，为虚拟机提供持久化的块存储设备。</p><h3 id="client" tabindex="-1"><a class="header-anchor" href="#client"><span>Client</span></a></h3><p>客户端，访问存储系统的应用程序或用户。客户端通过API与存储系统进行交互。</p><h3 id="cluster" tabindex="-1"><a class="header-anchor" href="#cluster"><span>Cluster</span></a></h3><p>集群，由多个相互连接的计算节点组成的系统，共同提供存储服务。集群可以提供高可用性和可扩展性。</p><h3 id="consistency" tabindex="-1"><a class="header-anchor" href="#consistency"><span>Consistency</span></a></h3><p>一致性，在分布式系统中，指数据在不同节点或不同时间点保持一致的特性。包括强一致性、弱一致性和最终一致性等。</p><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>Container</span></a></h3><p>容器，一种轻量级的虚拟化技术，用于打包和运行应用程序及其依赖。容器具有启动快、资源占用少等优点。</p><h2 id="d" tabindex="-1"><a class="header-anchor" href="#d"><span>D</span></a></h2><h3 id="data-deduplication" tabindex="-1"><a class="header-anchor" href="#data-deduplication"><span>Data Deduplication</span></a></h3><p>数据去重，通过识别和消除重复数据来减少存储空间占用的技术。数据去重可以显著降低存储成本。</p><h3 id="data-lake" tabindex="-1"><a class="header-anchor" href="#data-lake"><span>Data Lake</span></a></h3><p>数据湖，存储大量原始数据的存储系统，支持多种数据格式和分析处理方式。</p><h3 id="data-locality" tabindex="-1"><a class="header-anchor" href="#data-locality"><span>Data Locality</span></a></h3><p>数据局部性，指将计算任务调度到数据所在节点的原则，以减少网络传输开销，提高处理效率。</p><h3 id="data-pipeline" tabindex="-1"><a class="header-anchor" href="#data-pipeline"><span>Data Pipeline</span></a></h3><p>数据管道，用于在不同系统之间传输和处理数据的自动化流程。</p><h3 id="data-replication" tabindex="-1"><a class="header-anchor" href="#data-replication"><span>Data Replication</span></a></h3><p>数据复制，将数据复制到多个节点以提高可用性和可靠性的技术。复制策略包括同步复制和异步复制。</p><h3 id="data-sharding" tabindex="-1"><a class="header-anchor" href="#data-sharding"><span>Data Sharding</span></a></h3><p>数据分片，将大数据集分割成多个较小的部分，分布存储在不同节点上的技术。</p><h3 id="data-tiering" tabindex="-1"><a class="header-anchor" href="#data-tiering"><span>Data Tiering</span></a></h3><p>数据分层，根据数据访问频率和重要性将数据存储在不同性能和成本特性的存储介质上的策略。</p><h3 id="datanode" tabindex="-1"><a class="header-anchor" href="#datanode"><span>Datanode</span></a></h3><p>Hadoop分布式文件系统(HDFS)中的数据节点，负责存储实际的数据块。</p><h3 id="dpu-data-processing-unit" tabindex="-1"><a class="header-anchor" href="#dpu-data-processing-unit"><span>DPU (Data Processing Unit)</span></a></h3><p>数据处理单元，专门用于处理数据中心基础设施任务的处理器，可以卸载网络、存储和安全等工作。</p><h3 id="drbd-distributed-replicated-block-device" tabindex="-1"><a class="header-anchor" href="#drbd-distributed-replicated-block-device"><span>DRBD (Distributed Replicated Block Device)</span></a></h3><p>分布式复制块设备，用于在Linux系统之间同步块设备数据的软件。</p><h2 id="e" tabindex="-1"><a class="header-anchor" href="#e"><span>E</span></a></h2><h3 id="ec-erasure-coding" tabindex="-1"><a class="header-anchor" href="#ec-erasure-coding"><span>EC (Erasure Coding)</span></a></h3><p>纠删码，一种数据保护技术，通过编码算法将数据分割成多个数据块和校验块，即使部分块丢失也能恢复原始数据。</p><h3 id="edge-computing" tabindex="-1"><a class="header-anchor" href="#edge-computing"><span>Edge Computing</span></a></h3><p>边缘计算，在靠近数据源的边缘节点进行数据处理和分析的计算模式，可以降低延迟和带宽消耗。</p><h3 id="erasure-coding-pool" tabindex="-1"><a class="header-anchor" href="#erasure-coding-pool"><span>Erasure Coding Pool</span></a></h3><p>纠删码池，Ceph中使用纠删码技术的存储池，提供更高的存储效率和数据保护能力。</p><h3 id="eventual-consistency" tabindex="-1"><a class="header-anchor" href="#eventual-consistency"><span>Eventual Consistency</span></a></h3><p>最终一致性，在分布式系统中，数据在没有更新操作的情况下，最终会在所有节点上达到一致的状态。</p><h2 id="f" tabindex="-1"><a class="header-anchor" href="#f"><span>F</span></a></h2><h3 id="fuse-filesystem-in-userspace" tabindex="-1"><a class="header-anchor" href="#fuse-filesystem-in-userspace"><span>FUSE (Filesystem in Userspace)</span></a></h3><p>用户空间文件系统，允许非特权用户创建自己的文件系统而无需修改内核代码的技术。</p><h3 id="filesystem" tabindex="-1"><a class="header-anchor" href="#filesystem"><span>Filesystem</span></a></h3><p>文件系统，用于组织和管理存储设备上文件和目录的系统软件。</p><h3 id="fragmentation" tabindex="-1"><a class="header-anchor" href="#fragmentation"><span>Fragmentation</span></a></h3><p>碎片化，文件在存储设备上非连续存储的现象，可能导致性能下降。</p><h2 id="g" tabindex="-1"><a class="header-anchor" href="#g"><span>G</span></a></h2><h3 id="gateway" tabindex="-1"><a class="header-anchor" href="#gateway"><span>Gateway</span></a></h3><p>网关，用于连接不同协议或系统的中间件，实现协议转换和数据传输。</p><h3 id="glusterfs" tabindex="-1"><a class="header-anchor" href="#glusterfs"><span>GlusterFS</span></a></h3><p>一个开源的分布式文件系统，通过横向扩展提供大规模存储能力。</p><h3 id="gossip-protocol" tabindex="-1"><a class="header-anchor" href="#gossip-protocol"><span>Gossip Protocol</span></a></h3><p>Gossip协议，一种去中心化的分布式通信协议，节点通过随机交换信息来传播消息。</p><h2 id="h" tabindex="-1"><a class="header-anchor" href="#h"><span>H</span></a></h2><h3 id="hdfs-hadoop-distributed-file-system" tabindex="-1"><a class="header-anchor" href="#hdfs-hadoop-distributed-file-system"><span>HDFS (Hadoop Distributed File System)</span></a></h3><p>Hadoop分布式文件系统，Apache Hadoop生态系统中的核心存储组件，专为大数据处理设计。</p><h3 id="heat-map" tabindex="-1"><a class="header-anchor" href="#heat-map"><span>Heat Map</span></a></h3><p>热力图，用于可视化显示数据访问频率或系统资源使用情况的图形表示。</p><h3 id="high-availability-ha" tabindex="-1"><a class="header-anchor" href="#high-availability-ha"><span>High Availability (HA)</span></a></h3><p>高可用性，系统能够持续提供服务的能力，通常通过冗余设计和故障转移机制实现。</p><h3 id="hot-storage" tabindex="-1"><a class="header-anchor" href="#hot-storage"><span>Hot Storage</span></a></h3><p>热存储，用于存储频繁访问数据的高性能存储层级。</p><h2 id="i" tabindex="-1"><a class="header-anchor" href="#i"><span>I</span></a></h2><h3 id="iops-input-output-operations-per-second" tabindex="-1"><a class="header-anchor" href="#iops-input-output-operations-per-second"><span>IOPS (Input/Output Operations Per Second)</span></a></h3><p>每秒输入/输出操作数，衡量存储系统性能的重要指标。</p><h3 id="isolation" tabindex="-1"><a class="header-anchor" href="#isolation"><span>Isolation</span></a></h3><p>隔离性，在多租户环境中，确保不同用户或应用之间的资源和数据相互独立的特性。</p><h2 id="j" tabindex="-1"><a class="header-anchor" href="#j"><span>J</span></a></h2><h3 id="journaling" tabindex="-1"><a class="header-anchor" href="#journaling"><span>Journaling</span></a></h3><p>日志记录，通过记录操作日志来保证文件系统一致性和快速恢复的机制。</p><h3 id="juicefs" tabindex="-1"><a class="header-anchor" href="#juicefs"><span>JuiceFS</span></a></h3><p>一个开源的云原生分布式文件系统，提供强一致性、高性能的文件存储服务。</p><h2 id="k" tabindex="-1"><a class="header-anchor" href="#k"><span>K</span></a></h2><h3 id="key-value-store" tabindex="-1"><a class="header-anchor" href="#key-value-store"><span>Key-Value Store</span></a></h3><p>键值存储，一种简单的数据存储模型，通过唯一的键来存储和检索值。</p><h3 id="kubernetes" tabindex="-1"><a class="header-anchor" href="#kubernetes"><span>Kubernetes</span></a></h3><p>一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。</p><h2 id="l" tabindex="-1"><a class="header-anchor" href="#l"><span>L</span></a></h2><h3 id="latency" tabindex="-1"><a class="header-anchor" href="#latency"><span>Latency</span></a></h3><p>延迟，数据请求从发出到收到响应所经历的时间。</p><h3 id="load-balancing" tabindex="-1"><a class="header-anchor" href="#load-balancing"><span>Load Balancing</span></a></h3><p>负载均衡，将工作负载分配到多个计算资源上，以优化资源使用和提高性能。</p><h3 id="log-structured-file-system" tabindex="-1"><a class="header-anchor" href="#log-structured-file-system"><span>Log-Structured File System</span></a></h3><p>日志结构文件系统，将所有写操作顺序记录到日志中的文件系统设计。</p><h2 id="m" tabindex="-1"><a class="header-anchor" href="#m"><span>M</span></a></h2><h3 id="metadata" tabindex="-1"><a class="header-anchor" href="#metadata"><span>Metadata</span></a></h3><p>元数据，描述数据的数据，包括文件属性、位置信息、访问权限等。</p><h3 id="minio" tabindex="-1"><a class="header-anchor" href="#minio"><span>MinIO</span></a></h3><p>一个高性能的云原生对象存储系统，兼容Amazon S3 API。</p><h3 id="mirroring" tabindex="-1"><a class="header-anchor" href="#mirroring"><span>Mirroring</span></a></h3><p>镜像，将数据完全复制到另一个位置的备份策略。</p><h3 id="monitor" tabindex="-1"><a class="header-anchor" href="#monitor"><span>Monitor</span></a></h3><p>监控器，在Ceph中负责维护集群状态和协调集群成员的组件。</p><h3 id="multi-tenancy" tabindex="-1"><a class="header-anchor" href="#multi-tenancy"><span>Multi-tenancy</span></a></h3><p>多租户，在同一个系统中为多个独立用户或组织提供隔离服务的架构模式。</p><h2 id="n" tabindex="-1"><a class="header-anchor" href="#n"><span>N</span></a></h2><h3 id="namespace" tabindex="-1"><a class="header-anchor" href="#namespace"><span>Namespace</span></a></h3><p>命名空间，用于组织和隔离资源的逻辑分组。</p><h3 id="nfs-network-file-system" tabindex="-1"><a class="header-anchor" href="#nfs-network-file-system"><span>NFS (Network File System)</span></a></h3><p>网络文件系统，允许网络上的计算机通过网络共享文件的分布式文件系统。</p><h3 id="node" tabindex="-1"><a class="header-anchor" href="#node"><span>Node</span></a></h3><p>节点，分布式系统中的一个计算或存储单元。</p><h3 id="nosql" tabindex="-1"><a class="header-anchor" href="#nosql"><span>NoSQL</span></a></h3><p>非关系型数据库，指传统关系型数据库之外的各种数据库系统的统称。</p><h2 id="o" tabindex="-1"><a class="header-anchor" href="#o"><span>O</span></a></h2><h3 id="object" tabindex="-1"><a class="header-anchor" href="#object"><span>Object</span></a></h3><p>对象，在对象存储中，数据及其元数据的组合单元。</p><h3 id="object-storage" tabindex="-1"><a class="header-anchor" href="#object-storage"><span>Object Storage</span></a></h3><p>对象存储，以对象为基本单位进行存储的存储方式，通常通过HTTP RESTful API访问。</p><h3 id="osd-object-storage-daemon" tabindex="-1"><a class="header-anchor" href="#osd-object-storage-daemon"><span>OSD (Object Storage Daemon)</span></a></h3><p>对象存储守护进程，在Ceph中负责存储实际数据的组件。</p><h3 id="over-provisioning" tabindex="-1"><a class="header-anchor" href="#over-provisioning"><span>Over-provisioning</span></a></h3><p>超额配置，分配给系统的资源超过实际需求的做法，用于应对峰值负载。</p><h2 id="p" tabindex="-1"><a class="header-anchor" href="#p"><span>P</span></a></h2><h3 id="partitioning" tabindex="-1"><a class="header-anchor" href="#partitioning"><span>Partitioning</span></a></h3><p>分区，将大型数据库或文件系统分割成更小、更易管理的部分的过程。</p><h3 id="persistence" tabindex="-1"><a class="header-anchor" href="#persistence"><span>Persistence</span></a></h3><p>持久性，数据在系统关闭或重启后仍然保持不变的特性。</p><h3 id="posix-portable-operating-system-interface" tabindex="-1"><a class="header-anchor" href="#posix-portable-operating-system-interface"><span>POSIX (Portable Operating System Interface)</span></a></h3><p>可移植操作系统接口，定义了操作系统应该提供的标准API集合。</p><h3 id="pool" tabindex="-1"><a class="header-anchor" href="#pool"><span>Pool</span></a></h3><p>存储池，在Ceph中用于组织和管理存储资源的逻辑分组。</p><h3 id="provisioning" tabindex="-1"><a class="header-anchor" href="#provisioning"><span>Provisioning</span></a></h3><p>配置，为系统或服务分配和配置资源的过程。</p><h3 id="pv-persistent-volume" tabindex="-1"><a class="header-anchor" href="#pv-persistent-volume"><span>PV (Persistent Volume)</span></a></h3><p>持久卷，Kubernetes中用于提供持久化存储的资源对象。</p><h3 id="pvc-persistent-volume-claim" tabindex="-1"><a class="header-anchor" href="#pvc-persistent-volume-claim"><span>PVC (Persistent Volume Claim)</span></a></h3><p>持久卷声明，Kubernetes中用于申请持久化存储的资源对象。</p><h2 id="q" tabindex="-1"><a class="header-anchor" href="#q"><span>Q</span></a></h2><h3 id="quorum" tabindex="-1"><a class="header-anchor" href="#quorum"><span>Quorum</span></a></h3><p>法定人数，在分布式系统中达成一致决策所需的最小节点数。</p><h3 id="quota" tabindex="-1"><a class="header-anchor" href="#quota"><span>Quota</span></a></h3><p>配额，限制用户或组可以使用的资源量的机制。</p><h2 id="r" tabindex="-1"><a class="header-anchor" href="#r"><span>R</span></a></h2><h3 id="raid-redundant-array-of-independent-disks" tabindex="-1"><a class="header-anchor" href="#raid-redundant-array-of-independent-disks"><span>RAID (Redundant Array of Independent Disks)</span></a></h3><p>独立磁盘冗余阵列，通过组合多个磁盘来提高性能和可靠性的技术。</p><h3 id="read-ahead" tabindex="-1"><a class="header-anchor" href="#read-ahead"><span>Read-ahead</span></a></h3><p>预读，在读取数据时提前加载可能需要的数据块以提高性能的技术。</p><h3 id="redundancy" tabindex="-1"><a class="header-anchor" href="#redundancy"><span>Redundancy</span></a></h3><p>冗余，通过重复存储数据或组件来提高系统可靠性和可用性的技术。</p><h3 id="replica" tabindex="-1"><a class="header-anchor" href="#replica"><span>Replica</span></a></h3><p>副本，数据或服务的拷贝，用于提高可用性和可靠性。</p><h3 id="replication" tabindex="-1"><a class="header-anchor" href="#replication"><span>Replication</span></a></h3><p>复制，创建和维护数据或服务副本的过程。</p><h3 id="rgw-rados-gateway" tabindex="-1"><a class="header-anchor" href="#rgw-rados-gateway"><span>RGW (RADOS Gateway)</span></a></h3><p>RADOS网关，Ceph中提供S3和Swift兼容对象存储接口的组件。</p><h3 id="rook" tabindex="-1"><a class="header-anchor" href="#rook"><span>Rook</span></a></h3><p>一个开源的云原生存储编排平台，为Kubernetes提供存储服务。</p><h2 id="s" tabindex="-1"><a class="header-anchor" href="#s"><span>S</span></a></h2><h3 id="san-storage-area-network" tabindex="-1"><a class="header-anchor" href="#san-storage-area-network"><span>SAN (Storage Area Network)</span></a></h3><p>存储区域网络，专门用于连接计算机和存储设备的高速网络。</p><h3 id="scale-out" tabindex="-1"><a class="header-anchor" href="#scale-out"><span>Scale-out</span></a></h3><p>横向扩展，通过增加更多节点来扩展系统容量和性能的方法。</p><h3 id="scale-up" tabindex="-1"><a class="header-anchor" href="#scale-up"><span>Scale-up</span></a></h3><p>纵向扩展，通过增加单个节点的资源来扩展系统容量和性能的方法。</p><h3 id="scsi-small-computer-system-interface" tabindex="-1"><a class="header-anchor" href="#scsi-small-computer-system-interface"><span>SCSI (Small Computer System Interface)</span></a></h3><p>小型计算机系统接口，用于计算机和存储设备之间通信的标准协议。</p><h3 id="sdd-software-defined-datacenter" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-datacenter"><span>SDD (Software-Defined Datacenter)</span></a></h3><p>软件定义数据中心，通过软件定义和管理数据中心资源的架构。</p><h3 id="sdd-software-defined-drive" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-drive"><span>SDD (Software-Defined Drive)</span></a></h3><p>软件定义驱动器，通过软件实现的虚拟存储设备。</p><h3 id="sdd-software-defined-storage" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-storage"><span>SDD (Software-Defined Storage)</span></a></h3><p>软件定义存储，通过软件实现存储功能和服务的架构。</p><h3 id="sdd-software-defined-data" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data"><span>SDD (Software-Defined Data)</span></a></h3><p>软件定义数据，通过软件管理和处理数据的方法。</p><h3 id="sdd-software-defined-data-management" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-management"><span>SDD (Software-Defined Data Management)</span></a></h3><p>软件定义数据管理，通过软件实现数据管理功能的方法。</p><h3 id="sdd-software-defined-data-protection" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-protection"><span>SDD (Software-Defined Data Protection)</span></a></h3><p>软件定义数据保护，通过软件实现数据保护功能的方法。</p><h3 id="sdd-software-defined-data-services" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-services"><span>SDD (Software-Defined Data Services)</span></a></h3><p>软件定义数据服务，通过软件提供数据相关服务的方法。</p><h3 id="sdd-software-defined-data-strategy" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-strategy"><span>SDD (Software-Defined Data Strategy)</span></a></h3><p>软件定义数据战略，通过软件实现数据战略目标的方法。</p><h3 id="sdd-software-defined-data-security" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-security"><span>SDD (Software-Defined Data Security)</span></a></h3><p>软件定义数据安全，通过软件实现数据安全保护的方法。</p><h3 id="sdd-software-defined-data-storage" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-storage"><span>SDD (Software-Defined Data Storage)</span></a></h3><p>软件定义数据存储，通过软件实现数据存储功能的方法。</p><h3 id="sdd-software-defined-data-system" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-system"><span>SDD (Software-Defined Data System)</span></a></h3><p>软件定义数据系统，通过软件实现数据系统的架构。</p><h3 id="sdd-software-defined-data-technology" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-technology"><span>SDD (Software-Defined Data Technology)</span></a></h3><p>软件定义数据技术，通过软件实现数据处理的技术。</p><h3 id="sdd-software-defined-data-transformation" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-transformation"><span>SDD (Software-Defined Data Transformation)</span></a></h3><p>软件定义数据转换，通过软件实现数据转换的方法。</p><h3 id="sdd-software-defined-data-transfer" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-transfer"><span>SDD (Software-Defined Data Transfer)</span></a></h3><p>软件定义数据传输，通过软件实现数据传输的方法。</p><h3 id="sdd-software-defined-data-transport" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-transport"><span>SDD (Software-Defined Data Transport)</span></a></h3><p>软件定义数据传输，通过软件实现数据传输的方法。</p><h3 id="sdd-software-defined-data-trust" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-trust"><span>SDD (Software-Defined Data Trust)</span></a></h3><p>软件定义数据信任，通过软件实现数据信任机制的方法。</p><h3 id="sdd-software-defined-data-type" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-type"><span>SDD (Software-Defined Data Type)</span></a></h3><p>软件定义数据类型，通过软件定义的数据类型。</p><h3 id="sdd-software-defined-data-usage" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-usage"><span>SDD (Software-Defined Data Usage)</span></a></h3><p>软件定义数据使用，通过软件实现数据使用管理的方法。</p><h3 id="sdd-software-defined-data-utility" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-utility"><span>SDD (Software-Defined Data Utility)</span></a></h3><p>软件定义数据工具，通过软件实现的数据工具。</p><h3 id="sdd-software-defined-data-validation" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-validation"><span>SDD (Software-Defined Data Validation)</span></a></h3><p>软件定义数据验证，通过软件实现数据验证的方法。</p><h3 id="sdd-software-defined-data-value" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-value"><span>SDD (Software-Defined Data Value)</span></a></h3><p>软件定义数据价值，通过软件实现数据价值的方法。</p><h3 id="sdd-software-defined-data-verification" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-verification"><span>SDD (Software-Defined Data Verification)</span></a></h3><p>软件定义数据验证，通过软件实现数据验证的方法。</p><h3 id="sdd-software-defined-data-version" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-version"><span>SDD (Software-Defined Data Version)</span></a></h3><p>软件定义数据版本，通过软件实现数据版本管理的方法。</p><h3 id="sdd-software-defined-data-visualization" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-visualization"><span>SDD (Software-Defined Data Visualization)</span></a></h3><p>软件定义数据可视化，通过软件实现数据可视化的方法。</p><h3 id="sdd-software-defined-data-warehouse" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-warehouse"><span>SDD (Software-Defined Data Warehouse)</span></a></h3><p>软件定义数据仓库，通过软件实现数据仓库的方法。</p><h3 id="sdd-software-defined-data-workflow" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-workflow"><span>SDD (Software-Defined Data Workflow)</span></a></h3><p>软件定义数据工作流，通过软件实现数据工作流的方法。</p><h3 id="sdd-software-defined-data-zone" tabindex="-1"><a class="header-anchor" href="#sdd-software-defined-data-zone"><span>SDD (Software-Defined Data Zone)</span></a></h3><p>软件定义数据区域，通过软件实现数据区域管理的方法.</p><h3 id="s3-simple-storage-service" tabindex="-1"><a class="header-anchor" href="#s3-simple-storage-service"><span>S3 (Simple Storage Service)</span></a></h3><p>简单存储服务，Amazon提供的对象存储服务，已成为云存储的事实标准。</p><h3 id="san-storage-area-network-1" tabindex="-1"><a class="header-anchor" href="#san-storage-area-network-1"><span>SAN (Storage Area Network)</span></a></h3><p>存储区域网络，专门用于连接计算机和存储设备的高速网络。</p><h3 id="scale-out-1" tabindex="-1"><a class="header-anchor" href="#scale-out-1"><span>Scale-out</span></a></h3><p>横向扩展，通过增加更多节点来扩展系统容量和性能的方法。</p><h3 id="scale-up-1" tabindex="-1"><a class="header-anchor" href="#scale-up-1"><span>Scale-up</span></a></h3><p>纵向扩展，通过增加单个节点的资源来扩展系统容量和性能的方法。</p><h3 id="scsi-small-computer-system-interface-1" tabindex="-1"><a class="header-anchor" href="#scsi-small-computer-system-interface-1"><span>SCSI (Small Computer System Interface)</span></a></h3><p>小型计算机系统接口，用于计算机和存储设备之间通信的标准协议。</p><h3 id="snapshot" tabindex="-1"><a class="header-anchor" href="#snapshot"><span>Snapshot</span></a></h3><p>快照，文件系统或存储卷在特定时间点的只读副本，用于备份和恢复。</p><h3 id="ssd-solid-state-drive" tabindex="-1"><a class="header-anchor" href="#ssd-solid-state-drive"><span>SSD (Solid State Drive)</span></a></h3><p>固态硬盘，使用闪存芯片作为存储介质的存储设备，具有高速读写性能。</p><h3 id="storage-class" tabindex="-1"><a class="header-anchor" href="#storage-class"><span>Storage Class</span></a></h3><p>存储类别，在Kubernetes中定义不同存储特性和服务质量的资源对象。</p><h3 id="storage-pool" tabindex="-1"><a class="header-anchor" href="#storage-pool"><span>Storage Pool</span></a></h3><p>存储池，用于组织和管理存储资源的逻辑分组。</p><h3 id="stripe" tabindex="-1"><a class="header-anchor" href="#stripe"><span>Stripe</span></a></h3><p>条带化，将数据分割成多个部分并分布存储在不同设备上的技术，用于提高性能。</p><h3 id="strong-consistency" tabindex="-1"><a class="header-anchor" href="#strong-consistency"><span>Strong Consistency</span></a></h3><p>强一致性，在分布式系统中，所有节点在同一时间看到相同数据的特性。</p><h2 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h2><h3 id="tenant" tabindex="-1"><a class="header-anchor" href="#tenant"><span>Tenant</span></a></h3><p>租户，在多租户系统中，独立的用户或组织。</p><h3 id="throughput" tabindex="-1"><a class="header-anchor" href="#throughput"><span>Throughput</span></a></h3><p>吞吐量，单位时间内系统能够处理的数据量。</p><h3 id="tiered-storage" tabindex="-1"><a class="header-anchor" href="#tiered-storage"><span>Tiered Storage</span></a></h3><p>分层存储，根据数据访问频率和重要性将数据存储在不同性能和成本特性的存储介质上的策略。</p><h3 id="transaction" tabindex="-1"><a class="header-anchor" href="#transaction"><span>Transaction</span></a></h3><p>事务，数据库中作为单个工作单元执行的一系列操作。</p><h2 id="u" tabindex="-1"><a class="header-anchor" href="#u"><span>U</span></a></h2><h3 id="unstructured-data" tabindex="-1"><a class="header-anchor" href="#unstructured-data"><span>Unstructured Data</span></a></h3><p>非结构化数据，没有预定义数据模型或组织方式的数据，如文档、图片、视频等。</p><h3 id="uplink" tabindex="-1"><a class="header-anchor" href="#uplink"><span>Uplink</span></a></h3><p>上行链路，从客户端到服务器的数据传输链路。</p><h2 id="v" tabindex="-1"><a class="header-anchor" href="#v"><span>V</span></a></h2><h3 id="volume" tabindex="-1"><a class="header-anchor" href="#volume"><span>Volume</span></a></h3><p>卷，存储系统中的逻辑存储单元，可以被挂载和使用。</p><h3 id="volume-manager" tabindex="-1"><a class="header-anchor" href="#volume-manager"><span>Volume Manager</span></a></h3><p>卷管理器，用于管理存储卷的软件工具。</p><h2 id="w" tabindex="-1"><a class="header-anchor" href="#w"><span>W</span></a></h2><h3 id="warm-storage" tabindex="-1"><a class="header-anchor" href="#warm-storage"><span>Warm Storage</span></a></h3><p>温存储，性能和成本介于热存储和冷存储之间的存储层级。</p><h3 id="write-ahead-log" tabindex="-1"><a class="header-anchor" href="#write-ahead-log"><span>Write-ahead Log</span></a></h3><p>预写日志，在执行实际写操作之前先将操作记录到日志中的技术，用于保证数据一致性。</p><h2 id="z" tabindex="-1"><a class="header-anchor" href="#z"><span>Z</span></a></h2><h3 id="zone" tabindex="-1"><a class="header-anchor" href="#zone"><span>Zone</span></a></h3><p>区域，在分布式系统中用于实现故障隔离的逻辑分组。</p><p>通过理解这些专业术语，读者可以更好地掌握分布式文件存储系统的核心概念和技术原理，为实际应用和系统设计提供理论基础。</p>',288)])])}const o=e(r,[["render",t]]),c=JSON.parse('{"path":"/posts/distributed-file/090-appendix-c-glossary.html","title":"附录C：术语表-分布式文件存储系统专业术语解释","lang":"zh-CN","frontmatter":{"title":"附录C：术语表-分布式文件存储系统专业术语解释","date":"2025-09-07T00:00:00.000Z","categories":["DistributedFile"],"tags":["distributed-file"],"published":true,"description":"分布式文件存储系统涉及众多专业术语和概念，为了帮助读者更好地理解和使用本手册内容，本附录提供了相关术语的详细解释。这些术语涵盖了架构设计、数据管理、性能优化、安全防护等多个方面，是理解和应用分布式存储技术的基础。 A ACL (Access Control List) 访问控制列表，用于定义用户或用户组对文件或目录的访问权限。ACL提供了比传统UNIX...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"附录C：术语表-分布式文件存储系统专业术语解释\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-09-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-07T09:06:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-middleware/posts/distributed-file/090-appendix-c-glossary.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"附录C：术语表-分布式文件存储系统专业术语解释"}],["meta",{"property":"og:description","content":"分布式文件存储系统涉及众多专业术语和概念，为了帮助读者更好地理解和使用本手册内容，本附录提供了相关术语的详细解释。这些术语涵盖了架构设计、数据管理、性能优化、安全防护等多个方面，是理解和应用分布式存储技术的基础。 A ACL (Access Control List) 访问控制列表，用于定义用户或用户组对文件或目录的访问权限。ACL提供了比传统UNIX..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T09:06:09.000Z"}],["meta",{"property":"article:tag","content":"distributed-file"}],["meta",{"property":"article:published_time","content":"2025-09-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T09:06:09.000Z"}]]},"git":{"createdTime":1757231883000,"updatedTime":1757235969000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":14.08,"words":4225},"filePathRelative":"posts/distributed-file/090-appendix-c-glossary.md","excerpt":"<p>分布式文件存储系统涉及众多专业术语和概念，为了帮助读者更好地理解和使用本手册内容，本附录提供了相关术语的详细解释。这些术语涵盖了架构设计、数据管理、性能优化、安全防护等多个方面，是理解和应用分布式存储技术的基础。</p>\\n<h2>A</h2>\\n<h3>ACL (Access Control List)</h3>\\n<p>访问控制列表，用于定义用户或用户组对文件或目录的访问权限。ACL提供了比传统UNIX权限更细粒度的访问控制机制。</p>\\n<h3>ACID</h3>\\n<p>数据库事务的四个基本特性：原子性(Atomicity)、一致性(Consistency)、隔离性(Isolation)、持久性(Durability)。在分布式存储系统中，实现ACID特性是一个重要挑战。</p>","autoDesc":true}');export{o as comp,c as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as r,o as i}from"./app-8UyD4ORD.js";const s={};function h(t,a){return i(),n("div",null,[...a[0]||(a[0]=[r('<p>为了帮助读者更好地理解和使用本系列文档中的专业术语，本附录提供了分布式限流领域常用术语的详细解释和定义。这些术语涵盖了限流算法、系统架构、性能指标、安全防护等多个方面，为读者构建完整的知识体系提供参考。</p><h2 id="a" tabindex="-1"><a class="header-anchor" href="#a"><span>A</span></a></h2><h3 id="api网关-api-gateway" tabindex="-1"><a class="header-anchor" href="#api网关-api-gateway"><span>API网关 (API Gateway)</span></a></h3><p>一种服务器，作为API的入口点，负责接收客户端请求并将其路由到相应的后端服务。API网关通常提供限流、认证、监控等功能。</p><h3 id="自适应限流-adaptive-rate-limiting" tabindex="-1"><a class="header-anchor" href="#自适应限流-adaptive-rate-limiting"><span>自适应限流 (Adaptive Rate Limiting)</span></a></h3><p>一种动态调整限流阈值的策略，根据系统实时负载情况（如CPU使用率、内存使用率、响应时间等）自动调整限流参数。</p><h2 id="b" tabindex="-1"><a class="header-anchor" href="#b"><span>B</span></a></h2><h3 id="桶容量-bucket-capacity" tabindex="-1"><a class="header-anchor" href="#桶容量-bucket-capacity"><span>桶容量 (Bucket Capacity)</span></a></h3><p>在令牌桶算法中，令牌桶能够存储的最大令牌数量。当桶满时，新生成的令牌会被丢弃。</p><h2 id="c" tabindex="-1"><a class="header-anchor" href="#c"><span>C</span></a></h2><h3 id="令牌桶算法-token-bucket-algorithm" tabindex="-1"><a class="header-anchor" href="#令牌桶算法-token-bucket-algorithm"><span>令牌桶算法 (Token Bucket Algorithm)</span></a></h3><p>一种限流算法，系统以恒定速率向桶中添加令牌，请求需要消耗令牌才能被处理。桶可以存储一定数量的令牌，支持突发流量。</p><h3 id="漏桶算法-leaky-bucket-algorithm" tabindex="-1"><a class="header-anchor" href="#漏桶算法-leaky-bucket-algorithm"><span>漏桶算法 (Leaky Bucket Algorithm)</span></a></h3><p>一种限流算法，请求被放入一个固定容量的桶中，系统以恒定速率从桶中取出请求进行处理。当桶满时，新请求被拒绝。</p><h3 id="固定窗口计数器-fixed-window-counter" tabindex="-1"><a class="header-anchor" href="#固定窗口计数器-fixed-window-counter"><span>固定窗口计数器 (Fixed Window Counter)</span></a></h3><p>一种简单的限流算法，在固定时间窗口内统计请求数量，超过阈值则拒绝后续请求，直到窗口重置。</p><h3 id="滑动窗口计数器-sliding-window-counter" tabindex="-1"><a class="header-anchor" href="#滑动窗口计数器-sliding-window-counter"><span>滑动窗口计数器 (Sliding Window Counter)</span></a></h3><p>一种改进的限流算法，通过维护一个时间窗口内的请求记录，实现更精确的流量控制。</p><h3 id="熔断器-circuit-breaker" tabindex="-1"><a class="header-anchor" href="#熔断器-circuit-breaker"><span>熔断器 (Circuit Breaker)</span></a></h3><p>一种保护机制，当服务调用失败率达到阈值时，暂时停止调用该服务，避免故障扩散。</p><h2 id="d" tabindex="-1"><a class="header-anchor" href="#d"><span>D</span></a></h2><h3 id="分布式限流-distributed-rate-limiting" tabindex="-1"><a class="header-anchor" href="#分布式限流-distributed-rate-limiting"><span>分布式限流 (Distributed Rate Limiting)</span></a></h3><p>在分布式系统中实现的限流机制，能够跨多个服务实例统一控制流量。</p><h3 id="降级-degradation" tabindex="-1"><a class="header-anchor" href="#降级-degradation"><span>降级 (Degradation)</span></a></h3><p>当系统负载过高或部分功能不可用时，暂时关闭或简化某些非核心功能，保证核心功能正常运行。</p><h2 id="e" tabindex="-1"><a class="header-anchor" href="#e"><span>E</span></a></h2><h3 id="事件驱动-event-driven" tabindex="-1"><a class="header-anchor" href="#事件驱动-event-driven"><span>事件驱动 (Event-Driven)</span></a></h3><p>一种系统架构模式，系统组件通过事件进行通信和协调，响应外部或内部发生的事件。</p><h2 id="f" tabindex="-1"><a class="header-anchor" href="#f"><span>F</span></a></h2><h3 id="限流维度-rate-limiting-dimension" tabindex="-1"><a class="header-anchor" href="#限流维度-rate-limiting-dimension"><span>限流维度 (Rate Limiting Dimension)</span></a></h3><p>用于区分不同限流策略的属性，如用户ID、IP地址、API路径等。</p><h3 id="限流粒度-rate-limiting-granularity" tabindex="-1"><a class="header-anchor" href="#限流粒度-rate-limiting-granularity"><span>限流粒度 (Rate Limiting Granularity)</span></a></h3><p>限流控制的精细程度，可以是全局、服务级别、用户级别等不同粒度。</p><h2 id="g" tabindex="-1"><a class="header-anchor" href="#g"><span>G</span></a></h2><h3 id="全局限流-global-rate-limiting" tabindex="-1"><a class="header-anchor" href="#全局限流-global-rate-limiting"><span>全局限流 (Global Rate Limiting)</span></a></h3><p>在整个分布式系统范围内实施的统一限流策略，确保全局流量不超过设定阈值。</p><h3 id="集群限流-cluster-rate-limiting" tabindex="-1"><a class="header-anchor" href="#集群限流-cluster-rate-limiting"><span>集群限流 (Cluster Rate Limiting)</span></a></h3><p>在服务集群范围内实施的限流策略，协调集群内各节点的流量分配。</p><h2 id="h" tabindex="-1"><a class="header-anchor" href="#h"><span>H</span></a></h2><h3 id="热点参数限流-hotspot-parameter-rate-limiting" tabindex="-1"><a class="header-anchor" href="#热点参数限流-hotspot-parameter-rate-limiting"><span>热点参数限流 (Hotspot Parameter Rate Limiting)</span></a></h3><p>针对特定参数值（如热门商品ID）实施的精细化限流策略，防止热点数据导致系统过载。</p><h2 id="i" tabindex="-1"><a class="header-anchor" href="#i"><span>I</span></a></h2><h3 id="令牌生成速率-token-generation-rate" tabindex="-1"><a class="header-anchor" href="#令牌生成速率-token-generation-rate"><span>令牌生成速率 (Token Generation Rate)</span></a></h3><p>在令牌桶算法中，系统向令牌桶添加令牌的速度，通常以每秒生成的令牌数表示。</p><h2 id="l" tabindex="-1"><a class="header-anchor" href="#l"><span>L</span></a></h2><h3 id="本地限流-local-rate-limiting" tabindex="-1"><a class="header-anchor" href="#本地限流-local-rate-limiting"><span>本地限流 (Local Rate Limiting)</span></a></h3><p>在单个服务实例上实施的限流策略，不考虑其他实例的流量情况。</p><h3 id="漏水速率-leak-rate" tabindex="-1"><a class="header-anchor" href="#漏水速率-leak-rate"><span>漏水速率 (Leak Rate)</span></a></h3><p>在漏桶算法中，系统从桶中取出请求进行处理的速度。</p><h2 id="m" tabindex="-1"><a class="header-anchor" href="#m"><span>M</span></a></h2><h3 id="监控指标-monitoring-metrics" tabindex="-1"><a class="header-anchor" href="#监控指标-monitoring-metrics"><span>监控指标 (Monitoring Metrics)</span></a></h3><p>用于衡量系统性能和健康状况的数据指标，如QPS、响应时间、错误率等。</p><h2 id="n" tabindex="-1"><a class="header-anchor" href="#n"><span>N</span></a></h2><h3 id="负载均衡-load-balancing" tabindex="-1"><a class="header-anchor" href="#负载均衡-load-balancing"><span>负载均衡 (Load Balancing)</span></a></h3><p>将网络请求分发到多个服务器实例的技术，确保各实例负载相对均衡。</p><h2 id="p" tabindex="-1"><a class="header-anchor" href="#p"><span>P</span></a></h2><h3 id="预热-warm-up" tabindex="-1"><a class="header-anchor" href="#预热-warm-up"><span>预热 (Warm Up)</span></a></h3><p>一种流量控制策略，在系统启动或恢复后逐步增加流量处理能力，避免瞬间高负载。</p><h2 id="q" tabindex="-1"><a class="header-anchor" href="#q"><span>Q</span></a></h2><h3 id="qps-queries-per-second" tabindex="-1"><a class="header-anchor" href="#qps-queries-per-second"><span>QPS (Queries Per Second)</span></a></h3><p>每秒查询数，衡量系统处理能力的重要性能指标。</p><h2 id="r" tabindex="-1"><a class="header-anchor" href="#r"><span>R</span></a></h2><h3 id="限流规则-rate-limiting-rule" tabindex="-1"><a class="header-anchor" href="#限流规则-rate-limiting-rule"><span>限流规则 (Rate Limiting Rule)</span></a></h3><p>定义限流策略的配置项，包括资源标识、限流阈值、时间窗口、限流算法等参数。</p><h3 id="redis-remote-dictionary-server" tabindex="-1"><a class="header-anchor" href="#redis-remote-dictionary-server"><span>Redis (Remote Dictionary Server)</span></a></h3><p>一个开源的内存数据结构存储系统，常用于实现分布式限流中的计数器存储。</p><h3 id="资源标识-resource-identifier" tabindex="-1"><a class="header-anchor" href="#资源标识-resource-identifier"><span>资源标识 (Resource Identifier)</span></a></h3><p>用于唯一标识被限流资源的字符串，如API路径、服务名称等。</p><h2 id="s" tabindex="-1"><a class="header-anchor" href="#s"><span>S</span></a></h2><h3 id="服务网格-service-mesh" tabindex="-1"><a class="header-anchor" href="#服务网格-service-mesh"><span>服务网格 (Service Mesh)</span></a></h3><p>一种基础设施层，用于处理服务间通信，通常提供流量管理、安全、监控等功能。</p><h3 id="滑动时间窗口-sliding-time-window" tabindex="-1"><a class="header-anchor" href="#滑动时间窗口-sliding-time-window"><span>滑动时间窗口 (Sliding Time Window)</span></a></h3><p>一种时间窗口模型，窗口随时间连续滑动，提供更精确的流量统计。</p><h3 id="熔断降级-circuit-breaker-and-degradation" tabindex="-1"><a class="header-anchor" href="#熔断降级-circuit-breaker-and-degradation"><span>熔断降级 (Circuit Breaker and Degradation)</span></a></h3><p>结合熔断器和降级机制的综合保护策略，提高系统的稳定性和可用性。</p><h2 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h2><h3 id="时间窗口-time-window" tabindex="-1"><a class="header-anchor" href="#时间窗口-time-window"><span>时间窗口 (Time Window)</span></a></h3><p>限流算法中用于统计请求数量的时间范围。</p><h3 id="触发次数-trigger-count" tabindex="-1"><a class="header-anchor" href="#触发次数-trigger-count"><span>触发次数 (Trigger Count)</span></a></h3><p>限流策略被激活的次数统计。</p><h2 id="u" tabindex="-1"><a class="header-anchor" href="#u"><span>U</span></a></h2><h3 id="用户透传-user-transparency" tabindex="-1"><a class="header-anchor" href="#用户透传-user-transparency"><span>用户透传 (User Transparency)</span></a></h3><p>限流机制对最终用户的透明性，用户无需感知限流的存在。</p><h2 id="w" tabindex="-1"><a class="header-anchor" href="#w"><span>W</span></a></h2><h3 id="等待队列-waiting-queue" tabindex="-1"><a class="header-anchor" href="#等待队列-waiting-queue"><span>等待队列 (Waiting Queue)</span></a></h3><p>在漏桶算法中，用于暂存待处理请求的队列。</p><h3 id="窗口重置-window-reset" tabindex="-1"><a class="header-anchor" href="#窗口重置-window-reset"><span>窗口重置 (Window Reset)</span></a></h3><p>固定窗口计数器中，时间窗口到达后重新开始计数的过程。</p><h2 id="x" tabindex="-1"><a class="header-anchor" href="#x"><span>X</span></a></h2><h3 id="协同同步-collaborative-synchronization" tabindex="-1"><a class="header-anchor" href="#协同同步-collaborative-synchronization"><span>协同同步 (Collaborative Synchronization)</span></a></h3><p>多个分布式节点之间协调同步状态信息的机制。</p><h2 id="y" tabindex="-1"><a class="header-anchor" href="#y"><span>Y</span></a></h2><h3 id="压测-pressure-testing" tabindex="-1"><a class="header-anchor" href="#压测-pressure-testing"><span>压测 (Pressure Testing)</span></a></h3><p>通过模拟高并发请求来测试系统性能和稳定性的过程。</p><h2 id="z" tabindex="-1"><a class="header-anchor" href="#z"><span>Z</span></a></h2><h3 id="zookeeper" tabindex="-1"><a class="header-anchor" href="#zookeeper"><span>ZooKeeper</span></a></h3><p>一个开源的分布式协调服务，可用于实现配置管理、服务发现等功能。</p><hr><h2 id="算法相关术语" tabindex="-1"><a class="header-anchor" href="#算法相关术语"><span>算法相关术语</span></a></h2><h3 id="算法复杂度-algorithm-complexity" tabindex="-1"><a class="header-anchor" href="#算法复杂度-algorithm-complexity"><span>算法复杂度 (Algorithm Complexity)</span></a></h3><p>衡量算法执行时间和空间需求的指标，通常用大O表示法描述。</p><h3 id="原子性-atomicity" tabindex="-1"><a class="header-anchor" href="#原子性-atomicity"><span>原子性 (Atomicity)</span></a></h3><p>操作要么全部成功，要么全部失败，不会出现部分执行的情况。</p><h3 id="一致性-consistency" tabindex="-1"><a class="header-anchor" href="#一致性-consistency"><span>一致性 (Consistency)</span></a></h3><p>在分布式系统中，确保数据在各个节点间保持一致的状态。</p><h3 id="可用性-availability" tabindex="-1"><a class="header-anchor" href="#可用性-availability"><span>可用性 (Availability)</span></a></h3><p>系统在面对故障时仍能提供服务的能力。</p><h3 id="分区容忍性-partition-tolerance" tabindex="-1"><a class="header-anchor" href="#分区容忍性-partition-tolerance"><span>分区容忍性 (Partition Tolerance)</span></a></h3><p>系统在出现网络分区时仍能继续运行的能力。</p><h2 id="系统架构术语" tabindex="-1"><a class="header-anchor" href="#系统架构术语"><span>系统架构术语</span></a></h2><h3 id="控制面-control-plane" tabindex="-1"><a class="header-anchor" href="#控制面-control-plane"><span>控制面 (Control Plane)</span></a></h3><p>负责系统配置、策略管理和协调控制的组件集合。</p><h3 id="数据面-data-plane" tabindex="-1"><a class="header-anchor" href="#数据面-data-plane"><span>数据面 (Data Plane)</span></a></h3><p>负责实际处理用户请求和执行限流策略的组件集合。</p><h3 id="高可用-high-availability" tabindex="-1"><a class="header-anchor" href="#高可用-high-availability"><span>高可用 (High Availability)</span></a></h3><p>系统能够持续提供服务，最大限度减少停机时间的能力。</p><h3 id="可扩展性-scalability" tabindex="-1"><a class="header-anchor" href="#可扩展性-scalability"><span>可扩展性 (Scalability)</span></a></h3><p>系统能够通过增加资源来处理更大负载的能力。</p><h3 id="容错性-fault-tolerance" tabindex="-1"><a class="header-anchor" href="#容错性-fault-tolerance"><span>容错性 (Fault Tolerance)</span></a></h3><p>系统在部分组件出现故障时仍能正常运行的能力。</p><h2 id="性能指标术语" tabindex="-1"><a class="header-anchor" href="#性能指标术语"><span>性能指标术语</span></a></h2><h3 id="延迟-latency" tabindex="-1"><a class="header-anchor" href="#延迟-latency"><span>延迟 (Latency)</span></a></h3><p>请求从发出到收到响应所花费的时间。</p><h3 id="吞吐量-throughput" tabindex="-1"><a class="header-anchor" href="#吞吐量-throughput"><span>吞吐量 (Throughput)</span></a></h3><p>系统在单位时间内能够处理的请求数量。</p><h3 id="并发数-concurrency" tabindex="-1"><a class="header-anchor" href="#并发数-concurrency"><span>并发数 (Concurrency)</span></a></h3><p>系统同时处理的请求数量。</p><h3 id="响应时间-response-time" tabindex="-1"><a class="header-anchor" href="#响应时间-response-time"><span>响应时间 (Response Time)</span></a></h3><p>系统处理请求并返回结果所需的时间。</p><h3 id="错误率-error-rate" tabindex="-1"><a class="header-anchor" href="#错误率-error-rate"><span>错误率 (Error Rate)</span></a></h3><p>在所有请求中，失败请求所占的比例。</p><h2 id="安全防护术语" tabindex="-1"><a class="header-anchor" href="#安全防护术语"><span>安全防护术语</span></a></h2><h3 id="ddos攻击-distributed-denial-of-service-attack" tabindex="-1"><a class="header-anchor" href="#ddos攻击-distributed-denial-of-service-attack"><span>DDoS攻击 (Distributed Denial of Service Attack)</span></a></h3><p>通过大量恶意请求耗尽系统资源，使其无法正常提供服务的攻击方式。</p><h3 id="cc攻击-challenge-collapsar-attack" tabindex="-1"><a class="header-anchor" href="#cc攻击-challenge-collapsar-attack"><span>CC攻击 (Challenge Collapsar Attack)</span></a></h3><p>针对应用层的DDoS攻击，通过大量HTTP请求消耗服务器资源。</p><h3 id="黑名单-blacklist" tabindex="-1"><a class="header-anchor" href="#黑名单-blacklist"><span>黑名单 (Blacklist)</span></a></h3><p>被禁止访问系统的IP地址、用户ID等标识列表。</p><h3 id="白名单-whitelist" tabindex="-1"><a class="header-anchor" href="#白名单-whitelist"><span>白名单 (Whitelist)</span></a></h3><p>被允许访问系统的IP地址、用户ID等标识列表。</p><h3 id="异常检测-anomaly-detection" tabindex="-1"><a class="header-anchor" href="#异常检测-anomaly-detection"><span>异常检测 (Anomaly Detection)</span></a></h3><p>通过分析系统行为模式识别异常活动的技术。</p><h2 id="配置管理术语" tabindex="-1"><a class="header-anchor" href="#配置管理术语"><span>配置管理术语</span></a></h2><h3 id="热更新-hot-update" tabindex="-1"><a class="header-anchor" href="#热更新-hot-update"><span>热更新 (Hot Update)</span></a></h3><p>在不重启系统的情况下更新配置或代码的能力。</p><h3 id="版本控制-version-control" tabindex="-1"><a class="header-anchor" href="#版本控制-version-control"><span>版本控制 (Version Control)</span></a></h3><p>管理配置或代码变更历史的系统。</p><h3 id="灰度发布-gray-release" tabindex="-1"><a class="header-anchor" href="#灰度发布-gray-release"><span>灰度发布 (Gray Release)</span></a></h3><p>逐步向用户推送新功能或配置的发布策略。</p><h3 id="配置中心-configuration-center" tabindex="-1"><a class="header-anchor" href="#配置中心-configuration-center"><span>配置中心 (Configuration Center)</span></a></h3><p>集中管理分布式系统配置信息的服务。</p><h2 id="监控运维术语" tabindex="-1"><a class="header-anchor" href="#监控运维术语"><span>监控运维术语</span></a></h2><h3 id="告警-alerting" tabindex="-1"><a class="header-anchor" href="#告警-alerting"><span>告警 (Alerting)</span></a></h3><p>当系统指标超出预设阈值时自动通知运维人员的机制。</p><h3 id="仪表盘-dashboard" tabindex="-1"><a class="header-anchor" href="#仪表盘-dashboard"><span>仪表盘 (Dashboard)</span></a></h3><p>以图形化方式展示系统状态和性能指标的界面。</p><h3 id="日志追踪-log-tracing" tabindex="-1"><a class="header-anchor" href="#日志追踪-log-tracing"><span>日志追踪 (Log Tracing)</span></a></h3><p>通过日志信息追踪请求在系统中的处理路径。</p><h3 id="根因分析-root-cause-analysis" tabindex="-1"><a class="header-anchor" href="#根因分析-root-cause-analysis"><span>根因分析 (Root Cause Analysis)</span></a></h3><p>分析系统故障根本原因的过程和方法。</p><h3 id="容量规划-capacity-planning" tabindex="-1"><a class="header-anchor" href="#容量规划-capacity-planning"><span>容量规划 (Capacity Planning)</span></a></h3><p>根据业务需求和系统性能预测未来资源需求的过程。</p><h2 id="云原生术语" tabindex="-1"><a class="header-anchor" href="#云原生术语"><span>云原生术语</span></a></h2><h3 id="容器化-containerization" tabindex="-1"><a class="header-anchor" href="#容器化-containerization"><span>容器化 (Containerization)</span></a></h3><p>将应用程序及其依赖打包到容器中的技术。</p><h3 id="kubernetes-k8s" tabindex="-1"><a class="header-anchor" href="#kubernetes-k8s"><span>Kubernetes (K8s)</span></a></h3><p>一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。</p><h3 id="自动扩缩容-auto-scaling" tabindex="-1"><a class="header-anchor" href="#自动扩缩容-auto-scaling"><span>自动扩缩容 (Auto Scaling)</span></a></h3><p>根据系统负载自动调整计算资源数量的机制。</p><h3 id="无服务器-serverless" tabindex="-1"><a class="header-anchor" href="#无服务器-serverless"><span>无服务器 (Serverless)</span></a></h3><p>一种云计算执行模型，开发者无需管理服务器基础设施。</p><h3 id="微服务-microservices" tabindex="-1"><a class="header-anchor" href="#微服务-microservices"><span>微服务 (Microservices)</span></a></h3><p>一种架构风格，将应用程序构建为一组小型、独立的服务。</p><hr><p>本术语表涵盖了分布式限流系统涉及的主要概念和术语，随着技术的发展和实践的深入，部分内容可能会有所调整和补充。建议读者在阅读本系列文档时，结合实际应用场景理解这些术语的含义和用法。</p>',175)])])}const o=e(s,[["render",h]]),c=JSON.parse('{"path":"/posts/distributed-flow-control/048-appendix-d-glossary.html","title":"附录D: 术语表","lang":"zh-CN","frontmatter":{"title":"附录D: 术语表","date":"2025-09-07T00:00:00.000Z","categories":["DistributedFlowControl"],"tags":["DistributedFlowControl"],"published":true,"description":"为了帮助读者更好地理解和使用本系列文档中的专业术语，本附录提供了分布式限流领域常用术语的详细解释和定义。这些术语涵盖了限流算法、系统架构、性能指标、安全防护等多个方面，为读者构建完整的知识体系提供参考。 A API网关 (API Gateway) 一种服务器，作为API的入口点，负责接收客户端请求并将其路由到相应的后端服务。API网关通常提供限流、认证...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"附录D: 术语表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-09-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-07T09:06:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-middleware/posts/distributed-flow-control/048-appendix-d-glossary.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"附录D: 术语表"}],["meta",{"property":"og:description","content":"为了帮助读者更好地理解和使用本系列文档中的专业术语，本附录提供了分布式限流领域常用术语的详细解释和定义。这些术语涵盖了限流算法、系统架构、性能指标、安全防护等多个方面，为读者构建完整的知识体系提供参考。 A API网关 (API Gateway) 一种服务器，作为API的入口点，负责接收客户端请求并将其路由到相应的后端服务。API网关通常提供限流、认证..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T09:06:09.000Z"}],["meta",{"property":"article:tag","content":"DistributedFlowControl"}],["meta",{"property":"article:published_time","content":"2025-09-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T09:06:09.000Z"}]]},"git":{"createdTime":1757231883000,"updatedTime":1757235969000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":8.23,"words":2470},"filePathRelative":"posts/distributed-flow-control/048-appendix-d-glossary.md","excerpt":"<p>为了帮助读者更好地理解和使用本系列文档中的专业术语，本附录提供了分布式限流领域常用术语的详细解释和定义。这些术语涵盖了限流算法、系统架构、性能指标、安全防护等多个方面，为读者构建完整的知识体系提供参考。</p>\\n<h2>A</h2>\\n<h3>API网关 (API Gateway)</h3>\\n<p>一种服务器，作为API的入口点，负责接收客户端请求并将其路由到相应的后端服务。API网关通常提供限流、认证、监控等功能。</p>\\n<h3>自适应限流 (Adaptive Rate Limiting)</h3>\\n<p>一种动态调整限流阈值的策略，根据系统实时负载情况（如CPU使用率、内存使用率、响应时间等）自动调整限流参数。</p>","autoDesc":true}');export{o as comp,c as data};

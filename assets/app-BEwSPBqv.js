const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index.html-CbiOfQyS.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/intro.html-BDe3l-UX.js","assets/1-1-1-api-gateway-definition-and-positioning.html-BpZeSkjs.js","assets/1-1-2-api-gateway-role-in-microservices-evolution.html-DRsihg0J.js","assets/1-1-3-differences-between-api-gateway-and-other-components.html-kPXwS56k.js","assets/1-1-what-is-api-gateway.html-5K5msGYr.js","assets/1-2-1-api-gateway-request-routing.html-BM3zf_fN.js","assets/1-2-2-api-gateway-protocol-conversion.html-BpmrmN_h.js","assets/1-2-3-api-gateway-security-authentication-authorization.html-C3Zzg6H0.js","assets/1-2-4-api-gateway-rate-limiting-circuit-breaker-degradation.html-fUZU_-E5.js","assets/1-2-5-api-gateway-logging-monitoring.html-C7dWJ5MG.js","assets/1-2-api-gateway-core-responsibilities.html-C15TZomn.js","assets/1-3-1-collaboration-with-service-registration-discovery.html-BqjpooM5.js","assets/1-3-2-relationship-with-configuration-center-message-queue.html-Bdyw2QXb.js","assets/1-3-3-api-gateway-position-in-service-governance-system.html-BHty2dVe.js","assets/1-3-api-gateway-and-microservices-architecture.html-BSN7DsLl.js","assets/1-4-1-static-and-dynamic-routing-implementation.html-lDB77qdF.js","assets/1-4-2-reverse-proxy-implementation-principles.html-ClxADRUB.js","assets/1-4-3-multi-protocol-support-implementation.html-EFEtRXJ7.js","assets/1-4-request-routing-and-forwarding-mechanisms.html-CYrc-LOI.js","assets/2-5-1-identity-authentication-mechanisms.html-BYJ2Zmv2.js","assets/2-5-2-authorization-and-rbac-model.html-Ya4qAM1b.js","assets/2-5-api-gateway-security-mechanisms.html-D65fvNJl.js","assets/index.html-CXdb9Fq4.js","assets/index-desc.html-Ck986vpB.js","assets/1-1-what-is-distributed-transaction.html-BzSB2T-O.js","assets/1-2-distributed-transaction-pain-points.html-_knzdLTq.js","assets/1-3-distributed-transaction-theoretical-models.html-sLBu4F7M.js","assets/2-1-local-transaction-message-queue.html-C6uwHw7V.js","assets/2-2-tcc-try-confirm-cancel.html-BxXWJZaf.js","assets/2-3-saga-pattern.html-BRVMNDYc.js","assets/2-4-other-patterns-and-practices.html-D5knhu0D.js","assets/3-1-seata-deep-dive.html-DjA8-a82.js","assets/3-2-spring-cloud-transaction-management.html-p7C_v6k0.js","assets/3-3-other-frameworks-analysis.html-CqtZpVla.js","assets/4-1-idempotency-design-guarantee.html-Bu-6ckP8.js","assets/4-2-transaction-monitoring-tracing.html-BiDutxhh.js","assets/4-3-high-concurrency-performance-optimization.html-2oUi3VJr.js","assets/4-4-cap-trade-offs-distributed-transactions.html-CQ7uz7aj.js","assets/5-1-ecommerce-flash-sale-inventory-transaction.html-BncT17To.js","assets/5-2-financial-system-transaction-case.html-ZsfBxvGX.js","assets/5-3-big-data-message-transaction.html-rnDjTBaN.js","assets/index-desc.html-zeG6nEbB.js","assets/1-1-0_Cache_Basics_Overview.html-jgCYQWDO.js","assets/1-1-1_Why_Cache_Is_Needed.html-CVg8w5dE.js","assets/1-1-2_Cache_Applicable_Scenarios_And_Risks.html-BHzCRZZX.js","assets/1-1-3_Local_Cache_vs_Distributed_Cache.html-DWtnGc3B.js","assets/1-1-4_Cache_Advantages_And_Challenges.html-gmlY2Iyy.js","assets/1-2-0_Distributed_Cache_Core_Principles_Overview.html-ip-1sIfR.js","assets/1-2-1_Distributed_Architecture_Cache_Requirements.html-DJt4Fp5X.js","assets/1-2-2_CAP_Theorem_And_Cache_System_Tradeoffs.html-rEBgx2_7.js","assets/1-2-3_Consistent_Hashing_And_Node_Sharding.html-IaM8zw7b.js","assets/1-2-4_Cache_And_Database_Relationship.html-CMAXEtCU.js","assets/1-3-0_Common_Distributed_Cache_Selection_Overview.html-BZvL47b1.js","assets/1-3-1_Memcached_Lightweight_High_Speed_Cache.html-BaYn0kea.js","assets/1-3-2_Redis_All_Powerful_Cache_Database.html-DmbAOQ1V.js","assets/1-3-3_Tair_Couchbase_Aerospike_Introduction.html-DArl9sXv.js","assets/1-3-4_How_To_Choose_Cache_Technology.html-CWHezKsC.js","assets/1-4-0_Cache_Patterns_And_Design_Strategies_Overview.html-BxOA9Kig.js","assets/1-4-1_Cache_Patterns_And_Design_Strategies.html-DyeLJFj6.js","assets/1-4-2_Cache_Expiration_And_Update_Strategies.html-Cs-0GKGT.js","assets/1-4-3_Cache_And_Database_Consistency.html-D8fn-qbW.js","assets/1-5-0_Redis_Basics_And_Core_Data_Structures_Overview.html-DZGt4Tiy.js","assets/1-5-1_Redis_Basics_And_Core_Data_Structures.html-BhVLhdev.js","assets/1-5-2_Redis_Advanced_Features_And_Extensions.html-CY5m0OB6.js","assets/1-5-3_Redis_Cluster_Principles_And_Applications.html-h67-ghCj.js","assets/1-6-0_Memcached_In_Action_Overview.html-BczwNZor.js","assets/1-6-1_Memcached_Architecture_And_Working_Principles.html-DodGa4tw.js","assets/1-6-2_Memcached_Memory_Management_And_LRU_Eviction_Strategy.html-fNBttrQU.js","assets/1-6-3_Memcached_And_Redis_Comparison_And_Combined_Use.html-DDEd2pvI.js","assets/1-7-0_Redis_Basics_And_Core_Data_Structures_Overview.html-DdNLos_w.js","assets/1-7-1_Redis_Core_Data_Structures_In_Depth.html-B5CbXgJr.js","assets/1-7-2_Redis_Transactions_And_Lua_Scripts.html-76H6uo6L.js","assets/1-8-0_Redis_Advanced_Features_And_Extensions_Overview.html-DyCfwfqa.js","assets/1-8-1_Redis_Persistence_Mechanisms.html-DgmaKIUK.js","assets/1-8-2_Redis_PubSub_And_Stream.html-ZA5Khtw4.js","assets/1-8-3_Redis_Modules_Extensions.html-DfjH4M0i.js","assets/1-8-4_Redis_Cluster_Principles_And_Applications.html-BtSCFuxe.js","assets/1-9-0_Memcached_In_Action_Overview.html-CHUT_mUF.js","assets/index-desc.html-5aCdFyPp.js","assets/1-1-why-message-queues.html-DqIZhbNF.js","assets/1-2-system-communication-comparison.html-CCiYi7qd.js","assets/1-3-mq-benefits-risks.html-Bua6IYOc.js","assets/2-1-message-queue-basic-concepts-overview.html-DW8Y3owC.js","assets/2-2-point-to-point-vs-publish-subscribe-in-depth.html-oYI2FQzf.js","assets/2-3-push-vs-pull-consumption-in-depth.html-UUWn2uHf.js","assets/3-1-message-queue-core-elements-overview.html-B1bixObt.js","assets/3-2-producers-brokers-consumers-in-depth.html-DWbv0PwP.js","assets/3-3-message-persistence-in-depth.html-DIydcdHg.js","assets/4-1-message-reliability-consistency.html-DD4i88wb.js","assets/4-2-delivery-semantics-details.html-BaQpllSg.js","assets/4-3-message-loss-duplication-ordering.html-DhrNpH2c.js","assets/4-4-idempotency-design.html-C4KgOrgR.js","assets/index.html-D-y90OcF.js","assets/index-desc.html-Dqj8nnbf.js","assets/1-1-1-evolution-from-monolith-to-microservices.html-DvYtl5xj.js","assets/1-2-1-service-registration-discovery-and-heartbeat.html-CeDcBEq3.js","assets/2-1-minimal-viable-registry.html-DyGJ5MYy.js","assets/2-2-config-center-prototype.html-V62kx3Un.js","assets/2-3-persistence-and-high-availability-design.html-B00thb4j.js","assets/3-1-zookeeper.html-CtxZkahI.js","assets/3-2-eureka.html-B8WRPulN.js","assets/3-3-consul.html-DEzGzPA4.js","assets/3-4-nacos.html-DZ2dQKZ2.js","assets/3-5-1-apollo-namespace-cluster-model.html-BZIo2bQs.js","assets/3-5-2-apollo-config-publishing-and-gray-release.html-KSBcHvVm.js","assets/3-5-3-apollo-client-cache-and-rollback.html-DPWtvQxq.js","assets/3-5-4-apollo-enterprise-best-practices.html-CphMb3fL.js","assets/4-1-service-discovery-patterns.html-CiOgpltA.js","assets/4-2-config-center-advanced-features.html-Dd909GeE.js","assets/4-3-consistency-and-high-availability.html-Dhs7c8Ca.js","assets/4-4-performance-and-scalability-optimization.html-C6TiaSbQ.js","assets/5-1-service-registry-and-config-center-in-e-commerce.html-Dw1nQyFC.js","assets/5-2-enterprise-best-practices.html-CMyIE4Fv.js","assets/5-3-monitoring-and-operations.html-CFnigYiA.js","assets/6-1-cloud-native-and-service-mesh.html-CZFnaPki.js","assets/6-2-configuration-as-code.html-DCivZhJc.js","assets/6-3-summary-and-learning-path.html-CgsUkSBE.js","assets/index.html-CBCL5PZ8.js","assets/index-desc.html-DYwsBftR.js","assets/1-1-what-is-rpc.html-Dj2q_0x_.js","assets/1-2-rpc-vs-local-call.html-DCvnH9O_.js","assets/1-3-rpc-vs-rest-vs-grpc.html-Bn8SAbJ3.js","assets/1-4-why-microservices-need-rpc.html-D2KABtGY.js","assets/2-1-rpc-core-components.html-B7hJey7X.js","assets/2-2-client-server-model.html-Bdg2_988.js","assets/2-3-serialization-deserialization.html-CXFaYThT.js","assets/2-4-network-protocols.html-DqWSrOVs.js","assets/2-5-service-discovery-load-balancing.html-DezAJ8z9.js","assets/3-1-rpc-applications.html-BkPKCVi3.js","assets/3-2-distributed-system-position.html-2ESrwZm1.js","assets/3-3-ecommerce-payment-log-recommendation-practices.html-2m_yoNel.js","assets/3-4-when-to-use-rpc-mq-rest.html-fMlVJZtl.js","assets/4-1-rpc-implementation-foundations.html-Dar6E0tL.js","assets/4-2-socket-programming-for-remote-calls.html-hMLagkAp.js","assets/4-3-blocking-io-nio-netty-basics.html-BkK_E3Ux.js","assets/4-4-netty-request-response-encapsulation.html-gGy2iz_l.js","assets/4-5-dynamic-proxy-service-invocation.html-DI6zAX7O.js","assets/5-1-service-registration-discovery.html--xwLR0YI.js","assets/5-2-zookeeper-service-registration.html-9vHhbwSX.js","assets/5-3-nacos-consul-eureka-service-discovery.html-BWoVPVSJ.js","assets/6-1-timeout-retry-mechanism.html-Dj40pOMT.js","assets/6-2-circuit-breaker-degradation.html-C9dUW-z_.js","assets/6-3-service-rate-limiting.html-BlDtf7Bl.js","assets/7-1-dubbo-architecture-core-modules.html-DLkW3ao1.js","assets/index-desc.html-djyGK4Ge.js","assets/1-1-1-why-distributed-scheduling.html-Cz2EgFwg.js","assets/1-1-2-core-concepts-of-scheduling.html-NTw5FR84.js","assets/1-1-3-basic-model-of-distributed-scheduling.html-ZsfqGn_j.js","assets/1-2-1-minimal-viable-scheduler.html-CqkD9eeO.js","assets/1-2-2-distributed-scheduling-prototype.html-CgxfjPX7.js","assets/1-2-3-high-availability-and-scalability.html-DKct9Rzr.js","assets/1-3-1-quartz-framework.html-u0Lm8HLU.js","assets/1-3-2-elastic-job-framework.html-DB8rFDdx.js","assets/1-3-3-xxl-job-framework.html-CkBbKmeR.js","assets/1-3-4-other-scheduling-systems.html-Dzd6R45C.js","assets/1-4-1-distributed-coordination-mechanisms.html-BclflWXW.js","assets/1-4-2-task-dependency-and-workflow-scheduling.html-DqRkbN60.js","assets/1-4-3-task-execution-and-fault-tolerance.html-DN31VzLm.js","assets/1-4-4-scheduling-performance-optimization.html-ZRV9EkTq.js","assets/1-4-5-security-and-multi-tenancy.html-CKbTwC_L.js","assets/1-5-1-scheduling-platform-enterprise-practices.html-CNPHkHtd.js","assets/1-5-2-microservices-integration.html-DupE9RkL.js","assets/1-5-3-monitoring-and-operations.html-DlU1Ju8B.js","assets/1-6-1-cloud-native-and-containerized-scheduling.html-lW-fTbGQ.js","assets/1-6-2-ai-driven-intelligent-scheduling.html-DphpDF3z.js","assets/1-6-3-summary-and-learning-path.html-D6ko8Mic.js","assets/index.html-HyICqOnD.js","assets/index-desc.html-CjXeK-EJ.js","assets/1-1-1-traditional-database-vs-search-engine.html-BOz9HrtE.js","assets/1-1-2-olap-log-analytics-realtime-demand.html-KJ_a_TIp.js","assets/1-1-3-enterprise-information-retrieval-data-driven-decision.html-Cl9crUFy.js","assets/1-1-why-search-and-analytics-middleware.html-HHA3r5fw.js","assets/1-2-1-index-inverted-index-forward-index.html-BJ1-6zek.js","assets/1-2-2-document-field-tokenization-analyzer.html-Bs8T9lxa.js","assets/1-2-3-aggregation-filter-sort-scoring.html-D6y3zur6.js","assets/1-2-core-concepts.html-Beh7xrf0.js","assets/1-3-1-standalone-vs-distributed-architecture.html-DMg18ePA.js","assets/1-3-2-real-time-streaming-vs-batch-processing.html-CKTByeGW.js","assets/1-3-3-data-ingestion-storage-query-visualization-pipeline.html-4yiFoZKx.js","assets/1-3-search-analytics-architecture.html-Up3_Tf00.js","assets/index.html-C76_ooRz.js","assets/index-desc.html-BR5ac1vJ.js","assets/1-1-why-distributed-tracing-and-monitoring.html-CZIqxKq5.js","assets/1-2-evolution-from-monolith-to-distributed-systems.html-DhlQ3_Jo.js","assets/1-3-complexity-of-service-call-chains.html-DE9nTorv.js","assets/1-4-performance-analysis-and-fault-diagnosis.html-ByDuaSHA.js","assets/2-1-core-concepts-and-metrics-system.html-hb2R-Gjm.js","assets/2-2-span-trace-traceid.html-DmlzV4hW.js","assets/2-3-logs-metrics-traces.html-Dp3ZfX2o.js","assets/2-4-sla-slo-sli.html-DFWvhebg.js","assets/2-5-metrics-system-design-principles.html-UZqbZz5y.js","assets/4-1-log-structured-and-unstructured.html-D_ytRotq.js","assets/4-2-log-collection-tools.html-DDSGpCGo.js","assets/4-3-distributed-log-aggregation-and-query.html-z_F9V7gT.js","assets/4-4-log-analysis-and-troubleshooting.html-BQDtu0n9.js","assets/index.html-CADi27DV.js","assets/index-desc.html-COsPlxsc.js","assets/404.html-CxSYzDoI.js","assets/index.html-B1tuDE_i.js","assets/index.html-B5aAHkZF.js","assets/index.html-Du13ZOq3.js","assets/index.html-BACUaFmz.js","assets/index.html-CWYMWPYR.js","assets/index.html-CgvOq3XV.js","assets/index.html-D1eNHIrT.js","assets/index.html-wMda9DQX.js","assets/index.html-D45yZDDI.js","assets/index.html-DmLz3drc.js","assets/index.html-BQqAwLTQ.js","assets/index.html-D3TPaKR4.js","assets/index.html-hkn13s-k.js","assets/index.html-YDwG10AY.js","assets/index.html-DdUm-Mm3.js","assets/index.html-BEqjP2Yk.js","assets/index.html-CFAjIK3F.js","assets/index.html-E0buBeVK.js","assets/index.html-uO3NARQn.js","assets/index.html-CJ99pE6X.js","assets/index.html-C9YbYG8u.js","assets/index.html-XsIVhKb7.js","assets/index.html-C-uiTGo4.js","assets/index.html-Cn3_MVtS.js","assets/index.html-CDR82fAa.js","assets/index.html-CA0bysPA.js","assets/index.html-D9Fl8PnZ.js","assets/index.html-Caa9WEQA.js","assets/index.html-e13PgVFm.js","assets/index.html-CqU5ukJB.js","assets/index.html-DnvlhJ0o.js","assets/index.html-DVaI5dFp.js","assets/index.html-f4n5m2bQ.js","assets/index-DtWMYcbt.js","assets/index-BtMLymDW.js","assets/index-DMDrkyre.js"])))=>i.map(i=>d[i]);
/**
* @vue/shared v3.5.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function ia(i){const s=Object.create(null);for(const l of i.split(","))s[l]=1;return l=>l in s}const Ei={},Ul=[],Is=()=>{},Vr=()=>!1,je=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),sa=i=>i.startsWith("onUpdate:"),Ii=Object.assign,la=(i,s)=>{const l=i.indexOf(s);l>-1&&i.splice(l,1)},gc=Object.prototype.hasOwnProperty,Ai=(i,s)=>gc.call(i,s),ti=Array.isArray,Be=i=>Ln(i)==="[object Map]",oc=i=>Ln(i)==="[object Set]",ai=i=>typeof i=="function",Oi=i=>typeof i=="string",ae=i=>typeof i=="symbol",Ti=i=>i!==null&&typeof i=="object",Hr=i=>(Ti(i)||ai(i))&&ai(i.then)&&ai(i.catch),uc=Object.prototype.toString,Ln=i=>uc.call(i),Ac=i=>Ln(i).slice(8,-1),yc=i=>Ln(i)==="[object Object]",ea=i=>Oi(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,Gl=ia(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Rn=i=>{const s=Object.create(null);return(l=>s[l]||(s[l]=i(l)))},Bc=/-(\w)/g,Yi=Rn(i=>i.replace(Bc,(s,l)=>l?l.toUpperCase():"")),vc=/\B([A-Z])/g,Sl=Rn(i=>i.replace(vc,"-$1").toLowerCase()),Ve=Rn(i=>i.charAt(0).toUpperCase()+i.slice(1)),Kn=Rn(i=>i?`on${Ve(i)}`:""),pl=(i,s)=>!Object.is(i,s),Qn=(i,...s)=>{for(let l=0;l<i.length;l++)i[l](...s)},zr=(i,s,l,e=!1)=>{Object.defineProperty(i,s,{configurable:!0,enumerable:!1,writable:e,value:l})},mc=i=>{const s=parseFloat(i);return isNaN(s)?i:s},Fc=i=>{const s=Oi(i)?Number(i):NaN;return isNaN(s)?i:s};let ah;const Pn=()=>ah||(ah=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function na(i){if(ti(i)){const s={};for(let l=0;l<i.length;l++){const e=i[l],n=Oi(e)?bc(e):na(e);if(n)for(const t in n)s[t]=n[t]}return s}else if(Oi(i)||Ti(i))return i}const fc=/;(?![^(]*\))/g,Cc=/:([^]+)/,Ec=/\/\*[^]*?\*\//g;function bc(i){const s={};return i.replace(Ec,"").split(fc).forEach(l=>{if(l){const e=l.split(Cc);e.length>1&&(s[e[0].trim()]=e[1].trim())}}),s}function ta(i){let s="";if(Oi(i))s=i;else if(ti(i))for(let l=0;l<i.length;l++){const e=ta(i[l]);e&&(s+=e+" ")}else if(Ti(i))for(const l in i)i[l]&&(s+=l+" ");return s.trim()}const _c="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Dc=ia(_c);function qr(i){return!!i||i===""}/**
* @vue/reactivity v3.5.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Vi;class Sc{constructor(s=!1){this.detached=s,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Vi,!s&&Vi&&(this.index=(Vi.scopes||(Vi.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let s,l;if(this.scopes)for(s=0,l=this.scopes.length;s<l;s++)this.scopes[s].pause();for(s=0,l=this.effects.length;s<l;s++)this.effects[s].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let s,l;if(this.scopes)for(s=0,l=this.scopes.length;s<l;s++)this.scopes[s].resume();for(s=0,l=this.effects.length;s<l;s++)this.effects[s].resume()}}run(s){if(this._active){const l=Vi;try{return Vi=this,s()}finally{Vi=l}}}on(){++this._on===1&&(this.prevScope=Vi,Vi=this)}off(){this._on>0&&--this._on===0&&(Vi=this.prevScope,this.prevScope=void 0)}stop(s){if(this._active){this._active=!1;let l,e;for(l=0,e=this.effects.length;l<e;l++)this.effects[l].stop();for(this.effects.length=0,l=0,e=this.cleanups.length;l<e;l++)this.cleanups[l]();if(this.cleanups.length=0,this.scopes){for(l=0,e=this.scopes.length;l<e;l++)this.scopes[l].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!s){const n=this.parent.scopes.pop();n&&n!==this&&(this.parent.scopes[this.index]=n,n.index=this.index)}this.parent=void 0}}}function Ur(){return Vi}function Tc(i,s=!1){Vi&&Vi.cleanups.push(i)}let Ci;const Jn=new WeakSet;class Gr{constructor(s){this.fn=s,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,Vi&&Vi.active&&Vi.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Jn.has(this)&&(Jn.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Kr(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,hh(this),Qr(this);const s=Ci,l=Fs;Ci=this,Fs=!0;try{return this.fn()}finally{Jr(this),Ci=s,Fs=l,this.flags&=-3}}stop(){if(this.flags&1){for(let s=this.deps;s;s=s.nextDep)ra(s);this.deps=this.depsTail=void 0,hh(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Jn.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Ct(this)&&this.run()}get dirty(){return Ct(this)}}let Wr=0,ve,me;function Kr(i,s=!1){if(i.flags|=8,s){i.next=me,me=i;return}i.next=ve,ve=i}function aa(){Wr++}function ha(){if(--Wr>0)return;if(me){let s=me;for(me=void 0;s;){const l=s.next;s.next=void 0,s.flags&=-9,s=l}}let i;for(;ve;){let s=ve;for(ve=void 0;s;){const l=s.next;if(s.next=void 0,s.flags&=-9,s.flags&1)try{s.trigger()}catch(e){i||(i=e)}s=l}}if(i)throw i}function Qr(i){for(let s=i.deps;s;s=s.nextDep)s.version=-1,s.prevActiveLink=s.dep.activeLink,s.dep.activeLink=s}function Jr(i){let s,l=i.depsTail,e=l;for(;e;){const n=e.prevDep;e.version===-1?(e===l&&(l=n),ra(e),wc(e)):s=e,e.dep.activeLink=e.prevActiveLink,e.prevActiveLink=void 0,e=n}i.deps=s,i.depsTail=l}function Ct(i){for(let s=i.deps;s;s=s.nextDep)if(s.dep.version!==s.version||s.dep.computed&&(Zr(s.dep.computed)||s.dep.version!==s.version))return!0;return!!i._dirty}function Zr(i){if(i.flags&4&&!(i.flags&16)||(i.flags&=-17,i.globalVersion===Te)||(i.globalVersion=Te,!i.isSSR&&i.flags&128&&(!i.deps&&!i._dirty||!Ct(i))))return;i.flags|=2;const s=i.dep,l=Ci,e=Fs;Ci=i,Fs=!0;try{Qr(i);const n=i.fn(i._value);(s.version===0||pl(n,i._value))&&(i.flags|=128,i._value=n,s.version++)}catch(n){throw s.version++,n}finally{Ci=l,Fs=e,Jr(i),i.flags&=-3}}function ra(i,s=!1){const{dep:l,prevSub:e,nextSub:n}=i;if(e&&(e.nextSub=n,i.prevSub=void 0),n&&(n.prevSub=e,i.nextSub=void 0),l.subs===i&&(l.subs=e,!e&&l.computed)){l.computed.flags&=-5;for(let t=l.computed.deps;t;t=t.nextDep)ra(t,!0)}!s&&!--l.sc&&l.map&&l.map.delete(l.key)}function wc(i){const{prevDep:s,nextDep:l}=i;s&&(s.nextDep=l,i.prevDep=void 0),l&&(l.prevDep=s,i.nextDep=void 0)}let Fs=!0;const Yr=[];function Ws(){Yr.push(Fs),Fs=!1}function Ks(){const i=Yr.pop();Fs=i===void 0?!0:i}function hh(i){const{cleanup:s}=i;if(i.cleanup=void 0,s){const l=Ci;Ci=void 0;try{s()}finally{Ci=l}}}let Te=0;class xc{constructor(s,l){this.sub=s,this.dep=l,this.version=l.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class In{constructor(s){this.computed=s,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(s){if(!Ci||!Fs||Ci===this.computed)return;let l=this.activeLink;if(l===void 0||l.sub!==Ci)l=this.activeLink=new xc(Ci,this),Ci.deps?(l.prevDep=Ci.depsTail,Ci.depsTail.nextDep=l,Ci.depsTail=l):Ci.deps=Ci.depsTail=l,Xr(l);else if(l.version===-1&&(l.version=this.version,l.nextDep)){const e=l.nextDep;e.prevDep=l.prevDep,l.prevDep&&(l.prevDep.nextDep=e),l.prevDep=Ci.depsTail,l.nextDep=void 0,Ci.depsTail.nextDep=l,Ci.depsTail=l,Ci.deps===l&&(Ci.deps=e)}return l}trigger(s){this.version++,Te++,this.notify(s)}notify(s){aa();try{for(let l=this.subs;l;l=l.prevSub)l.sub.notify()&&l.sub.dep.notify()}finally{ha()}}}function Xr(i){if(i.dep.sc++,i.sub.flags&4){const s=i.dep.computed;if(s&&!i.dep.subs){s.flags|=20;for(let e=s.deps;e;e=e.nextDep)Xr(e)}const l=i.dep.subs;l!==i&&(i.prevSub=l,l&&(l.nextSub=i)),i.dep.subs=i}}const fn=new WeakMap,fl=Symbol(""),Et=Symbol(""),we=Symbol("");function Hi(i,s,l){if(Fs&&Ci){let e=fn.get(i);e||fn.set(i,e=new Map);let n=e.get(l);n||(e.set(l,n=new In),n.map=e,n.key=l),n.track()}}function Gs(i,s,l,e,n,t){const a=fn.get(i);if(!a){Te++;return}const h=k=>{k&&k.trigger()};if(aa(),s==="clear")a.forEach(h);else{const k=ti(i),d=k&&ea(l);if(k&&l==="length"){const p=Number(e);a.forEach((c,g)=>{(g==="length"||g===we||!ae(g)&&g>=p)&&h(c)})}else switch((l!==void 0||a.has(void 0))&&h(a.get(l)),d&&h(a.get(we)),s){case"add":k?d&&h(a.get("length")):(h(a.get(fl)),Be(i)&&h(a.get(Et)));break;case"delete":k||(h(a.get(fl)),Be(i)&&h(a.get(Et)));break;case"set":Be(i)&&h(a.get(fl));break}}ha()}function Lc(i,s){const l=fn.get(i);return l&&l.get(s)}function Il(i){const s=ci(i);return s===i?s:(Hi(s,"iterate",we),fs(i)?s:s.map(Ui))}function ka(i){return Hi(i=ci(i),"iterate",we),i}const Rc={__proto__:null,[Symbol.iterator](){return Zn(this,Symbol.iterator,Ui)},concat(...i){return Il(this).concat(...i.map(s=>ti(s)?Il(s):s))},entries(){return Zn(this,"entries",i=>(i[1]=Ui(i[1]),i))},every(i,s){return js(this,"every",i,s,void 0,arguments)},filter(i,s){return js(this,"filter",i,s,l=>l.map(Ui),arguments)},find(i,s){return js(this,"find",i,s,Ui,arguments)},findIndex(i,s){return js(this,"findIndex",i,s,void 0,arguments)},findLast(i,s){return js(this,"findLast",i,s,Ui,arguments)},findLastIndex(i,s){return js(this,"findLastIndex",i,s,void 0,arguments)},forEach(i,s){return js(this,"forEach",i,s,void 0,arguments)},includes(...i){return Yn(this,"includes",i)},indexOf(...i){return Yn(this,"indexOf",i)},join(i){return Il(this).join(i)},lastIndexOf(...i){return Yn(this,"lastIndexOf",i)},map(i,s){return js(this,"map",i,s,void 0,arguments)},pop(){return oe(this,"pop")},push(...i){return oe(this,"push",i)},reduce(i,...s){return rh(this,"reduce",i,s)},reduceRight(i,...s){return rh(this,"reduceRight",i,s)},shift(){return oe(this,"shift")},some(i,s){return js(this,"some",i,s,void 0,arguments)},splice(...i){return oe(this,"splice",i)},toReversed(){return Il(this).toReversed()},toSorted(i){return Il(this).toSorted(i)},toSpliced(...i){return Il(this).toSpliced(...i)},unshift(...i){return oe(this,"unshift",i)},values(){return Zn(this,"values",Ui)}};function Zn(i,s,l){const e=ka(i),n=e[s]();return e!==i&&!fs(i)&&(n._next=n.next,n.next=()=>{const t=n._next();return t.value&&(t.value=l(t.value)),t}),n}const Pc=Array.prototype;function js(i,s,l,e,n,t){const a=ka(i),h=a!==i&&!fs(i),k=a[s];if(k!==Pc[s]){const c=k.apply(i,t);return h?Ui(c):c}let d=l;a!==i&&(h?d=function(c,g){return l.call(this,Ui(c),g,i)}:l.length>2&&(d=function(c,g){return l.call(this,c,g,i)}));const p=k.call(a,d,e);return h&&n?n(p):p}function rh(i,s,l,e){const n=ka(i);let t=l;return n!==i&&(fs(i)?l.length>3&&(t=function(a,h,k){return l.call(this,a,h,k,i)}):t=function(a,h,k){return l.call(this,a,Ui(h),k,i)}),n[s](t,...e)}function Yn(i,s,l){const e=ci(i);Hi(e,"iterate",we);const n=e[s](...l);return(n===-1||n===!1)&&pa(l[0])?(l[0]=ci(l[0]),e[s](...l)):n}function oe(i,s,l=[]){Ws(),aa();const e=ci(i)[s].apply(i,l);return ha(),Ks(),e}const Ic=ia("__proto__,__v_isRef,__isVue"),ik=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(ae));function Oc(i){ae(i)||(i=String(i));const s=ci(this);return Hi(s,"has",i),s.hasOwnProperty(i)}class sk{constructor(s=!1,l=!1){this._isReadonly=s,this._isShallow=l}get(s,l,e){if(l==="__v_skip")return s.__v_skip;const n=this._isReadonly,t=this._isShallow;if(l==="__v_isReactive")return!n;if(l==="__v_isReadonly")return n;if(l==="__v_isShallow")return t;if(l==="__v_raw")return e===(n?t?hk:ak:t?tk:nk).get(s)||Object.getPrototypeOf(s)===Object.getPrototypeOf(e)?s:void 0;const a=ti(s);if(!n){let k;if(a&&(k=Rc[l]))return k;if(l==="hasOwnProperty")return Oc}const h=Reflect.get(s,l,Ri(s)?s:e);return(ae(l)?ik.has(l):Ic(l))||(n||Hi(s,"get",l),t)?h:Ri(h)?a&&ea(l)?h:h.value:Ti(h)?n?Tl(h):bl(h):h}}class lk extends sk{constructor(s=!1){super(!1,s)}set(s,l,e,n){let t=s[l];if(!this._isShallow){const k=_l(t);if(!fs(e)&&!_l(e)&&(t=ci(t),e=ci(e)),!ti(s)&&Ri(t)&&!Ri(e))return k||(t.value=e),!0}const a=ti(s)&&ea(l)?Number(l)<s.length:Ai(s,l),h=Reflect.set(s,l,e,Ri(s)?s:n);return s===ci(n)&&(a?pl(e,t)&&Gs(s,"set",l,e):Gs(s,"add",l,e)),h}deleteProperty(s,l){const e=Ai(s,l);s[l];const n=Reflect.deleteProperty(s,l);return n&&e&&Gs(s,"delete",l,void 0),n}has(s,l){const e=Reflect.has(s,l);return(!ae(l)||!ik.has(l))&&Hi(s,"has",l),e}ownKeys(s){return Hi(s,"iterate",ti(s)?"length":fl),Reflect.ownKeys(s)}}class ek extends sk{constructor(s=!1){super(!0,s)}set(s,l){return!0}deleteProperty(s,l){return!0}}const Mc=new lk,Nc=new ek,$c=new lk(!0),jc=new ek(!0),bt=i=>i,an=i=>Reflect.getPrototypeOf(i);function Vc(i,s,l){return function(...e){const n=this.__v_raw,t=ci(n),a=Be(t),h=i==="entries"||i===Symbol.iterator&&a,k=i==="keys"&&a,d=n[i](...e),p=l?bt:s?_t:Ui;return!s&&Hi(t,"iterate",k?Et:fl),{next(){const{value:c,done:g}=d.next();return g?{value:c,done:g}:{value:h?[p(c[0]),p(c[1])]:p(c),done:g}},[Symbol.iterator](){return this}}}}function hn(i){return function(...s){return i==="delete"?!1:i==="clear"?void 0:this}}function Hc(i,s){const l={get(n){const t=this.__v_raw,a=ci(t),h=ci(n);i||(pl(n,h)&&Hi(a,"get",n),Hi(a,"get",h));const{has:k}=an(a),d=s?bt:i?_t:Ui;if(k.call(a,n))return d(t.get(n));if(k.call(a,h))return d(t.get(h));t!==a&&t.get(n)},get size(){const n=this.__v_raw;return!i&&Hi(ci(n),"iterate",fl),Reflect.get(n,"size",n)},has(n){const t=this.__v_raw,a=ci(t),h=ci(n);return i||(pl(n,h)&&Hi(a,"has",n),Hi(a,"has",h)),n===h?t.has(n):t.has(n)||t.has(h)},forEach(n,t){const a=this,h=a.__v_raw,k=ci(h),d=s?bt:i?_t:Ui;return!i&&Hi(k,"iterate",fl),h.forEach((p,c)=>n.call(t,d(p),d(c),a))}};return Ii(l,i?{add:hn("add"),set:hn("set"),delete:hn("delete"),clear:hn("clear")}:{add(n){!s&&!fs(n)&&!_l(n)&&(n=ci(n));const t=ci(this);return an(t).has.call(t,n)||(t.add(n),Gs(t,"add",n,n)),this},set(n,t){!s&&!fs(t)&&!_l(t)&&(t=ci(t));const a=ci(this),{has:h,get:k}=an(a);let d=h.call(a,n);d||(n=ci(n),d=h.call(a,n));const p=k.call(a,n);return a.set(n,t),d?pl(t,p)&&Gs(a,"set",n,t):Gs(a,"add",n,t),this},delete(n){const t=ci(this),{has:a,get:h}=an(t);let k=a.call(t,n);k||(n=ci(n),k=a.call(t,n)),h&&h.call(t,n);const d=t.delete(n);return k&&Gs(t,"delete",n,void 0),d},clear(){const n=ci(this),t=n.size!==0,a=n.clear();return t&&Gs(n,"clear",void 0,void 0),a}}),["keys","values","entries",Symbol.iterator].forEach(n=>{l[n]=Vc(n,i,s)}),l}function On(i,s){const l=Hc(i,s);return(e,n,t)=>n==="__v_isReactive"?!i:n==="__v_isReadonly"?i:n==="__v_raw"?e:Reflect.get(Ai(l,n)&&n in e?l:e,n,t)}const zc={get:On(!1,!1)},qc={get:On(!1,!0)},Uc={get:On(!0,!1)},Gc={get:On(!0,!0)},nk=new WeakMap,tk=new WeakMap,ak=new WeakMap,hk=new WeakMap;function Wc(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Kc(i){return i.__v_skip||!Object.isExtensible(i)?0:Wc(Ac(i))}function bl(i){return _l(i)?i:Mn(i,!1,Mc,zc,nk)}function rk(i){return Mn(i,!1,$c,qc,tk)}function Tl(i){return Mn(i,!0,Nc,Uc,ak)}function Qc(i){return Mn(i,!0,jc,Gc,hk)}function Mn(i,s,l,e,n){if(!Ti(i)||i.__v_raw&&!(s&&i.__v_isReactive))return i;const t=Kc(i);if(t===0)return i;const a=n.get(i);if(a)return a;const h=new Proxy(i,t===2?e:l);return n.set(i,h),h}function Wl(i){return _l(i)?Wl(i.__v_raw):!!(i&&i.__v_isReactive)}function _l(i){return!!(i&&i.__v_isReadonly)}function fs(i){return!!(i&&i.__v_isShallow)}function pa(i){return i?!!i.__v_raw:!1}function ci(i){const s=i&&i.__v_raw;return s?ci(s):i}function Jc(i){return!Ai(i,"__v_skip")&&Object.isExtensible(i)&&zr(i,"__v_skip",!0),i}const Ui=i=>Ti(i)?bl(i):i,_t=i=>Ti(i)?Tl(i):i;function Ri(i){return i?i.__v_isRef===!0:!1}function ii(i){return kk(i,!1)}function ei(i){return kk(i,!0)}function kk(i,s){return Ri(i)?i:new Zc(i,s)}class Zc{constructor(s,l){this.dep=new In,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=l?s:ci(s),this._value=l?s:Ui(s),this.__v_isShallow=l}get value(){return this.dep.track(),this._value}set value(s){const l=this._rawValue,e=this.__v_isShallow||fs(s)||_l(s);s=e?s:ci(s),pl(s,l)&&(this._rawValue=s,this._value=e?s:Ui(s),this.dep.trigger())}}function dl(i){return Ri(i)?i.value:i}function pi(i){return ai(i)?i():dl(i)}const Yc={get:(i,s,l)=>s==="__v_raw"?i:dl(Reflect.get(i,s,l)),set:(i,s,l,e)=>{const n=i[s];return Ri(n)&&!Ri(l)?(n.value=l,!0):Reflect.set(i,s,l,e)}};function pk(i){return Wl(i)?i:new Proxy(i,Yc)}class Xc{constructor(s){this.__v_isRef=!0,this._value=void 0;const l=this.dep=new In,{get:e,set:n}=s(l.track.bind(l),l.trigger.bind(l));this._get=e,this._set=n}get value(){return this._value=this._get()}set value(s){this._set(s)}}function dk(i){return new Xc(i)}function da(i){const s=ti(i)?new Array(i.length):{};for(const l in i)s[l]=ck(i,l);return s}class ig{constructor(s,l,e){this._object=s,this._key=l,this._defaultValue=e,this.__v_isRef=!0,this._value=void 0}get value(){const s=this._object[this._key];return this._value=s===void 0?this._defaultValue:s}set value(s){this._object[this._key]=s}get dep(){return Lc(ci(this._object),this._key)}}class sg{constructor(s){this._getter=s,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function he(i,s,l){return Ri(i)?i:ai(i)?new sg(i):Ti(i)&&arguments.length>1?ck(i,s,l):ii(i)}function ck(i,s,l){const e=i[s];return Ri(e)?e:new ig(i,s,l)}class lg{constructor(s,l,e){this.fn=s,this.setter=l,this._value=void 0,this.dep=new In(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Te-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!l,this.isSSR=e}notify(){if(this.flags|=16,!(this.flags&8)&&Ci!==this)return Kr(this,!0),!0}get value(){const s=this.dep.track();return Zr(this),s&&(s.version=this.dep.version),this._value}set value(s){this.setter&&this.setter(s)}}function eg(i,s,l=!1){let e,n;return ai(i)?e=i:(e=i.get,n=i.set),new lg(e,n,l)}const rn={},Cn=new WeakMap;let vl;function ng(i,s=!1,l=vl){if(l){let e=Cn.get(l);e||Cn.set(l,e=[]),e.push(i)}}function tg(i,s,l=Ei){const{immediate:e,deep:n,once:t,scheduler:a,augmentJob:h,call:k}=l,d=F=>n?F:fs(F)||n===!1||n===0?kl(F,1):kl(F);let p,c,g,o,B=!1,m=!1;if(Ri(i)?(c=()=>i.value,B=fs(i)):Wl(i)?(c=()=>d(i),B=!0):ti(i)?(m=!0,B=i.some(F=>Wl(F)||fs(F)),c=()=>i.map(F=>{if(Ri(F))return F.value;if(Wl(F))return d(F);if(ai(F))return k?k(F,2):F()})):ai(i)?s?c=k?()=>k(i,2):i:c=()=>{if(g){Ws();try{g()}finally{Ks()}}const F=vl;vl=p;try{return k?k(i,3,[o]):i(o)}finally{vl=F}}:c=Is,s&&n){const F=c,w=n===!0?1/0:n;c=()=>kl(F(),w)}const E=Ur(),_=()=>{p.stop(),E&&E.active&&la(E.effects,p)};if(t&&s){const F=s;s=(...w)=>{F(...w),_()}}let f=m?new Array(i.length).fill(rn):rn;const A=F=>{if(!(!(p.flags&1)||!p.dirty&&!F))if(s){const w=p.run();if(n||B||(m?w.some((j,M)=>pl(j,f[M])):pl(w,f))){g&&g();const j=vl;vl=p;try{const M=[w,f===rn?void 0:m&&f[0]===rn?[]:f,o];f=w,k?k(s,3,M):s(...M)}finally{vl=j}}}else p.run()};return h&&h(A),p=new Gr(c),p.scheduler=a?()=>a(A,!1):A,o=F=>ng(F,!1,p),g=p.onStop=()=>{const F=Cn.get(p);if(F){if(k)k(F,4);else for(const w of F)w();Cn.delete(p)}},s?e?A(!0):f=p.run():a?a(A.bind(null,!0),!0):p.run(),_.pause=p.pause.bind(p),_.resume=p.resume.bind(p),_.stop=_,_}function kl(i,s=1/0,l){if(s<=0||!Ti(i)||i.__v_skip||(l=l||new Set,l.has(i)))return i;if(l.add(i),s--,Ri(i))kl(i.value,s,l);else if(ti(i))for(let e=0;e<i.length;e++)kl(i[e],s,l);else if(oc(i)||Be(i))i.forEach(e=>{kl(e,s,l)});else if(yc(i)){for(const e in i)kl(i[e],s,l);for(const e of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,e)&&kl(i[e],s,l)}return i}/**
* @vue/runtime-core v3.5.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function He(i,s,l,e){try{return e?i(...e):i()}catch(n){ze(n,s,l)}}function Es(i,s,l,e){if(ai(i)){const n=He(i,s,l,e);return n&&Hr(n)&&n.catch(t=>{ze(t,s,l)}),n}if(ti(i)){const n=[];for(let t=0;t<i.length;t++)n.push(Es(i[t],s,l,e));return n}}function ze(i,s,l,e=!0){const n=s?s.vnode:null,{errorHandler:t,throwUnhandledErrorInProduction:a}=s&&s.appContext.config||Ei;if(s){let h=s.parent;const k=s.proxy,d=`https://vuejs.org/error-reference/#runtime-${l}`;for(;h;){const p=h.ec;if(p){for(let c=0;c<p.length;c++)if(p[c](i,k,d)===!1)return}h=h.parent}if(t){Ws(),He(t,null,10,[i,k,d]),Ks();return}}ag(i,l,n,e,a)}function ag(i,s,l,e=!0,n=!1){if(n)throw i;console.error(i)}const Gi=[];let Rs=-1;const Kl=[];let al=null,$l=0;const gk=Promise.resolve();let En=null;function Os(i){const s=En||gk;return i?s.then(this?i.bind(this):i):s}function hg(i){let s=Rs+1,l=Gi.length;for(;s<l;){const e=s+l>>>1,n=Gi[e],t=xe(n);t<i||t===i&&n.flags&2?s=e+1:l=e}return s}function ca(i){if(!(i.flags&1)){const s=xe(i),l=Gi[Gi.length-1];!l||!(i.flags&2)&&s>=xe(l)?Gi.push(i):Gi.splice(hg(s),0,i),i.flags|=1,ok()}}function ok(){En||(En=gk.then(uk))}function rg(i){ti(i)?Kl.push(...i):al&&i.id===-1?al.splice($l+1,0,i):i.flags&1||(Kl.push(i),i.flags|=1),ok()}function kh(i,s,l=Rs+1){for(;l<Gi.length;l++){const e=Gi[l];if(e&&e.flags&2){if(i&&e.id!==i.uid)continue;Gi.splice(l,1),l--,e.flags&4&&(e.flags&=-2),e(),e.flags&4||(e.flags&=-2)}}}function bn(i){if(Kl.length){const s=[...new Set(Kl)].sort((l,e)=>xe(l)-xe(e));if(Kl.length=0,al){al.push(...s);return}for(al=s,$l=0;$l<al.length;$l++){const l=al[$l];l.flags&4&&(l.flags&=-2),l.flags&8||l(),l.flags&=-2}al=null,$l=0}}const xe=i=>i.id==null?i.flags&2?-1:1/0:i.id;function uk(i){try{for(Rs=0;Rs<Gi.length;Rs++){const s=Gi[Rs];s&&!(s.flags&8)&&(s.flags&4&&(s.flags&=-2),He(s,s.i,s.i?15:14),s.flags&4||(s.flags&=-2))}}finally{for(;Rs<Gi.length;Rs++){const s=Gi[Rs];s&&(s.flags&=-2)}Rs=-1,Gi.length=0,bn(),En=null,(Gi.length||Kl.length)&&uk()}}let ms=null,Ak=null;function _n(i){const s=ms;return ms=i,Ak=i&&i.type.__scopeId||null,s}function kg(i,s=ms,l){if(!s||i._n)return i;const e=(...n)=>{e._d&&Fh(-1);const t=_n(s);let a;try{a=i(...n)}finally{_n(t),e._d&&Fh(1)}return a};return e._n=!0,e._c=!0,e._d=!0,e}function Ps(i,s,l,e){const n=i.dirs,t=s&&s.dirs;for(let a=0;a<n.length;a++){const h=n[a];t&&(h.oldValue=t[a].value);let k=h.dir[e];k&&(Ws(),Es(k,l,8,[i.el,h,i,s]),Ks())}}const pg=Symbol("_vte"),yk=i=>i.__isTeleport,Us=Symbol("_leaveCb"),kn=Symbol("_enterCb");function Bk(){const i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return oi(()=>{i.isMounted=!0}),ua(()=>{i.isUnmounting=!0}),i}const ps=[Function,Array],vk={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ps,onEnter:ps,onAfterEnter:ps,onEnterCancelled:ps,onBeforeLeave:ps,onLeave:ps,onAfterLeave:ps,onLeaveCancelled:ps,onBeforeAppear:ps,onAppear:ps,onAfterAppear:ps,onAppearCancelled:ps},mk=i=>{const s=i.subTree;return s.component?mk(s.component):s},dg={name:"BaseTransition",props:vk,setup(i,{slots:s}){const l=Ys(),e=Bk();return()=>{const n=s.default&&ga(s.default(),!0);if(!n||!n.length)return;const t=Fk(n),a=ci(i),{mode:h}=a;if(e.isLeaving)return Xn(t);const k=ph(t);if(!k)return Xn(t);let d=Le(k,a,e,l,c=>d=c);k.type!==Wi&&Dl(k,d);let p=l.subTree&&ph(l.subTree);if(p&&p.type!==Wi&&!ml(k,p)&&mk(l).type!==Wi){let c=Le(p,a,e,l);if(Dl(p,c),h==="out-in"&&k.type!==Wi)return e.isLeaving=!0,c.afterLeave=()=>{e.isLeaving=!1,l.job.flags&8||l.update(),delete c.afterLeave,p=void 0},Xn(t);h==="in-out"&&k.type!==Wi?c.delayLeave=(g,o,B)=>{const m=fk(e,p);m[String(p.key)]=p,g[Us]=()=>{o(),g[Us]=void 0,delete d.delayedLeave,p=void 0},d.delayedLeave=()=>{B(),delete d.delayedLeave,p=void 0}}:p=void 0}else p&&(p=void 0);return t}}};function Fk(i){let s=i[0];if(i.length>1){for(const l of i)if(l.type!==Wi){s=l;break}}return s}const cg=dg;function fk(i,s){const{leavingVNodes:l}=i;let e=l.get(s.type);return e||(e=Object.create(null),l.set(s.type,e)),e}function Le(i,s,l,e,n){const{appear:t,mode:a,persisted:h=!1,onBeforeEnter:k,onEnter:d,onAfterEnter:p,onEnterCancelled:c,onBeforeLeave:g,onLeave:o,onAfterLeave:B,onLeaveCancelled:m,onBeforeAppear:E,onAppear:_,onAfterAppear:f,onAppearCancelled:A}=s,F=String(i.key),w=fk(l,i),j=(D,P)=>{D&&Es(D,e,9,P)},M=(D,P)=>{const H=P[1];j(D,P),ti(D)?D.every(R=>R.length<=1)&&H():D.length<=1&&H()},z={mode:a,persisted:h,beforeEnter(D){let P=k;if(!l.isMounted)if(t)P=E||k;else return;D[Us]&&D[Us](!0);const H=w[F];H&&ml(i,H)&&H.el[Us]&&H.el[Us](),j(P,[D])},enter(D){let P=d,H=p,R=c;if(!l.isMounted)if(t)P=_||d,H=f||p,R=A||c;else return;let Z=!1;const G=D[kn]=Y=>{Z||(Z=!0,Y?j(R,[D]):j(H,[D]),z.delayedLeave&&z.delayedLeave(),D[kn]=void 0)};P?M(P,[D,G]):G()},leave(D,P){const H=String(i.key);if(D[kn]&&D[kn](!0),l.isUnmounting)return P();j(g,[D]);let R=!1;const Z=D[Us]=G=>{R||(R=!0,P(),G?j(m,[D]):j(B,[D]),D[Us]=void 0,w[H]===i&&delete w[H])};w[H]=i,o?M(o,[D,Z]):Z()},clone(D){const P=Le(D,s,l,e,n);return n&&n(P),P}};return z}function Xn(i){if(Ue(i))return i=cl(i),i.children=null,i}function ph(i){if(!Ue(i))return yk(i.type)&&i.children?Fk(i.children):i;if(i.component)return i.component.subTree;const{shapeFlag:s,children:l}=i;if(l){if(s&16)return l[0];if(s&32&&ai(l.default))return l.default()}}function Dl(i,s){i.shapeFlag&6&&i.component?(i.transition=s,Dl(i.component.subTree,s)):i.shapeFlag&128?(i.ssContent.transition=s.clone(i.ssContent),i.ssFallback.transition=s.clone(i.ssFallback)):i.transition=s}function ga(i,s=!1,l){let e=[],n=0;for(let t=0;t<i.length;t++){let a=i[t];const h=l==null?a.key:String(l)+String(a.key!=null?a.key:t);a.type===Zi?(a.patchFlag&128&&n++,e=e.concat(ga(a.children,s,h))):(s||a.type!==Wi)&&e.push(h!=null?cl(a,{key:h}):a)}if(n>1)for(let t=0;t<e.length;t++)e[t].patchFlag=-2;return e}/*! #__NO_SIDE_EFFECTS__ */function O(i,s){return ai(i)?Ii({name:i.name},s,{setup:i}):i}function qe(){const i=Ys();return i?(i.appContext.config.idPrefix||"v")+"-"+i.ids[0]+i.ids[1]++:""}function oa(i){i.ids=[i.ids[0]+i.ids[2]+++"-",0,0]}function Ql(i,s,l,e,n=!1){if(ti(i)){i.forEach((B,m)=>Ql(B,s&&(ti(s)?s[m]:s),l,e,n));return}if(Jl(e)&&!n){e.shapeFlag&512&&e.type.__asyncResolved&&e.component.subTree.component&&Ql(i,s,l,e.component.subTree);return}const t=e.shapeFlag&4?Fa(e.component):e.el,a=n?null:t,{i:h,r:k}=i,d=s&&s.r,p=h.refs===Ei?h.refs={}:h.refs,c=h.setupState,g=ci(c),o=c===Ei?Vr:B=>Ai(g,B);if(d!=null&&d!==k){if(Oi(d))p[d]=null,o(d)&&(c[d]=null);else if(Ri(d)){d.value=null;const B=s;B.k&&(p[B.k]=null)}}if(ai(k))He(k,h,12,[a,p]);else{const B=Oi(k),m=Ri(k);if(B||m){const E=()=>{if(i.f){const _=B?o(k)?c[k]:p[k]:k.value;if(n)ti(_)&&la(_,t);else if(ti(_))_.includes(t)||_.push(t);else if(B)p[k]=[t],o(k)&&(c[k]=p[k]);else{const f=[t];k.value=f,i.k&&(p[i.k]=f)}}else B?(p[k]=a,o(k)&&(c[k]=a)):m&&(k.value=a,i.k&&(p[i.k]=a))};a?(E.id=-1,ts(E,l)):E()}}}let dh=!1;const Ol=()=>{dh||(console.error("Hydration completed but contains mismatches."),dh=!0)},gg=i=>i.namespaceURI.includes("svg")&&i.tagName!=="foreignObject",og=i=>i.namespaceURI.includes("MathML"),pn=i=>{if(i.nodeType===1){if(gg(i))return"svg";if(og(i))return"mathml"}},zl=i=>i.nodeType===8;function ug(i){const{mt:s,p:l,o:{patchProp:e,createText:n,nextSibling:t,parentNode:a,remove:h,insert:k,createComment:d}}=i,p=(A,F)=>{if(!F.hasChildNodes()){l(null,A,F),bn(),F._vnode=A;return}c(F.firstChild,A,null,null,null),bn(),F._vnode=A},c=(A,F,w,j,M,z=!1)=>{z=z||!!F.dynamicChildren;const D=zl(A)&&A.data==="[",P=()=>m(A,F,w,j,M,D),{type:H,ref:R,shapeFlag:Z,patchFlag:G}=F;let Y=A.nodeType;F.el=A,G===-2&&(z=!1,F.dynamicChildren=null);let N=null;switch(H){case El:Y!==3?F.children===""?(k(F.el=n(""),a(A),A),N=A):N=P():(A.data!==F.children&&(Ol(),A.data=F.children),N=t(A));break;case Wi:f(A)?(N=t(A),_(F.el=A.content.firstChild,A,w)):Y!==8||D?N=P():N=t(A);break;case fe:if(D&&(A=t(A),Y=A.nodeType),Y===1||Y===3){N=A;const li=!F.children.length;for(let Q=0;Q<F.staticCount;Q++)li&&(F.children+=N.nodeType===1?N.outerHTML:N.data),Q===F.staticCount-1&&(F.anchor=N),N=t(N);return D?t(N):N}else P();break;case Zi:D?N=B(A,F,w,j,M,z):N=P();break;default:if(Z&1)(Y!==1||F.type.toLowerCase()!==A.tagName.toLowerCase())&&!f(A)?N=P():N=g(A,F,w,j,M,z);else if(Z&6){F.slotScopeIds=M;const li=a(A);if(D?N=E(A):zl(A)&&A.data==="teleport start"?N=E(A,A.data,"teleport end"):N=t(A),s(F,li,null,w,j,pn(li),z),Jl(F)&&!F.type.__asyncResolved){let Q;D?(Q=Pi(Zi),Q.anchor=N?N.previousSibling:li.lastChild):Q=A.nodeType===3?Wk(""):Pi("div"),Q.el=A,F.component.subTree=Q}}else Z&64?Y!==8?N=P():N=F.type.hydrate(A,F,w,j,M,z,i,o):Z&128&&(N=F.type.hydrate(A,F,w,j,pn(a(A)),M,z,i,c))}return R!=null&&Ql(R,null,j,F),N},g=(A,F,w,j,M,z)=>{z=z||!!F.dynamicChildren;const{type:D,props:P,patchFlag:H,shapeFlag:R,dirs:Z,transition:G}=F,Y=D==="input"||D==="option";if(Y||H!==-1){Z&&Ps(F,null,w,"created");let N=!1;if(f(A)){N=Mk(null,G)&&w&&w.vnode.props&&w.vnode.props.appear;const Q=A.content.firstChild;if(N){const hi=Q.getAttribute("class");hi&&(Q.$cls=hi),G.beforeEnter(Q)}_(Q,A,w),F.el=A=Q}if(R&16&&!(P&&(P.innerHTML||P.textContent))){let Q=o(A.firstChild,F,A,w,j,M,z);for(;Q;){dn(A,1)||Ol();const hi=Q;Q=Q.nextSibling,h(hi)}}else if(R&8){let Q=F.children;Q[0]===`
`&&(A.tagName==="PRE"||A.tagName==="TEXTAREA")&&(Q=Q.slice(1)),A.textContent!==Q&&(dn(A,0)||Ol(),A.textContent=F.children)}if(P){if(Y||!z||H&48){const Q=A.tagName.includes("-");for(const hi in P)(Y&&(hi.endsWith("value")||hi==="indeterminate")||je(hi)&&!Gl(hi)||hi[0]==="."||Q)&&e(A,hi,null,P[hi],void 0,w)}else if(P.onClick)e(A,"onClick",null,P.onClick,void 0,w);else if(H&4&&Wl(P.style))for(const Q in P.style)P.style[Q]}let li;(li=P&&P.onVnodeBeforeMount)&&ds(li,w,F),Z&&Ps(F,null,w,"beforeMount"),((li=P&&P.onVnodeMounted)||Z||N)&&qk(()=>{li&&ds(li,w,F),N&&G.enter(A),Z&&Ps(F,null,w,"mounted")},j)}return A.nextSibling},o=(A,F,w,j,M,z,D)=>{D=D||!!F.dynamicChildren;const P=F.children,H=P.length;for(let R=0;R<H;R++){const Z=D?P[R]:P[R]=gs(P[R]),G=Z.type===El;A?(G&&!D&&R+1<H&&gs(P[R+1]).type===El&&(k(n(A.data.slice(Z.children.length)),w,t(A)),A.data=Z.children),A=c(A,Z,j,M,z,D)):G&&!Z.children?k(Z.el=n(""),w):(dn(w,1)||Ol(),l(null,Z,w,null,j,M,pn(w),z))}return A},B=(A,F,w,j,M,z)=>{const{slotScopeIds:D}=F;D&&(M=M?M.concat(D):D);const P=a(A),H=o(t(A),F,P,w,j,M,z);return H&&zl(H)&&H.data==="]"?t(F.anchor=H):(Ol(),k(F.anchor=d("]"),P,H),H)},m=(A,F,w,j,M,z)=>{if(dn(A.parentElement,1)||Ol(),F.el=null,z){const H=E(A);for(;;){const R=t(A);if(R&&R!==H)h(R);else break}}const D=t(A),P=a(A);return h(A),l(null,F,P,D,w,j,pn(P),M),w&&(w.vnode.el=F.el,Hk(w,F.el)),D},E=(A,F="[",w="]")=>{let j=0;for(;A;)if(A=t(A),A&&zl(A)&&(A.data===F&&j++,A.data===w)){if(j===0)return t(A);j--}return A},_=(A,F,w)=>{const j=F.parentNode;j&&j.replaceChild(A,F);let M=w;for(;M;)M.vnode.el===F&&(M.vnode.el=M.subTree.el=A),M=M.parent},f=A=>A.nodeType===1&&A.tagName==="TEMPLATE";return[p,c]}const ch="data-allow-mismatch",Ag={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function dn(i,s){if(s===0||s===1)for(;i&&!i.hasAttribute(ch);)i=i.parentElement;const l=i&&i.getAttribute(ch);if(l==null)return!1;if(l==="")return!0;{const e=l.split(",");return s===0&&e.includes("children")?!0:e.includes(Ag[s])}}Pn().requestIdleCallback;Pn().cancelIdleCallback;function yg(i,s){if(zl(i)&&i.data==="["){let l=1,e=i.nextSibling;for(;e;){if(e.nodeType===1){if(s(e)===!1)break}else if(zl(e))if(e.data==="]"){if(--l===0)break}else e.data==="["&&l++;e=e.nextSibling}}else s(i)}const Jl=i=>!!i.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Bg(i){ai(i)&&(i={loader:i});const{loader:s,loadingComponent:l,errorComponent:e,delay:n=200,hydrate:t,timeout:a,suspensible:h=!0,onError:k}=i;let d=null,p,c=0;const g=()=>(c++,d=null,o()),o=()=>{let B;return d||(B=d=s().catch(m=>{if(m=m instanceof Error?m:new Error(String(m)),k)return new Promise((E,_)=>{k(m,()=>E(g()),()=>_(m),c+1)});throw m}).then(m=>B!==d&&d?d:(m&&(m.__esModule||m[Symbol.toStringTag]==="Module")&&(m=m.default),p=m,m)))};return O({name:"AsyncComponentWrapper",__asyncLoader:o,__asyncHydrate(B,m,E){let _=!1;(m.bu||(m.bu=[])).push(()=>_=!0);const f=()=>{_||E()},A=t?()=>{const F=t(f,w=>yg(B,w));F&&(m.bum||(m.bum=[])).push(F)}:f;p?A():o().then(()=>!m.isUnmounted&&A())},get __asyncResolved(){return p},setup(){const B=Ni;if(oa(B),p)return()=>it(p,B);const m=A=>{d=null,ze(A,B,13,!e)};if(h&&B.suspense||se)return o().then(A=>()=>it(A,B)).catch(A=>(m(A),()=>e?Pi(e,{error:A}):null));const E=ii(!1),_=ii(),f=ii(!!n);return n&&setTimeout(()=>{f.value=!1},n),a!=null&&setTimeout(()=>{if(!E.value&&!_.value){const A=new Error(`Async component timed out after ${a}ms.`);m(A),_.value=A}},a),o().then(()=>{E.value=!0,B.parent&&Ue(B.parent.vnode)&&B.parent.update()}).catch(A=>{m(A),_.value=A}),()=>{if(E.value&&p)return it(p,B);if(_.value&&e)return Pi(e,{error:_.value});if(l&&!f.value)return Pi(l)}}})}function it(i,s){const{ref:l,props:e,children:n,ce:t}=s.vnode,a=Pi(i,e,n);return a.ref=l,a.ce=t,delete s.vnode.ce,a}const Ue=i=>i.type.__isKeepAlive;function vg(i,s){Ck(i,"a",s)}function mg(i,s){Ck(i,"da",s)}function Ck(i,s,l=Ni){const e=i.__wdc||(i.__wdc=()=>{let n=l;for(;n;){if(n.isDeactivated)return;n=n.parent}return i()});if(Nn(s,e,l),l){let n=l.parent;for(;n&&n.parent;)Ue(n.parent.vnode)&&Fg(e,s,l,n),n=n.parent}}function Fg(i,s,l,e){const n=Nn(s,i,e,!0);Ds(()=>{la(e[s],n)},l)}function Nn(i,s,l=Ni,e=!1){if(l){const n=l[i]||(l[i]=[]),t=s.__weh||(s.__weh=(...a)=>{Ws();const h=Ge(l),k=Es(s,l,i,a);return h(),Ks(),k});return e?n.unshift(t):n.push(t),t}}const Zs=i=>(s,l=Ni)=>{(!se||i==="sp")&&Nn(i,(...e)=>s(...e),l)},fg=Zs("bm"),oi=Zs("m"),Cg=Zs("bu"),Ek=Zs("u"),ua=Zs("bum"),Ds=Zs("um"),Eg=Zs("sp"),bg=Zs("rtg"),_g=Zs("rtc");function Dg(i,s=Ni){Nn("ec",i,s)}const Sg="components";function Di(i,s){return wg(Sg,i,!0,s)||i}const Tg=Symbol.for("v-ndc");function wg(i,s,l=!0,e=!1){const n=ms||Ni;if(n){const t=n.type;{const h=uo(t,!1);if(h&&(h===s||h===Yi(s)||h===Ve(Yi(s))))return t}const a=gh(n[i]||t[i],s)||gh(n.appContext[i],s);return!a&&e?t:a}}function gh(i,s){return i&&(i[s]||i[Yi(s)]||i[Ve(Yi(s))])}const Dt=i=>i?Kk(i)?Fa(i):Dt(i.parent):null,Fe=Ii(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Dt(i.parent),$root:i=>Dt(i.root),$host:i=>i.ce,$emit:i=>i.emit,$options:i=>_k(i),$forceUpdate:i=>i.f||(i.f=()=>{ca(i.update)}),$nextTick:i=>i.n||(i.n=Os.bind(i.proxy)),$watch:i=>Jg.bind(i)}),st=(i,s)=>i!==Ei&&!i.__isScriptSetup&&Ai(i,s),xg={get({_:i},s){if(s==="__v_skip")return!0;const{ctx:l,setupState:e,data:n,props:t,accessCache:a,type:h,appContext:k}=i;let d;if(s[0]!=="$"){const o=a[s];if(o!==void 0)switch(o){case 1:return e[s];case 2:return n[s];case 4:return l[s];case 3:return t[s]}else{if(st(e,s))return a[s]=1,e[s];if(n!==Ei&&Ai(n,s))return a[s]=2,n[s];if((d=i.propsOptions[0])&&Ai(d,s))return a[s]=3,t[s];if(l!==Ei&&Ai(l,s))return a[s]=4,l[s];St&&(a[s]=0)}}const p=Fe[s];let c,g;if(p)return s==="$attrs"&&Hi(i.attrs,"get",""),p(i);if((c=h.__cssModules)&&(c=c[s]))return c;if(l!==Ei&&Ai(l,s))return a[s]=4,l[s];if(g=k.config.globalProperties,Ai(g,s))return g[s]},set({_:i},s,l){const{data:e,setupState:n,ctx:t}=i;return st(n,s)?(n[s]=l,!0):e!==Ei&&Ai(e,s)?(e[s]=l,!0):Ai(i.props,s)||s[0]==="$"&&s.slice(1)in i?!1:(t[s]=l,!0)},has({_:{data:i,setupState:s,accessCache:l,ctx:e,appContext:n,propsOptions:t,type:a}},h){let k,d;return!!(l[h]||i!==Ei&&h[0]!=="$"&&Ai(i,h)||st(s,h)||(k=t[0])&&Ai(k,h)||Ai(e,h)||Ai(Fe,h)||Ai(n.config.globalProperties,h)||(d=a.__cssModules)&&d[h])},defineProperty(i,s,l){return l.get!=null?i._.accessCache[s]=0:Ai(l,"value")&&this.set(i,s,l.value,null),Reflect.defineProperty(i,s,l)}};function oh(i){return ti(i)?i.reduce((s,l)=>(s[l]=null,s),{}):i}let St=!0;function Lg(i){const s=_k(i),l=i.proxy,e=i.ctx;St=!1,s.beforeCreate&&uh(s.beforeCreate,i,"bc");const{data:n,computed:t,methods:a,watch:h,provide:k,inject:d,created:p,beforeMount:c,mounted:g,beforeUpdate:o,updated:B,activated:m,deactivated:E,beforeDestroy:_,beforeUnmount:f,destroyed:A,unmounted:F,render:w,renderTracked:j,renderTriggered:M,errorCaptured:z,serverPrefetch:D,expose:P,inheritAttrs:H,components:R,directives:Z,filters:G}=s;if(d&&Rg(d,e,null),a)for(const li in a){const Q=a[li];ai(Q)&&(e[li]=Q.bind(l))}if(n){const li=n.call(l,l);Ti(li)&&(i.data=bl(li))}if(St=!0,t)for(const li in t){const Q=t[li],hi=ai(Q)?Q.bind(l,l):ai(Q.get)?Q.get.bind(l,l):Is,ss=!ai(Q)&&ai(Q.set)?Q.set.bind(l):Is,zi=C({get:hi,set:ss});Object.defineProperty(e,li,{enumerable:!0,configurable:!0,get:()=>zi.value,set:Mi=>zi.value=Mi})}if(h)for(const li in h)bk(h[li],e,l,li);if(k){const li=ai(k)?k.call(l):k;Reflect.ownKeys(li).forEach(Q=>{Cs(Q,li[Q])})}p&&uh(p,i,"c");function N(li,Q){ti(Q)?Q.forEach(hi=>li(hi.bind(l))):Q&&li(Q.bind(l))}if(N(fg,c),N(oi,g),N(Cg,o),N(Ek,B),N(vg,m),N(mg,E),N(Dg,z),N(_g,j),N(bg,M),N(ua,f),N(Ds,F),N(Eg,D),ti(P))if(P.length){const li=i.exposed||(i.exposed={});P.forEach(Q=>{Object.defineProperty(li,Q,{get:()=>l[Q],set:hi=>l[Q]=hi,enumerable:!0})})}else i.exposed||(i.exposed={});w&&i.render===Is&&(i.render=w),H!=null&&(i.inheritAttrs=H),R&&(i.components=R),Z&&(i.directives=Z),D&&oa(i)}function Rg(i,s,l=Is){ti(i)&&(i=Tt(i));for(const e in i){const n=i[e];let t;Ti(n)?"default"in n?t=bi(n.from||e,n.default,!0):t=bi(n.from||e):t=bi(n),Ri(t)?Object.defineProperty(s,e,{enumerable:!0,configurable:!0,get:()=>t.value,set:a=>t.value=a}):s[e]=t}}function uh(i,s,l){Es(ti(i)?i.map(e=>e.bind(s.proxy)):i.bind(s.proxy),s,l)}function bk(i,s,l,e){let n=e.includes(".")?jk(l,e):()=>l[e];if(Oi(i)){const t=s[i];ai(t)&&Si(n,t)}else if(ai(i))Si(n,i.bind(l));else if(Ti(i))if(ti(i))i.forEach(t=>bk(t,s,l,e));else{const t=ai(i.handler)?i.handler.bind(l):s[i.handler];ai(t)&&Si(n,t,i)}}function _k(i){const s=i.type,{mixins:l,extends:e}=s,{mixins:n,optionsCache:t,config:{optionMergeStrategies:a}}=i.appContext,h=t.get(s);let k;return h?k=h:!n.length&&!l&&!e?k=s:(k={},n.length&&n.forEach(d=>Dn(k,d,a,!0)),Dn(k,s,a)),Ti(s)&&t.set(s,k),k}function Dn(i,s,l,e=!1){const{mixins:n,extends:t}=s;t&&Dn(i,t,l,!0),n&&n.forEach(a=>Dn(i,a,l,!0));for(const a in s)if(!(e&&a==="expose")){const h=Pg[a]||l&&l[a];i[a]=h?h(i[a],s[a]):s[a]}return i}const Pg={data:Ah,props:yh,emits:yh,methods:ye,computed:ye,beforeCreate:qi,created:qi,beforeMount:qi,mounted:qi,beforeUpdate:qi,updated:qi,beforeDestroy:qi,beforeUnmount:qi,destroyed:qi,unmounted:qi,activated:qi,deactivated:qi,errorCaptured:qi,serverPrefetch:qi,components:ye,directives:ye,watch:Og,provide:Ah,inject:Ig};function Ah(i,s){return s?i?function(){return Ii(ai(i)?i.call(this,this):i,ai(s)?s.call(this,this):s)}:s:i}function Ig(i,s){return ye(Tt(i),Tt(s))}function Tt(i){if(ti(i)){const s={};for(let l=0;l<i.length;l++)s[i[l]]=i[l];return s}return i}function qi(i,s){return i?[...new Set([].concat(i,s))]:s}function ye(i,s){return i?Ii(Object.create(null),i,s):s}function yh(i,s){return i?ti(i)&&ti(s)?[...new Set([...i,...s])]:Ii(Object.create(null),oh(i),oh(s??{})):s}function Og(i,s){if(!i)return s;if(!s)return i;const l=Ii(Object.create(null),i);for(const e in s)l[e]=qi(i[e],s[e]);return l}function Dk(){return{app:null,config:{isNativeTag:Vr,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Mg=0;function Ng(i,s){return function(e,n=null){ai(e)||(e=Ii({},e)),n!=null&&!Ti(n)&&(n=null);const t=Dk(),a=new WeakSet,h=[];let k=!1;const d=t.app={_uid:Mg++,_component:e,_props:n,_container:null,_context:t,_instance:null,version:yo,get config(){return t.config},set config(p){},use(p,...c){return a.has(p)||(p&&ai(p.install)?(a.add(p),p.install(d,...c)):ai(p)&&(a.add(p),p(d,...c))),d},mixin(p){return t.mixins.includes(p)||t.mixins.push(p),d},component(p,c){return c?(t.components[p]=c,d):t.components[p]},directive(p,c){return c?(t.directives[p]=c,d):t.directives[p]},mount(p,c,g){if(!k){const o=d._ceVNode||Pi(e,n);return o.appContext=t,g===!0?g="svg":g===!1&&(g=void 0),c&&s?s(o,p):i(o,p,g),k=!0,d._container=p,p.__vue_app__=d,Fa(o.component)}},onUnmount(p){h.push(p)},unmount(){k&&(Es(h,d._instance,16),i(null,d._container),delete d._container.__vue_app__)},provide(p,c){return t.provides[p]=c,d},runWithContext(p){const c=Cl;Cl=d;try{return p()}finally{Cl=c}}};return d}}let Cl=null;function Cs(i,s){if(Ni){let l=Ni.provides;const e=Ni.parent&&Ni.parent.provides;e===l&&(l=Ni.provides=Object.create(e)),l[i]=s}}function bi(i,s,l=!1){const e=Ys();if(e||Cl){let n=Cl?Cl._context.provides:e?e.parent==null||e.ce?e.vnode.appContext&&e.vnode.appContext.provides:e.parent.provides:void 0;if(n&&i in n)return n[i];if(arguments.length>1)return l&&ai(s)?s.call(e&&e.proxy):s}}function Sk(){return!!(Ys()||Cl)}const Tk={},wk=()=>Object.create(Tk),xk=i=>Object.getPrototypeOf(i)===Tk;function $g(i,s,l,e=!1){const n={},t=wk();i.propsDefaults=Object.create(null),Lk(i,s,n,t);for(const a in i.propsOptions[0])a in n||(n[a]=void 0);l?i.props=e?n:rk(n):i.type.props?i.props=n:i.props=t,i.attrs=t}function jg(i,s,l,e){const{props:n,attrs:t,vnode:{patchFlag:a}}=i,h=ci(n),[k]=i.propsOptions;let d=!1;if((e||a>0)&&!(a&16)){if(a&8){const p=i.vnode.dynamicProps;for(let c=0;c<p.length;c++){let g=p[c];if($n(i.emitsOptions,g))continue;const o=s[g];if(k)if(Ai(t,g))o!==t[g]&&(t[g]=o,d=!0);else{const B=Yi(g);n[B]=wt(k,h,B,o,i,!1)}else o!==t[g]&&(t[g]=o,d=!0)}}}else{Lk(i,s,n,t)&&(d=!0);let p;for(const c in h)(!s||!Ai(s,c)&&((p=Sl(c))===c||!Ai(s,p)))&&(k?l&&(l[c]!==void 0||l[p]!==void 0)&&(n[c]=wt(k,h,c,void 0,i,!0)):delete n[c]);if(t!==h)for(const c in t)(!s||!Ai(s,c))&&(delete t[c],d=!0)}d&&Gs(i.attrs,"set","")}function Lk(i,s,l,e){const[n,t]=i.propsOptions;let a=!1,h;if(s)for(let k in s){if(Gl(k))continue;const d=s[k];let p;n&&Ai(n,p=Yi(k))?!t||!t.includes(p)?l[p]=d:(h||(h={}))[p]=d:$n(i.emitsOptions,k)||(!(k in e)||d!==e[k])&&(e[k]=d,a=!0)}if(t){const k=ci(l),d=h||Ei;for(let p=0;p<t.length;p++){const c=t[p];l[c]=wt(n,k,c,d[c],i,!Ai(d,c))}}return a}function wt(i,s,l,e,n,t){const a=i[l];if(a!=null){const h=Ai(a,"default");if(h&&e===void 0){const k=a.default;if(a.type!==Function&&!a.skipFactory&&ai(k)){const{propsDefaults:d}=n;if(l in d)e=d[l];else{const p=Ge(n);e=d[l]=k.call(null,s),p()}}else e=k;n.ce&&n.ce._setProp(l,e)}a[0]&&(t&&!h?e=!1:a[1]&&(e===""||e===Sl(l))&&(e=!0))}return e}const Vg=new WeakMap;function Rk(i,s,l=!1){const e=l?Vg:s.propsCache,n=e.get(i);if(n)return n;const t=i.props,a={},h=[];let k=!1;if(!ai(i)){const p=c=>{k=!0;const[g,o]=Rk(c,s,!0);Ii(a,g),o&&h.push(...o)};!l&&s.mixins.length&&s.mixins.forEach(p),i.extends&&p(i.extends),i.mixins&&i.mixins.forEach(p)}if(!t&&!k)return Ti(i)&&e.set(i,Ul),Ul;if(ti(t))for(let p=0;p<t.length;p++){const c=Yi(t[p]);Bh(c)&&(a[c]=Ei)}else if(t)for(const p in t){const c=Yi(p);if(Bh(c)){const g=t[p],o=a[c]=ti(g)||ai(g)?{type:g}:Ii({},g),B=o.type;let m=!1,E=!0;if(ti(B))for(let _=0;_<B.length;++_){const f=B[_],A=ai(f)&&f.name;if(A==="Boolean"){m=!0;break}else A==="String"&&(E=!1)}else m=ai(B)&&B.name==="Boolean";o[0]=m,o[1]=E,(m||Ai(o,"default"))&&h.push(c)}}const d=[a,h];return Ti(i)&&e.set(i,d),d}function Bh(i){return i[0]!=="$"&&!Gl(i)}const Aa=i=>i==="_"||i==="_ctx"||i==="$stable",ya=i=>ti(i)?i.map(gs):[gs(i)],Hg=(i,s,l)=>{if(s._n)return s;const e=kg((...n)=>ya(s(...n)),l);return e._c=!1,e},Pk=(i,s,l)=>{const e=i._ctx;for(const n in i){if(Aa(n))continue;const t=i[n];if(ai(t))s[n]=Hg(n,t,e);else if(t!=null){const a=ya(t);s[n]=()=>a}}},Ik=(i,s)=>{const l=ya(s);i.slots.default=()=>l},Ok=(i,s,l)=>{for(const e in s)(l||!Aa(e))&&(i[e]=s[e])},zg=(i,s,l)=>{const e=i.slots=wk();if(i.vnode.shapeFlag&32){const n=s._;n?(Ok(e,s,l),l&&zr(e,"_",n,!0)):Pk(s,e)}else s&&Ik(i,s)},qg=(i,s,l)=>{const{vnode:e,slots:n}=i;let t=!0,a=Ei;if(e.shapeFlag&32){const h=s._;h?l&&h===1?t=!1:Ok(n,s,l):(t=!s.$stable,Pk(s,n)),a=s}else s&&(Ik(i,s),a={default:1});if(t)for(const h in n)!Aa(h)&&a[h]==null&&delete n[h]},ts=qk;function Ug(i){return Gg(i,ug)}function Gg(i,s){const l=Pn();l.__VUE__=!0;const{insert:e,remove:n,patchProp:t,createElement:a,createText:h,createComment:k,setText:d,setElementText:p,parentNode:c,nextSibling:g,setScopeId:o=Is,insertStaticContent:B}=i,m=(u,v,b,x=null,T=null,L=null,U=void 0,V=null,$=!!v.dynamicChildren)=>{if(u===v)return;u&&!ml(u,v)&&(x=S(u),Mi(u,T,L,!0),u=null),v.patchFlag===-2&&($=!1,v.dynamicChildren=null);const{type:I,ref:si,shapeFlag:K}=v;switch(I){case El:E(u,v,b,x);break;case Wi:_(u,v,b,x);break;case fe:u==null&&f(v,b,x,U);break;case Zi:R(u,v,b,x,T,L,U,V,$);break;default:K&1?w(u,v,b,x,T,L,U,V,$):K&6?Z(u,v,b,x,T,L,U,V,$):(K&64||K&128)&&I.process(u,v,b,x,T,L,U,V,$,J)}si!=null&&T?Ql(si,u&&u.ref,L,v||u,!v):si==null&&u&&u.ref!=null&&Ql(u.ref,null,L,u,!0)},E=(u,v,b,x)=>{if(u==null)e(v.el=h(v.children),b,x);else{const T=v.el=u.el;v.children!==u.children&&d(T,v.children)}},_=(u,v,b,x)=>{u==null?e(v.el=k(v.children||""),b,x):v.el=u.el},f=(u,v,b,x)=>{[u.el,u.anchor]=B(u.children,v,b,x,u.el,u.anchor)},A=({el:u,anchor:v},b,x)=>{let T;for(;u&&u!==v;)T=g(u),e(u,b,x),u=T;e(v,b,x)},F=({el:u,anchor:v})=>{let b;for(;u&&u!==v;)b=g(u),n(u),u=b;n(v)},w=(u,v,b,x,T,L,U,V,$)=>{v.type==="svg"?U="svg":v.type==="math"&&(U="mathml"),u==null?j(v,b,x,T,L,U,V,$):D(u,v,T,L,U,V,$)},j=(u,v,b,x,T,L,U,V)=>{let $,I;const{props:si,shapeFlag:K,transition:X,dirs:ni}=u;if($=u.el=a(u.type,L,si&&si.is,si),K&8?p($,u.children):K&16&&z(u.children,$,null,x,T,lt(u,L),U,V),ni&&Ps(u,null,x,"created"),M($,u,u.scopeId,U,x),si){for(const fi in si)fi!=="value"&&!Gl(fi)&&t($,fi,null,si[fi],L,x);"value"in si&&t($,"value",null,si.value,L),(I=si.onVnodeBeforeMount)&&ds(I,x,u)}ni&&Ps(u,null,x,"beforeMount");const di=Mk(T,X);di&&X.beforeEnter($),e($,v,b),((I=si&&si.onVnodeMounted)||di||ni)&&ts(()=>{I&&ds(I,x,u),di&&X.enter($),ni&&Ps(u,null,x,"mounted")},T)},M=(u,v,b,x,T)=>{if(b&&o(u,b),x)for(let L=0;L<x.length;L++)o(u,x[L]);if(T){let L=T.subTree;if(v===L||zk(L.type)&&(L.ssContent===v||L.ssFallback===v)){const U=T.vnode;M(u,U,U.scopeId,U.slotScopeIds,T.parent)}}},z=(u,v,b,x,T,L,U,V,$=0)=>{for(let I=$;I<u.length;I++){const si=u[I]=V?hl(u[I]):gs(u[I]);m(null,si,v,b,x,T,L,U,V)}},D=(u,v,b,x,T,L,U)=>{const V=v.el=u.el;let{patchFlag:$,dynamicChildren:I,dirs:si}=v;$|=u.patchFlag&16;const K=u.props||Ei,X=v.props||Ei;let ni;if(b&&Al(b,!1),(ni=X.onVnodeBeforeUpdate)&&ds(ni,b,v,u),si&&Ps(v,u,b,"beforeUpdate"),b&&Al(b,!0),(K.innerHTML&&X.innerHTML==null||K.textContent&&X.textContent==null)&&p(V,""),I?P(u.dynamicChildren,I,V,b,x,lt(v,T),L):U||Q(u,v,V,null,b,x,lt(v,T),L,!1),$>0){if($&16)H(V,K,X,b,T);else if($&2&&K.class!==X.class&&t(V,"class",null,X.class,T),$&4&&t(V,"style",K.style,X.style,T),$&8){const di=v.dynamicProps;for(let fi=0;fi<di.length;fi++){const yi=di[fi],Ji=K[yi],ji=X[yi];(ji!==Ji||yi==="value")&&t(V,yi,Ji,ji,T,b)}}$&1&&u.children!==v.children&&p(V,v.children)}else!U&&I==null&&H(V,K,X,b,T);((ni=X.onVnodeUpdated)||si)&&ts(()=>{ni&&ds(ni,b,v,u),si&&Ps(v,u,b,"updated")},x)},P=(u,v,b,x,T,L,U)=>{for(let V=0;V<v.length;V++){const $=u[V],I=v[V],si=$.el&&($.type===Zi||!ml($,I)||$.shapeFlag&198)?c($.el):b;m($,I,si,null,x,T,L,U,!0)}},H=(u,v,b,x,T)=>{if(v!==b){if(v!==Ei)for(const L in v)!Gl(L)&&!(L in b)&&t(u,L,v[L],null,T,x);for(const L in b){if(Gl(L))continue;const U=b[L],V=v[L];U!==V&&L!=="value"&&t(u,L,V,U,T,x)}"value"in b&&t(u,"value",v.value,b.value,T)}},R=(u,v,b,x,T,L,U,V,$)=>{const I=v.el=u?u.el:h(""),si=v.anchor=u?u.anchor:h("");let{patchFlag:K,dynamicChildren:X,slotScopeIds:ni}=v;ni&&(V=V?V.concat(ni):ni),u==null?(e(I,b,x),e(si,b,x),z(v.children||[],b,si,T,L,U,V,$)):K>0&&K&64&&X&&u.dynamicChildren?(P(u.dynamicChildren,X,b,T,L,U,V),(v.key!=null||T&&v===T.subTree)&&Nk(u,v,!0)):Q(u,v,b,si,T,L,U,V,$)},Z=(u,v,b,x,T,L,U,V,$)=>{v.slotScopeIds=V,u==null?v.shapeFlag&512?T.ctx.activate(v,b,x,U,$):G(v,b,x,T,L,U,$):Y(u,v,$)},G=(u,v,b,x,T,L,U)=>{const V=u.component=ko(u,x,T);if(Ue(u)&&(V.ctx.renderer=J),po(V,!1,U),V.asyncDep){if(T&&T.registerDep(V,N,U),!u.el){const $=V.subTree=Pi(Wi);_(null,$,v,b),u.placeholder=$.el}}else N(V,u,v,b,T,L,U)},Y=(u,v,b)=>{const x=v.component=u.component;if(so(u,v,b))if(x.asyncDep&&!x.asyncResolved){li(x,v,b);return}else x.next=v,x.update();else v.el=u.el,x.vnode=v},N=(u,v,b,x,T,L,U)=>{const V=()=>{if(u.isMounted){let{next:K,bu:X,u:ni,parent:di,vnode:fi}=u;{const es=$k(u);if(es){K&&(K.el=fi.el,li(u,K,U)),es.asyncDep.then(()=>{u.isUnmounted||V()});return}}let yi=K,Ji;Al(u,!1),K?(K.el=fi.el,li(u,K,U)):K=fi,X&&Qn(X),(Ji=K.props&&K.props.onVnodeBeforeUpdate)&&ds(Ji,di,K,fi),Al(u,!0);const ji=et(u),Bs=u.subTree;u.subTree=ji,m(Bs,ji,c(Bs.el),S(Bs),u,T,L),K.el=ji.el,yi===null&&Hk(u,ji.el),ni&&ts(ni,T),(Ji=K.props&&K.props.onVnodeUpdated)&&ts(()=>ds(Ji,di,K,fi),T)}else{let K;const{el:X,props:ni}=v,{bm:di,m:fi,parent:yi,root:Ji,type:ji}=u,Bs=Jl(v);if(Al(u,!1),di&&Qn(di),!Bs&&(K=ni&&ni.onVnodeBeforeMount)&&ds(K,yi,v),Al(u,!0),X&&vi){const es=()=>{u.subTree=et(u),vi(X,u.subTree,u,T,null)};Bs&&ji.__asyncHydrate?ji.__asyncHydrate(X,u,es):es()}else{Ji.ce&&Ji.ce._def.shadowRoot!==!1&&Ji.ce._injectChildStyle(ji);const es=u.subTree=et(u);m(null,es,b,x,u,T,L),v.el=es.el}if(fi&&ts(fi,T),!Bs&&(K=ni&&ni.onVnodeMounted)){const es=v;ts(()=>ds(K,yi,es),T)}(v.shapeFlag&256||yi&&Jl(yi.vnode)&&yi.vnode.shapeFlag&256)&&u.a&&ts(u.a,T),u.isMounted=!0,v=b=x=null}};u.scope.on();const $=u.effect=new Gr(V);u.scope.off();const I=u.update=$.run.bind($),si=u.job=$.runIfDirty.bind($);si.i=u,si.id=u.uid,$.scheduler=()=>ca(si),Al(u,!0),I()},li=(u,v,b)=>{v.component=u;const x=u.vnode.props;u.vnode=v,u.next=null,jg(u,v.props,x,b),qg(u,v.children,b),Ws(),kh(u),Ks()},Q=(u,v,b,x,T,L,U,V,$=!1)=>{const I=u&&u.children,si=u?u.shapeFlag:0,K=v.children,{patchFlag:X,shapeFlag:ni}=v;if(X>0){if(X&128){ss(I,K,b,x,T,L,U,V,$);return}else if(X&256){hi(I,K,b,x,T,L,U,V,$);return}}ni&8?(si&16&&$i(I,T,L),K!==I&&p(b,K)):si&16?ni&16?ss(I,K,b,x,T,L,U,V,$):$i(I,T,L,!0):(si&8&&p(b,""),ni&16&&z(K,b,x,T,L,U,V,$))},hi=(u,v,b,x,T,L,U,V,$)=>{u=u||Ul,v=v||Ul;const I=u.length,si=v.length,K=Math.min(I,si);let X;for(X=0;X<K;X++){const ni=v[X]=$?hl(v[X]):gs(v[X]);m(u[X],ni,b,null,T,L,U,V,$)}I>si?$i(u,T,L,!0,!1,K):z(v,b,x,T,L,U,V,$,K)},ss=(u,v,b,x,T,L,U,V,$)=>{let I=0;const si=v.length;let K=u.length-1,X=si-1;for(;I<=K&&I<=X;){const ni=u[I],di=v[I]=$?hl(v[I]):gs(v[I]);if(ml(ni,di))m(ni,di,b,null,T,L,U,V,$);else break;I++}for(;I<=K&&I<=X;){const ni=u[K],di=v[X]=$?hl(v[X]):gs(v[X]);if(ml(ni,di))m(ni,di,b,null,T,L,U,V,$);else break;K--,X--}if(I>K){if(I<=X){const ni=X+1,di=ni<si?v[ni].el:x;for(;I<=X;)m(null,v[I]=$?hl(v[I]):gs(v[I]),b,di,T,L,U,V,$),I++}}else if(I>X)for(;I<=K;)Mi(u[I],T,L,!0),I++;else{const ni=I,di=I,fi=new Map;for(I=di;I<=X;I++){const ns=v[I]=$?hl(v[I]):gs(v[I]);ns.key!=null&&fi.set(ns.key,I)}let yi,Ji=0;const ji=X-di+1;let Bs=!1,es=0;const ge=new Array(ji);for(I=0;I<ji;I++)ge[I]=0;for(I=ni;I<=K;I++){const ns=u[I];if(Ji>=ji){Mi(ns,T,L,!0);continue}let xs;if(ns.key!=null)xs=fi.get(ns.key);else for(yi=di;yi<=X;yi++)if(ge[yi-di]===0&&ml(ns,v[yi])){xs=yi;break}xs===void 0?Mi(ns,T,L,!0):(ge[xs-di]=I+1,xs>=es?es=xs:Bs=!0,m(ns,v[xs],b,null,T,L,U,V,$),Ji++)}const eh=Bs?Wg(ge):Ul;for(yi=eh.length-1,I=ji-1;I>=0;I--){const ns=di+I,xs=v[ns],nh=v[ns+1],th=ns+1<si?nh.el||nh.placeholder:x;ge[I]===0?m(null,xs,b,th,T,L,U,V,$):Bs&&(yi<0||I!==eh[yi]?zi(xs,b,th,2):yi--)}}},zi=(u,v,b,x,T=null)=>{const{el:L,type:U,transition:V,children:$,shapeFlag:I}=u;if(I&6){zi(u.component.subTree,v,b,x);return}if(I&128){u.suspense.move(v,b,x);return}if(I&64){U.move(u,v,b,J);return}if(U===Zi){e(L,v,b);for(let K=0;K<$.length;K++)zi($[K],v,b,x);e(u.anchor,v,b);return}if(U===fe){A(u,v,b);return}if(x!==2&&I&1&&V)if(x===0)V.beforeEnter(L),e(L,v,b),ts(()=>V.enter(L),T);else{const{leave:K,delayLeave:X,afterLeave:ni}=V,di=()=>{u.ctx.isUnmounted?n(L):e(L,v,b)},fi=()=>{L._isLeaving&&L[Us](!0),K(L,()=>{di(),ni&&ni()})};X?X(L,di,fi):fi()}else e(L,v,b)},Mi=(u,v,b,x=!1,T=!1)=>{const{type:L,props:U,ref:V,children:$,dynamicChildren:I,shapeFlag:si,patchFlag:K,dirs:X,cacheIndex:ni}=u;if(K===-2&&(T=!1),V!=null&&(Ws(),Ql(V,null,b,u,!0),Ks()),ni!=null&&(v.renderCache[ni]=void 0),si&256){v.ctx.deactivate(u);return}const di=si&1&&X,fi=!Jl(u);let yi;if(fi&&(yi=U&&U.onVnodeBeforeUnmount)&&ds(yi,v,u),si&6)ws(u.component,b,x);else{if(si&128){u.suspense.unmount(b,x);return}di&&Ps(u,null,v,"beforeUnmount"),si&64?u.type.remove(u,v,b,J,x):I&&!I.hasOnce&&(L!==Zi||K>0&&K&64)?$i(I,v,b,!1,!0):(L===Zi&&K&384||!T&&si&16)&&$i($,v,b),x&&ls(u)}(fi&&(yi=U&&U.onVnodeUnmounted)||di)&&ts(()=>{yi&&ds(yi,v,u),di&&Ps(u,null,v,"unmounted")},b)},ls=u=>{const{type:v,el:b,anchor:x,transition:T}=u;if(v===Zi){$s(b,x);return}if(v===fe){F(u);return}const L=()=>{n(b),T&&!T.persisted&&T.afterLeave&&T.afterLeave()};if(u.shapeFlag&1&&T&&!T.persisted){const{leave:U,delayLeave:V}=T,$=()=>U(b,L);V?V(u.el,L,$):$()}else L()},$s=(u,v)=>{let b;for(;u!==v;)b=g(u),n(u),u=b;n(v)},ws=(u,v,b)=>{const{bum:x,scope:T,job:L,subTree:U,um:V,m:$,a:I}=u;vh($),vh(I),x&&Qn(x),T.stop(),L&&(L.flags|=8,Mi(U,u,v,b)),V&&ts(V,v),ts(()=>{u.isUnmounted=!0},v)},$i=(u,v,b,x=!1,T=!1,L=0)=>{for(let U=L;U<u.length;U++)Mi(u[U],v,b,x,T)},S=u=>{if(u.shapeFlag&6)return S(u.component.subTree);if(u.shapeFlag&128)return u.suspense.next();const v=g(u.anchor||u.el),b=v&&v[pg];return b?g(b):v};let W=!1;const q=(u,v,b)=>{u==null?v._vnode&&Mi(v._vnode,null,null,!0):m(v._vnode||null,u,v,null,null,null,b),v._vnode=u,W||(W=!0,kh(),bn(),W=!1)},J={p:m,um:Mi,m:zi,r:ls,mt:G,mc:z,pc:Q,pbc:P,n:S,o:i};let gi,vi;return s&&([gi,vi]=s(J)),{render:q,hydrate:gi,createApp:Ng(q,gi)}}function lt({type:i,props:s},l){return l==="svg"&&i==="foreignObject"||l==="mathml"&&i==="annotation-xml"&&s&&s.encoding&&s.encoding.includes("html")?void 0:l}function Al({effect:i,job:s},l){l?(i.flags|=32,s.flags|=4):(i.flags&=-33,s.flags&=-5)}function Mk(i,s){return(!i||i&&!i.pendingBranch)&&s&&!s.persisted}function Nk(i,s,l=!1){const e=i.children,n=s.children;if(ti(e)&&ti(n))for(let t=0;t<e.length;t++){const a=e[t];let h=n[t];h.shapeFlag&1&&!h.dynamicChildren&&((h.patchFlag<=0||h.patchFlag===32)&&(h=n[t]=hl(n[t]),h.el=a.el),!l&&h.patchFlag!==-2&&Nk(a,h)),h.type===El&&h.patchFlag!==-1&&(h.el=a.el),h.type===Wi&&!h.el&&(h.el=a.el)}}function Wg(i){const s=i.slice(),l=[0];let e,n,t,a,h;const k=i.length;for(e=0;e<k;e++){const d=i[e];if(d!==0){if(n=l[l.length-1],i[n]<d){s[e]=n,l.push(e);continue}for(t=0,a=l.length-1;t<a;)h=t+a>>1,i[l[h]]<d?t=h+1:a=h;d<i[l[t]]&&(t>0&&(s[e]=l[t-1]),l[t]=e)}}for(t=l.length,a=l[t-1];t-- >0;)l[t]=a,a=s[a];return l}function $k(i){const s=i.subTree.component;if(s)return s.asyncDep&&!s.asyncResolved?s:$k(s)}function vh(i){if(i)for(let s=0;s<i.length;s++)i[s].flags|=8}const Kg=Symbol.for("v-scx"),Qg=()=>bi(Kg);function Ba(i,s){return va(i,null,s)}function Si(i,s,l){return va(i,s,l)}function va(i,s,l=Ei){const{immediate:e,deep:n,flush:t,once:a}=l,h=Ii({},l),k=s&&e||!s&&t!=="post";let d;if(se){if(t==="sync"){const o=Qg();d=o.__watcherHandles||(o.__watcherHandles=[])}else if(!k){const o=()=>{};return o.stop=Is,o.resume=Is,o.pause=Is,o}}const p=Ni;h.call=(o,B,m)=>Es(o,p,B,m);let c=!1;t==="post"?h.scheduler=o=>{ts(o,p&&p.suspense)}:t!=="sync"&&(c=!0,h.scheduler=(o,B)=>{B?o():ca(o)}),h.augmentJob=o=>{s&&(o.flags|=4),c&&(o.flags|=2,p&&(o.id=p.uid,o.i=p))};const g=tg(i,s,h);return se&&(d?d.push(g):k&&g()),g}function Jg(i,s,l){const e=this.proxy,n=Oi(i)?i.includes(".")?jk(e,i):()=>e[i]:i.bind(e,e);let t;ai(s)?t=s:(t=s.handler,l=s);const a=Ge(this),h=va(n,t.bind(e),l);return a(),h}function jk(i,s){const l=s.split(".");return()=>{let e=i;for(let n=0;n<l.length&&e;n++)e=e[l[n]];return e}}const Zg=(i,s)=>s==="modelValue"||s==="model-value"?i.modelModifiers:i[`${s}Modifiers`]||i[`${Yi(s)}Modifiers`]||i[`${Sl(s)}Modifiers`];function Yg(i,s,...l){if(i.isUnmounted)return;const e=i.vnode.props||Ei;let n=l;const t=s.startsWith("update:"),a=t&&Zg(e,s.slice(7));a&&(a.trim&&(n=l.map(p=>Oi(p)?p.trim():p)),a.number&&(n=l.map(mc)));let h,k=e[h=Kn(s)]||e[h=Kn(Yi(s))];!k&&t&&(k=e[h=Kn(Sl(s))]),k&&Es(k,i,6,n);const d=e[h+"Once"];if(d){if(!i.emitted)i.emitted={};else if(i.emitted[h])return;i.emitted[h]=!0,Es(d,i,6,n)}}function Vk(i,s,l=!1){const e=s.emitsCache,n=e.get(i);if(n!==void 0)return n;const t=i.emits;let a={},h=!1;if(!ai(i)){const k=d=>{const p=Vk(d,s,!0);p&&(h=!0,Ii(a,p))};!l&&s.mixins.length&&s.mixins.forEach(k),i.extends&&k(i.extends),i.mixins&&i.mixins.forEach(k)}return!t&&!h?(Ti(i)&&e.set(i,null),null):(ti(t)?t.forEach(k=>a[k]=null):Ii(a,t),Ti(i)&&e.set(i,a),a)}function $n(i,s){return!i||!je(s)?!1:(s=s.slice(2).replace(/Once$/,""),Ai(i,s[0].toLowerCase()+s.slice(1))||Ai(i,Sl(s))||Ai(i,s))}function et(i){const{type:s,vnode:l,proxy:e,withProxy:n,propsOptions:[t],slots:a,attrs:h,emit:k,render:d,renderCache:p,props:c,data:g,setupState:o,ctx:B,inheritAttrs:m}=i,E=_n(i);let _,f;try{if(l.shapeFlag&4){const F=n||e,w=F;_=gs(d.call(w,F,p,c,o,g,B)),f=h}else{const F=s;_=gs(F.length>1?F(c,{attrs:h,slots:a,emit:k}):F(c,null)),f=s.props?h:Xg(h)}}catch(F){Ce.length=0,ze(F,i,1),_=Pi(Wi)}let A=_;if(f&&m!==!1){const F=Object.keys(f),{shapeFlag:w}=A;F.length&&w&7&&(t&&F.some(sa)&&(f=io(f,t)),A=cl(A,f,!1,!0))}return l.dirs&&(A=cl(A,null,!1,!0),A.dirs=A.dirs?A.dirs.concat(l.dirs):l.dirs),l.transition&&Dl(A,l.transition),_=A,_n(E),_}const Xg=i=>{let s;for(const l in i)(l==="class"||l==="style"||je(l))&&((s||(s={}))[l]=i[l]);return s},io=(i,s)=>{const l={};for(const e in i)(!sa(e)||!(e.slice(9)in s))&&(l[e]=i[e]);return l};function so(i,s,l){const{props:e,children:n,component:t}=i,{props:a,children:h,patchFlag:k}=s,d=t.emitsOptions;if(s.dirs||s.transition)return!0;if(l&&k>=0){if(k&1024)return!0;if(k&16)return e?mh(e,a,d):!!a;if(k&8){const p=s.dynamicProps;for(let c=0;c<p.length;c++){const g=p[c];if(a[g]!==e[g]&&!$n(d,g))return!0}}}else return(n||h)&&(!h||!h.$stable)?!0:e===a?!1:e?a?mh(e,a,d):!0:!!a;return!1}function mh(i,s,l){const e=Object.keys(s);if(e.length!==Object.keys(i).length)return!0;for(let n=0;n<e.length;n++){const t=e[n];if(s[t]!==i[t]&&!$n(l,t))return!0}return!1}function Hk({vnode:i,parent:s},l){for(;s;){const e=s.subTree;if(e.suspense&&e.suspense.activeBranch===i&&(e.el=i.el),e===i)(i=s.vnode).el=l,s=s.parent;else break}}const zk=i=>i.__isSuspense;function qk(i,s){s&&s.pendingBranch?ti(i)?s.effects.push(...i):s.effects.push(i):rg(i)}const Zi=Symbol.for("v-fgt"),El=Symbol.for("v-txt"),Wi=Symbol.for("v-cmt"),fe=Symbol.for("v-stc"),Ce=[];let hs=null;function Lv(i=!1){Ce.push(hs=i?null:[])}function lo(){Ce.pop(),hs=Ce[Ce.length-1]||null}let Re=1;function Fh(i,s=!1){Re+=i,i<0&&hs&&s&&(hs.hasOnce=!0)}function eo(i){return i.dynamicChildren=Re>0?hs||Ul:null,lo(),Re>0&&hs&&hs.push(i),i}function Rv(i,s,l,e,n,t){return eo(Gk(i,s,l,e,n,t,!0))}function Sn(i){return i?i.__v_isVNode===!0:!1}function ml(i,s){return i.type===s.type&&i.key===s.key}const Uk=({key:i})=>i??null,Bn=({ref:i,ref_key:s,ref_for:l})=>(typeof i=="number"&&(i=""+i),i!=null?Oi(i)||Ri(i)||ai(i)?{i:ms,r:i,k:s,f:!!l}:i:null);function Gk(i,s=null,l=null,e=0,n=null,t=i===Zi?0:1,a=!1,h=!1){const k={__v_isVNode:!0,__v_skip:!0,type:i,props:s,key:s&&Uk(s),ref:s&&Bn(s),scopeId:Ak,slotScopeIds:null,children:l,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:t,patchFlag:e,dynamicProps:n,dynamicChildren:null,appContext:null,ctx:ms};return h?(ma(k,l),t&128&&i.normalize(k)):l&&(k.shapeFlag|=Oi(l)?8:16),Re>0&&!a&&hs&&(k.patchFlag>0||t&6)&&k.patchFlag!==32&&hs.push(k),k}const Pi=no;function no(i,s=null,l=null,e=0,n=null,t=!1){if((!i||i===Tg)&&(i=Wi),Sn(i)){const h=cl(i,s,!0);return l&&ma(h,l),Re>0&&!t&&hs&&(h.shapeFlag&6?hs[hs.indexOf(i)]=h:hs.push(h)),h.patchFlag=-2,h}if(Ao(i)&&(i=i.__vccOpts),s){s=to(s);let{class:h,style:k}=s;h&&!Oi(h)&&(s.class=ta(h)),Ti(k)&&(pa(k)&&!ti(k)&&(k=Ii({},k)),s.style=na(k))}const a=Oi(i)?1:zk(i)?128:yk(i)?64:Ti(i)?4:ai(i)?2:0;return Gk(i,s,l,e,n,a,t,!0)}function to(i){return i?pa(i)||xk(i)?Ii({},i):i:null}function cl(i,s,l=!1,e=!1){const{props:n,ref:t,patchFlag:a,children:h,transition:k}=i,d=s?ao(n||{},s):n,p={__v_isVNode:!0,__v_skip:!0,type:i.type,props:d,key:d&&Uk(d),ref:s&&s.ref?l&&t?ti(t)?t.concat(Bn(s)):[t,Bn(s)]:Bn(s):t,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:h,target:i.target,targetStart:i.targetStart,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:s&&i.type!==Zi?a===-1?16:a|16:a,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:k,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&cl(i.ssContent),ssFallback:i.ssFallback&&cl(i.ssFallback),placeholder:i.placeholder,el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return k&&e&&Dl(p,k.clone(p)),p}function Wk(i=" ",s=0){return Pi(El,null,i,s)}function Pv(i,s){const l=Pi(fe,null,i);return l.staticCount=s,l}function gs(i){return i==null||typeof i=="boolean"?Pi(Wi):ti(i)?Pi(Zi,null,i.slice()):Sn(i)?hl(i):Pi(El,null,String(i))}function hl(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:cl(i)}function ma(i,s){let l=0;const{shapeFlag:e}=i;if(s==null)s=null;else if(ti(s))l=16;else if(typeof s=="object")if(e&65){const n=s.default;n&&(n._c&&(n._d=!1),ma(i,n()),n._c&&(n._d=!0));return}else{l=32;const n=s._;!n&&!xk(s)?s._ctx=ms:n===3&&ms&&(ms.slots._===1?s._=1:(s._=2,i.patchFlag|=1024))}else ai(s)?(s={default:s,_ctx:ms},l=32):(s=String(s),e&64?(l=16,s=[Wk(s)]):l=8);i.children=s,i.shapeFlag|=l}function ao(...i){const s={};for(let l=0;l<i.length;l++){const e=i[l];for(const n in e)if(n==="class")s.class!==e.class&&(s.class=ta([s.class,e.class]));else if(n==="style")s.style=na([s.style,e.style]);else if(je(n)){const t=s[n],a=e[n];a&&t!==a&&!(ti(t)&&t.includes(a))&&(s[n]=t?[].concat(t,a):a)}else n!==""&&(s[n]=e[n])}return s}function ds(i,s,l,e=null){Es(i,s,7,[l,e])}const ho=Dk();let ro=0;function ko(i,s,l){const e=i.type,n=(s?s.appContext:i.appContext)||ho,t={uid:ro++,vnode:i,type:e,parent:s,appContext:n,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Sc(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(n.provides),ids:s?s.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Rk(e,n),emitsOptions:Vk(e,n),emit:null,emitted:null,propsDefaults:Ei,inheritAttrs:e.inheritAttrs,ctx:Ei,data:Ei,props:Ei,attrs:Ei,slots:Ei,refs:Ei,setupState:Ei,setupContext:null,suspense:l,suspenseId:l?l.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return t.ctx={_:t},t.root=s?s.root:t,t.emit=Yg.bind(null,t),i.ce&&i.ce(t),t}let Ni=null;const Ys=()=>Ni||ms;let Tn,xt;{const i=Pn(),s=(l,e)=>{let n;return(n=i[l])||(n=i[l]=[]),n.push(e),t=>{n.length>1?n.forEach(a=>a(t)):n[0](t)}};Tn=s("__VUE_INSTANCE_SETTERS__",l=>Ni=l),xt=s("__VUE_SSR_SETTERS__",l=>se=l)}const Ge=i=>{const s=Ni;return Tn(i),i.scope.on(),()=>{i.scope.off(),Tn(s)}},fh=()=>{Ni&&Ni.scope.off(),Tn(null)};function Kk(i){return i.vnode.shapeFlag&4}let se=!1;function po(i,s=!1,l=!1){s&&xt(s);const{props:e,children:n}=i.vnode,t=Kk(i);$g(i,e,t,s),zg(i,n,l||s);const a=t?co(i,s):void 0;return s&&xt(!1),a}function co(i,s){const l=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,xg);const{setup:e}=l;if(e){Ws();const n=i.setupContext=e.length>1?oo(i):null,t=Ge(i),a=He(e,i,0,[i.props,n]),h=Hr(a);if(Ks(),t(),(h||i.sp)&&!Jl(i)&&oa(i),h){if(a.then(fh,fh),s)return a.then(k=>{Ch(i,k)}).catch(k=>{ze(k,i,0)});i.asyncDep=a}else Ch(i,a)}else Qk(i)}function Ch(i,s,l){ai(s)?i.type.__ssrInlineRender?i.ssrRender=s:i.render=s:Ti(s)&&(i.setupState=pk(s)),Qk(i)}function Qk(i,s,l){const e=i.type;i.render||(i.render=e.render||Is);{const n=Ge(i);Ws();try{Lg(i)}finally{Ks(),n()}}}const go={get(i,s){return Hi(i,"get",""),i[s]}};function oo(i){const s=l=>{i.exposed=l||{}};return{attrs:new Proxy(i.attrs,go),slots:i.slots,emit:i.emit,expose:s}}function Fa(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(pk(Jc(i.exposed)),{get(s,l){if(l in s)return s[l];if(l in Fe)return Fe[l](i)},has(s,l){return l in s||l in Fe}})):i.proxy}function uo(i,s=!0){return ai(i)?i.displayName||i.name:i.name||s&&i.__name}function Ao(i){return ai(i)&&"__vccOpts"in i}const C=(i,s)=>eg(i,s,se);function r(i,s,l){const e=arguments.length;return e===2?Ti(s)&&!ti(s)?Sn(s)?Pi(i,null,[s]):Pi(i,s):Pi(i,null,s):(e>3?l=Array.prototype.slice.call(arguments,2):e===3&&Sn(l)&&(l=[l]),Pi(i,s,l))}const yo="3.5.19";/**
* @vue/runtime-dom v3.5.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Lt;const Eh=typeof window<"u"&&window.trustedTypes;if(Eh)try{Lt=Eh.createPolicy("vue",{createHTML:i=>i})}catch{}const Jk=Lt?i=>Lt.createHTML(i):i=>i,Bo="http://www.w3.org/2000/svg",vo="http://www.w3.org/1998/Math/MathML",qs=typeof document<"u"?document:null,bh=qs&&qs.createElement("template"),mo={insert:(i,s,l)=>{s.insertBefore(i,l||null)},remove:i=>{const s=i.parentNode;s&&s.removeChild(i)},createElement:(i,s,l,e)=>{const n=s==="svg"?qs.createElementNS(Bo,i):s==="mathml"?qs.createElementNS(vo,i):l?qs.createElement(i,{is:l}):qs.createElement(i);return i==="select"&&e&&e.multiple!=null&&n.setAttribute("multiple",e.multiple),n},createText:i=>qs.createTextNode(i),createComment:i=>qs.createComment(i),setText:(i,s)=>{i.nodeValue=s},setElementText:(i,s)=>{i.textContent=s},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>qs.querySelector(i),setScopeId(i,s){i.setAttribute(s,"")},insertStaticContent(i,s,l,e,n,t){const a=l?l.previousSibling:s.lastChild;if(n&&(n===t||n.nextSibling))for(;s.insertBefore(n.cloneNode(!0),l),!(n===t||!(n=n.nextSibling)););else{bh.innerHTML=Jk(e==="svg"?`<svg>${i}</svg>`:e==="mathml"?`<math>${i}</math>`:i);const h=bh.content;if(e==="svg"||e==="mathml"){const k=h.firstChild;for(;k.firstChild;)h.appendChild(k.firstChild);h.removeChild(k)}s.insertBefore(h,l)}return[a?a.nextSibling:s.firstChild,l?l.previousSibling:s.lastChild]}},ll="transition",ue="animation",le=Symbol("_vtc"),Zk={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Yk=Ii({},vk,Zk),Fo=i=>(i.displayName="Transition",i.props=Yk,i),ee=Fo((i,{slots:s})=>r(cg,Xk(i),s)),yl=(i,s=[])=>{ti(i)?i.forEach(l=>l(...s)):i&&i(...s)},_h=i=>i?ti(i)?i.some(s=>s.length>1):i.length>1:!1;function Xk(i){const s={};for(const R in i)R in Zk||(s[R]=i[R]);if(i.css===!1)return s;const{name:l="v",type:e,duration:n,enterFromClass:t=`${l}-enter-from`,enterActiveClass:a=`${l}-enter-active`,enterToClass:h=`${l}-enter-to`,appearFromClass:k=t,appearActiveClass:d=a,appearToClass:p=h,leaveFromClass:c=`${l}-leave-from`,leaveActiveClass:g=`${l}-leave-active`,leaveToClass:o=`${l}-leave-to`}=i,B=fo(n),m=B&&B[0],E=B&&B[1],{onBeforeEnter:_,onEnter:f,onEnterCancelled:A,onLeave:F,onLeaveCancelled:w,onBeforeAppear:j=_,onAppear:M=f,onAppearCancelled:z=A}=s,D=(R,Z,G,Y)=>{R._enterCancelled=Y,tl(R,Z?p:h),tl(R,Z?d:a),G&&G()},P=(R,Z)=>{R._isLeaving=!1,tl(R,c),tl(R,o),tl(R,g),Z&&Z()},H=R=>(Z,G)=>{const Y=R?M:f,N=()=>D(Z,R,G);yl(Y,[Z,N]),Dh(()=>{tl(Z,R?k:t),Ls(Z,R?p:h),_h(Y)||Sh(Z,e,m,N)})};return Ii(s,{onBeforeEnter(R){yl(_,[R]),Ls(R,t),Ls(R,a)},onBeforeAppear(R){yl(j,[R]),Ls(R,k),Ls(R,d)},onEnter:H(!1),onAppear:H(!0),onLeave(R,Z){R._isLeaving=!0;const G=()=>P(R,Z);Ls(R,c),R._enterCancelled?(Ls(R,g),Rt()):(Rt(),Ls(R,g)),Dh(()=>{R._isLeaving&&(tl(R,c),Ls(R,o),_h(F)||Sh(R,e,E,G))}),yl(F,[R,G])},onEnterCancelled(R){D(R,!1,void 0,!0),yl(A,[R])},onAppearCancelled(R){D(R,!0,void 0,!0),yl(z,[R])},onLeaveCancelled(R){P(R),yl(w,[R])}})}function fo(i){if(i==null)return null;if(Ti(i))return[nt(i.enter),nt(i.leave)];{const s=nt(i);return[s,s]}}function nt(i){return Fc(i)}function Ls(i,s){s.split(/\s+/).forEach(l=>l&&i.classList.add(l)),(i[le]||(i[le]=new Set)).add(s)}function tl(i,s){s.split(/\s+/).forEach(e=>e&&i.classList.remove(e));const l=i[le];l&&(l.delete(s),l.size||(i[le]=void 0))}function Dh(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}let Co=0;function Sh(i,s,l,e){const n=i._endId=++Co,t=()=>{n===i._endId&&e()};if(l!=null)return setTimeout(t,l);const{type:a,timeout:h,propCount:k}=ip(i,s);if(!a)return e();const d=a+"end";let p=0;const c=()=>{i.removeEventListener(d,g),t()},g=o=>{o.target===i&&++p>=k&&c()};setTimeout(()=>{p<k&&c()},h+1),i.addEventListener(d,g)}function ip(i,s){const l=window.getComputedStyle(i),e=B=>(l[B]||"").split(", "),n=e(`${ll}Delay`),t=e(`${ll}Duration`),a=Th(n,t),h=e(`${ue}Delay`),k=e(`${ue}Duration`),d=Th(h,k);let p=null,c=0,g=0;s===ll?a>0&&(p=ll,c=a,g=t.length):s===ue?d>0&&(p=ue,c=d,g=k.length):(c=Math.max(a,d),p=c>0?a>d?ll:ue:null,g=p?p===ll?t.length:k.length:0);const o=p===ll&&/\b(transform|all)(,|$)/.test(e(`${ll}Property`).toString());return{type:p,timeout:c,propCount:g,hasTransform:o}}function Th(i,s){for(;i.length<s.length;)i=i.concat(i);return Math.max(...s.map((l,e)=>wh(l)+wh(i[e])))}function wh(i){return i==="auto"?0:Number(i.slice(0,-1).replace(",","."))*1e3}function Rt(){return document.body.offsetHeight}function Eo(i,s,l){const e=i[le];e&&(s=(s?[s,...e]:[...e]).join(" ")),s==null?i.removeAttribute("class"):l?i.setAttribute("class",s):i.className=s}const xh=Symbol("_vod"),bo=Symbol("_vsh"),_o=Symbol(""),Do=/(^|;)\s*display\s*:/;function So(i,s,l){const e=i.style,n=Oi(l);let t=!1;if(l&&!n){if(s)if(Oi(s))for(const a of s.split(";")){const h=a.slice(0,a.indexOf(":")).trim();l[h]==null&&vn(e,h,"")}else for(const a in s)l[a]==null&&vn(e,a,"");for(const a in l)a==="display"&&(t=!0),vn(e,a,l[a])}else if(n){if(s!==l){const a=e[_o];a&&(l+=";"+a),e.cssText=l,t=Do.test(l)}}else s&&i.removeAttribute("style");xh in i&&(i[xh]=t?e.display:"",i[bo]&&(e.display="none"))}const Lh=/\s*!important$/;function vn(i,s,l){if(ti(l))l.forEach(e=>vn(i,s,e));else if(l==null&&(l=""),s.startsWith("--"))i.setProperty(s,l);else{const e=To(i,s);Lh.test(l)?i.setProperty(Sl(e),l.replace(Lh,""),"important"):i[e]=l}}const Rh=["Webkit","Moz","ms"],tt={};function To(i,s){const l=tt[s];if(l)return l;let e=Yi(s);if(e!=="filter"&&e in i)return tt[s]=e;e=Ve(e);for(let n=0;n<Rh.length;n++){const t=Rh[n]+e;if(t in i)return tt[s]=t}return s}const Ph="http://www.w3.org/1999/xlink";function Ih(i,s,l,e,n,t=Dc(s)){e&&s.startsWith("xlink:")?l==null?i.removeAttributeNS(Ph,s.slice(6,s.length)):i.setAttributeNS(Ph,s,l):l==null||t&&!qr(l)?i.removeAttribute(s):i.setAttribute(s,t?"":ae(l)?String(l):l)}function Oh(i,s,l,e,n){if(s==="innerHTML"||s==="textContent"){l!=null&&(i[s]=s==="innerHTML"?Jk(l):l);return}const t=i.tagName;if(s==="value"&&t!=="PROGRESS"&&!t.includes("-")){const h=t==="OPTION"?i.getAttribute("value")||"":i.value,k=l==null?i.type==="checkbox"?"on":"":String(l);(h!==k||!("_value"in i))&&(i.value=k),l==null&&i.removeAttribute(s),i._value=l;return}let a=!1;if(l===""||l==null){const h=typeof i[s];h==="boolean"?l=qr(l):l==null&&h==="string"?(l="",a=!0):h==="number"&&(l=0,a=!0)}try{i[s]=l}catch{}a&&i.removeAttribute(n||s)}function wo(i,s,l,e){i.addEventListener(s,l,e)}function xo(i,s,l,e){i.removeEventListener(s,l,e)}const Mh=Symbol("_vei");function Lo(i,s,l,e,n=null){const t=i[Mh]||(i[Mh]={}),a=t[s];if(e&&a)a.value=e;else{const[h,k]=Ro(s);if(e){const d=t[s]=Oo(e,n);wo(i,h,d,k)}else a&&(xo(i,h,a,k),t[s]=void 0)}}const Nh=/(?:Once|Passive|Capture)$/;function Ro(i){let s;if(Nh.test(i)){s={};let e;for(;e=i.match(Nh);)i=i.slice(0,i.length-e[0].length),s[e[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):Sl(i.slice(2)),s]}let at=0;const Po=Promise.resolve(),Io=()=>at||(Po.then(()=>at=0),at=Date.now());function Oo(i,s){const l=e=>{if(!e._vts)e._vts=Date.now();else if(e._vts<=l.attached)return;Es(Mo(e,l.value),s,5,[e])};return l.value=i,l.attached=Io(),l}function Mo(i,s){if(ti(s)){const l=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{l.call(i),i._stopped=!0},s.map(e=>n=>!n._stopped&&e&&e(n))}else return s}const $h=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,No=(i,s,l,e,n,t)=>{const a=n==="svg";s==="class"?Eo(i,e,a):s==="style"?So(i,l,e):je(s)?sa(s)||Lo(i,s,l,e,t):(s[0]==="."?(s=s.slice(1),!0):s[0]==="^"?(s=s.slice(1),!1):$o(i,s,e,a))?(Oh(i,s,e),!i.tagName.includes("-")&&(s==="value"||s==="checked"||s==="selected")&&Ih(i,s,e,a,t,s!=="value")):i._isVueCE&&(/[A-Z]/.test(s)||!Oi(e))?Oh(i,Yi(s),e,t,s):(s==="true-value"?i._trueValue=e:s==="false-value"&&(i._falseValue=e),Ih(i,s,e,a))};function $o(i,s,l,e){if(e)return!!(s==="innerHTML"||s==="textContent"||s in i&&$h(s)&&ai(l));if(s==="spellcheck"||s==="draggable"||s==="translate"||s==="autocorrect"||s==="form"||s==="list"&&i.tagName==="INPUT"||s==="type"&&i.tagName==="TEXTAREA")return!1;if(s==="width"||s==="height"){const n=i.tagName;if(n==="IMG"||n==="VIDEO"||n==="CANVAS"||n==="SOURCE")return!1}return $h(s)&&Oi(l)?!1:s in i}const sp=new WeakMap,lp=new WeakMap,wn=Symbol("_moveCb"),jh=Symbol("_enterCb"),jo=i=>(delete i.props.mode,i),Vo=jo({name:"TransitionGroup",props:Ii({},Yk,{tag:String,moveClass:String}),setup(i,{slots:s}){const l=Ys(),e=Bk();let n,t;return Ek(()=>{if(!n.length)return;const a=i.moveClass||`${i.name||"v"}-move`;if(!Uo(n[0].el,l.vnode.el,a)){n=[];return}n.forEach(Ho),n.forEach(zo);const h=n.filter(qo);Rt(),h.forEach(k=>{const d=k.el,p=d.style;Ls(d,a),p.transform=p.webkitTransform=p.transitionDuration="";const c=d[wn]=g=>{g&&g.target!==d||(!g||/transform$/.test(g.propertyName))&&(d.removeEventListener("transitionend",c),d[wn]=null,tl(d,a))};d.addEventListener("transitionend",c)}),n=[]}),()=>{const a=ci(i),h=Xk(a);let k=a.tag||Zi;if(n=[],t)for(let d=0;d<t.length;d++){const p=t[d];p.el&&p.el instanceof Element&&(n.push(p),Dl(p,Le(p,h,e,l)),sp.set(p,p.el.getBoundingClientRect()))}t=s.default?ga(s.default()):[];for(let d=0;d<t.length;d++){const p=t[d];p.key!=null&&Dl(p,Le(p,h,e,l))}return Pi(k,null,t)}}}),ep=Vo;function Ho(i){const s=i.el;s[wn]&&s[wn](),s[jh]&&s[jh]()}function zo(i){lp.set(i,i.el.getBoundingClientRect())}function qo(i){const s=sp.get(i),l=lp.get(i),e=s.left-l.left,n=s.top-l.top;if(e||n){const t=i.el.style;return t.transform=t.webkitTransform=`translate(${e}px,${n}px)`,t.transitionDuration="0s",i}}function Uo(i,s,l){const e=i.cloneNode(),n=i[le];n&&n.forEach(h=>{h.split(/\s+/).forEach(k=>k&&e.classList.remove(k))}),l.split(/\s+/).forEach(h=>h&&e.classList.add(h)),e.style.display="none";const t=s.nodeType===1?s:s.parentNode;t.appendChild(e);const{hasTransform:a}=ip(e);return t.removeChild(e),a}const Go=Ii({patchProp:No},mo);let ht,Vh=!1;function Wo(){return ht=Vh?ht:Ug(Go),Vh=!0,ht}const Ko=((...i)=>{const s=Wo().createApp(...i),{mount:l}=s;return s.mount=e=>{const n=Jo(e);if(n)return l(n,!0,Qo(n))},s});function Qo(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function Jo(i){return Oi(i)?document.querySelector(i):i}var We=i=>/^[a-z][a-z0-9+.-]*:/.test(i)||i.startsWith("//"),Zo=/.md((\?|#).*)?$/,jn=(i,s="/")=>We(i)||i.startsWith("/")&&!i.startsWith(s)&&!Zo.test(i),re=i=>/^(https?:)?\/\//.test(i),Hh=i=>{if(!i||i.endsWith("/"))return i;let s=i.replace(/(^|\/)README.md$/i,"$1index.html");return s.endsWith(".md")?s=`${s.substring(0,s.length-3)}.html`:s.endsWith(".html")||(s=`${s}.html`),s.endsWith("/index.html")&&(s=s.substring(0,s.length-10)),s},Yo="http://.",Xo=(i,s)=>{if(!i.startsWith("/")&&s){const l=s.slice(0,s.lastIndexOf("/"));return Hh(new URL(`${l}/${i}`,Yo).pathname)}return Hh(i)},i2=(i,s)=>{const l=Object.keys(i).sort((e,n)=>{const t=n.split("/").length-e.split("/").length;return t!==0?t:n.length-e.length});for(const e of l)if(s.startsWith(e))return e;return"/"},s2=/(#|\?)/,np=i=>{const[s,...l]=i.split(s2);return{pathname:s,hashAndQueries:l.join("")}},l2=["link","meta","script","style","noscript","template"],e2=["title","base"],n2=([i,s,l])=>e2.includes(i)?i:l2.includes(i)?i==="meta"&&s.name?`${i}.${s.name}`:i==="template"&&s.id?`${i}.${s.id}`:JSON.stringify([i,Object.entries(s).map(([e,n])=>typeof n=="boolean"?n?[e,""]:null:[e,n]).filter(e=>e!=null).sort(([e],[n])=>e.localeCompare(n)),l]):null,t2=i=>{const s=new Set,l=[];return i.forEach(e=>{const n=n2(e);n&&!s.has(n)&&(s.add(n),l.push(e))}),l},a2=i=>i.startsWith("/")?i:`/${i}`,tp=i=>i.endsWith("/")||i.endsWith(".html")?i:`${i}/`,fa=i=>i.endsWith("/")?i.slice(0,-1):i,ap=i=>i.startsWith("/")?i.slice(1):i,h2=i=>typeof i=="function",ol=i=>Object.prototype.toString.call(i)==="[object Object]",Bi=i=>typeof i=="string";const r2="modulepreload",k2=function(i){return"/blog-middleware/"+i},zh={},y=function(s,l,e){let n=Promise.resolve();if(l&&l.length>0){let k=function(d){return Promise.all(d.map(p=>Promise.resolve(p).then(c=>({status:"fulfilled",value:c}),c=>({status:"rejected",reason:c}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),h=a?.nonce||a?.getAttribute("nonce");n=k(l.map(d=>{if(d=k2(d),d in zh)return;zh[d]=!0;const p=d.endsWith(".css"),c=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${c}`))return;const g=document.createElement("link");if(g.rel=p?"stylesheet":r2,p||(g.as="script"),g.crossOrigin="",g.href=d,h&&g.setAttribute("nonce",h),document.head.appendChild(g),p)return new Promise((o,B)=>{g.addEventListener("load",o),g.addEventListener("error",()=>B(new Error(`Unable to preload CSS for ${d}`)))})}))}function t(a){const h=new Event("vite:preloadError",{cancelable:!0});if(h.payload=a,window.dispatchEvent(h),!h.defaultPrevented)throw a}return n.then(a=>{for(const h of a||[])h.status==="rejected"&&t(h.reason);return s().catch(t)})},p2=JSON.parse("{}"),d2=Object.fromEntries([["/",{loader:()=>y(()=>import("./index.html-CbiOfQyS.js"),__vite__mapDeps([0,1])),meta:{title:"老马啸西风",icon:"house"}}],["/intro.html",{loader:()=>y(()=>import("./intro.html-BDe3l-UX.js"),__vite__mapDeps([2,1])),meta:{date:1756738619e3,sticky:!0,cover:"/assets/images/cover3.jpg",excerpt:`
<p>大家好，我是老马啸西风。</p>
<p>一位兴趣使然的技术开发者。</p>
<h1>个人博客</h1>
<blockquote>
<p><a href="https://houbb.github.io" target="_blank" rel="noopener noreferrer">https://houbb.github.io</a></p>
</blockquote>
<h2>关于我</h2>
<blockquote>
<p><a href="https://houbb.github.io/about/" target="_blank" rel="noopener noreferrer"></a></p>
</blockquote>`,readingTime:{minutes:.18,words:53},title:"介绍页",icon:"circle-info",type:"article"}}],["/posts/api-gateway/1-1-1-api-gateway-definition-and-positioning.html",{loader:()=>y(()=>import("./1-1-1-api-gateway-definition-and-positioning.html-BpZeSkjs.js"),__vite__mapDeps([3,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在微服务架构日益普及的今天，API 网关已成为构建现代分布式系统的关键组件。本文将从技术角度深入探讨 API 网关的准确定义、核心定位以及其在整体架构中的重要作用。</p>
<h2>什么是 API 网关</h2>
<p>API 网关（API Gateway）是一种服务器端组件，作为所有客户端请求的统一入口点。它接收来自客户端的所有请求，然后将这些请求路由到适当的后端服务，并将服务响应返回给客户端。这种设计模式有效地将客户端与后端服务的复杂性隔离开来。</p>
<p>从架构角度来看，API 网关实现了"外观模式"（Facade Pattern），为复杂的后端服务系统提供了一个简化的接口。它不仅处理请求路由，还承担着安全控制、流量管理、监控日志等多项职责。</p>`,readingTime:{minutes:6.02,words:1805},title:"API 网关的定义与定位：微服务架构的统一入口",type:"article"}}],["/posts/api-gateway/1-1-2-api-gateway-role-in-microservices-evolution.html",{loader:()=>y(()=>import("./1-1-2-api-gateway-role-in-microservices-evolution.html-DRsihg0J.js"),__vite__mapDeps([4,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>软件架构的演进是一个持续适应业务需求和技术发展的过程。从单体应用到微服务架构的转变，不仅是技术层面的革新，更是对系统设计思维的重塑。在这个演进过程中，API 网关扮演了至关重要的角色，成为连接传统架构与现代分布式系统的关键桥梁。</p>
<h2>单体应用的挑战</h2>
<h3>单体架构的特点</h3>
<p>单体应用（Monolithic Application）是一种传统的软件架构模式，其特点包括：</p>
<ul>
<li><strong>统一部署</strong>：整个应用作为一个整体进行开发、测试和部署</li>
<li><strong>共享数据库</strong>：所有功能模块共享同一个数据库</li>
<li><strong>紧耦合</strong>：各功能模块之间高度依赖，难以独立修改和扩展</li>
<li><strong>技术栈统一</strong>：整个应用使用相同的技术栈</li>
</ul>`,readingTime:{minutes:7.77,words:2330},title:"单体到微服务演进中的 API 网关角色：从架构变迁看网关价值",type:"article"}}],["/posts/api-gateway/1-1-3-differences-between-api-gateway-and-other-components.html",{loader:()=>y(()=>import("./1-1-3-differences-between-api-gateway-and-other-components.html-kPXwS56k.js"),__vite__mapDeps([5,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代软件架构中，API 网关、反向代理、负载均衡器和服务网关等组件经常被提及，它们在功能上有一定的重叠，但在设计目标、应用场景和技术实现上存在显著差异。正确理解这些组件的区别和联系，对于构建高效、稳定的分布式系统至关重要。</p>
<h2>反向代理（Reverse Proxy）</h2>
<h3>定义与核心功能</h3>
<p>反向代理是一种服务器，它代表客户端从一个或多个服务器检索资源。客户端的请求被发送到反向代理，然后反向代理将请求转发到后端服务器，并将响应返回给客户端。客户端通常不知道它正在与反向代理通信。</p>
<p>反向代理的核心功能包括：</p>
<ol>
<li><strong>请求转发</strong>：将客户端请求转发到后端服务器</li>
<li><strong>响应返回</strong>：将后端服务器的响应返回给客户端</li>
<li><strong>负载均衡</strong>：在多个后端服务器间分配请求</li>
<li><strong>SSL 终止</strong>：处理 SSL/TLS 加密和解密</li>
<li><strong>缓存</strong>：缓存后端服务器的响应以提高性能</li>
<li><strong>压缩</strong>：压缩响应内容以减少网络传输</li>
</ol>`,readingTime:{minutes:9.73,words:2918},title:"API 网关与反向代理、负载均衡、服务网关的区别：技术组件的边界与协同",type:"article"}}],["/posts/api-gateway/1-1-what-is-api-gateway.html",{loader:()=>y(()=>import("./1-1-what-is-api-gateway.html-5K5msGYr.js"),__vite__mapDeps([6,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在当今的软件架构中，API 网关已成为微服务架构不可或缺的核心组件。它不仅是一个简单的请求转发器，更是整个系统的入口和大脑，承担着路由、安全、监控等多重职责。本文将深入探讨 API 网关的定义、定位及其在现代软件架构中的重要作用。</p>
<h2>API 网关的定义与定位</h2>
<p>API 网关是一种服务器，作为系统的唯一入口，负责接收所有客户端请求，并将它们路由到相应的后端服务。它的设计灵感来源于企业级网络架构中的边界路由器概念，充当着外部世界与内部服务之间的中介角色。</p>
<p>在微服务架构中，API 网关扮演着"门面模式"的角色，将内部复杂的微服务架构封装起来，对外提供统一的 API 接口。这种设计模式不仅简化了客户端的调用逻辑，还增强了系统的安全性和可维护性。</p>`,readingTime:{minutes:3.76,words:1128},title:"什么是 API 网关：微服务架构的入口与大脑",type:"article"}}],["/posts/api-gateway/1-2-1-api-gateway-request-routing.html",{loader:()=>y(()=>import("./1-2-1-api-gateway-request-routing.html-BM3zf_fN.js"),__vite__mapDeps([7,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>请求路由是 API 网关最基本也是最重要的功能之一。它决定了客户端请求如何被正确地转发到相应的后端服务。本文将深入探讨 API 网关请求路由的实现机制、配置方式以及最佳实践。</p>
<h2>请求路由的基本概念</h2>
<h3>什么是请求路由</h3>
<p>请求路由是指 API 网关根据预定义的规则，将接收到的客户端请求转发到正确的后端服务的过程。这个过程类似于网络路由器根据路由表转发数据包，但更加复杂和智能。</p>
<h3>路由的核心要素</h3>
<p>一个完整的路由规则通常包含以下几个核心要素：</p>
<ol>
<li><strong>匹配条件</strong>：定义什么样的请求会被该路由规则匹配</li>
<li><strong>目标地址</strong>：定义匹配的请求应该被转发到哪个后端服务</li>
<li><strong>转换规则</strong>：定义请求在转发前需要进行哪些转换</li>
<li><strong>过滤器</strong>：定义在路由过程中需要应用的处理逻辑</li>
</ol>`,readingTime:{minutes:6.59,words:1977},title:"API 网关的请求路由功能：智能流量分发的核心机制",type:"article"}}],["/posts/api-gateway/1-2-2-api-gateway-protocol-conversion.html",{loader:()=>y(()=>import("./1-2-2-api-gateway-protocol-conversion.html-BpmrmN_h.js"),__vite__mapDeps([8,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代分布式系统中，不同的服务可能使用不同的通信协议。API 网关作为系统的统一入口，需要具备强大的协议转换能力，将不同协议的请求转换为后端服务能够处理的格式。本文将深入探讨 API 网关的协议转换功能及其在实际应用中的实现。</p>
<h2>协议转换的基本概念</h2>
<h3>什么是协议转换</h3>
<p>协议转换是指 API 网关在接收到客户端请求后，将一种协议格式的请求转换为另一种协议格式，然后转发给相应的后端服务，并将服务响应转换回客户端能够理解的协议格式的过程。</p>
<h3>协议转换的价值</h3>
<p>协议转换功能为系统带来了以下价值：</p>
<ol>
<li><strong>统一接口</strong>：为客户端提供统一的访问接口，隐藏后端服务的协议差异</li>
<li><strong>技术解耦</strong>：允许后端服务使用最适合的技术栈和协议</li>
<li><strong>渐进式迁移</strong>：支持系统从一种协议逐步迁移到另一种协议</li>
<li><strong>客户端优化</strong>：允许客户端使用最适合的协议进行通信</li>
</ol>`,readingTime:{minutes:6.92,words:2077},title:"API 网关的协议转换功能：构建多协议兼容的统一接口",type:"article"}}],["/posts/api-gateway/1-2-3-api-gateway-security-authentication-authorization.html",{loader:()=>y(()=>import("./1-2-3-api-gateway-security-authentication-authorization.html-C3Zzg6H0.js"),__vite__mapDeps([9,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代分布式系统中，安全性是至关重要的考虑因素。API 网关作为系统的统一入口，承担着保护后端服务免受未授权访问的重要职责。本文将深入探讨 API 网关的安全认证与鉴权功能，包括常见的认证方式、授权机制以及最佳实践。</p>
<h2>安全认证的基本概念</h2>
<h3>什么是身份认证</h3>
<p>身份认证（Authentication）是验证用户身份的过程，确保用户是他们所声称的人。在 API 网关中，身份认证通常发生在请求进入系统时，验证客户端的身份凭证。</p>
<h3>什么是权限控制</h3>
<p>权限控制（Authorization）是确定已认证用户是否有权执行特定操作或访问特定资源的过程。API 网关通过权限控制确保只有授权用户才能访问相应的服务和资源。</p>`,readingTime:{minutes:7.88,words:2364},title:"API 网关的安全认证与鉴权功能：构建可信的微服务边界",type:"article"}}],["/posts/api-gateway/1-2-4-api-gateway-rate-limiting-circuit-breaker-degradation.html",{loader:()=>y(()=>import("./1-2-4-api-gateway-rate-limiting-circuit-breaker-degradation.html-fUZU_-E5.js"),__vite__mapDeps([10,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代分布式系统中，高并发和系统稳定性是两个核心挑战。API 网关作为系统的统一入口，承担着保护后端服务免受过载和故障影响的重要职责。通过限流、熔断和降级机制，API 网关能够有效控制系统流量，防止级联故障，确保系统的高可用性。本文将深入探讨这些关键功能的实现机制和最佳实践。</p>
<h2>限流机制（Rate Limiting）</h2>
<h3>什么是限流</h3>
<p>限流是一种流量控制策略，通过限制单位时间内处理的请求数量来保护系统资源，防止系统因突发流量而过载。</p>
<h3>限流算法</h3>
<h4>固定窗口算法</h4>
<p>固定窗口算法是最简单的限流算法，将时间划分为固定长度的窗口，在每个窗口内限制请求数量。</p>`,readingTime:{minutes:7.97,words:2390},title:"API 网关的限流、熔断与降级功能：构建高可用微服务系统的防护机制",type:"article"}}],["/posts/api-gateway/1-2-5-api-gateway-logging-monitoring.html",{loader:()=>y(()=>import("./1-2-5-api-gateway-logging-monitoring.html-C7dWJ5MG.js"),__vite__mapDeps([11,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代分布式系统中，可观测性是确保系统稳定性和可维护性的关键因素。API 网关作为系统的统一入口，承担着收集和分析系统运行数据的重要职责。通过完善的日志记录和监控机制，运维团队能够实时了解系统状态，快速定位和解决问题。本文将深入探讨 API 网关的日志与监控功能及其最佳实践。</p>
<h2>日志记录机制</h2>
<h3>日志的重要性</h3>
<p>日志是系统运行状态的重要反映，对于 API 网关而言，日志记录具有以下重要意义：</p>
<ol>
<li><strong>问题诊断</strong>：帮助快速定位和解决系统问题</li>
<li><strong>安全审计</strong>：记录安全相关事件，支持安全审计</li>
<li><strong>性能分析</strong>：分析系统性能瓶颈和优化点</li>
<li><strong>业务分析</strong>：了解用户行为和业务趋势</li>
<li><strong>合规要求</strong>：满足行业和法规的合规要求</li>
</ol>`,readingTime:{minutes:8.11,words:2433},title:"API 网关的日志与监控功能：构建可观测的微服务系统",type:"article"}}],["/posts/api-gateway/1-2-api-gateway-core-responsibilities.html",{loader:()=>y(()=>import("./1-2-api-gateway-core-responsibilities.html-C15TZomn.js"),__vite__mapDeps([12,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>API 网关作为微服务架构的核心组件，承担着多重关键职责。从请求路由到安全控制，从流量管理到监控日志，API 网关的功能覆盖了现代分布式系统的各个方面。本文将全面介绍 API 网关的核心职责，为深入理解其工作机制奠定基础。</p>
<h2>请求路由：智能的交通指挥官</h2>
<p>请求路由是 API 网关最基本也是最重要的功能之一。它就像一个智能的交通指挥官，根据预定义的规则将客户端请求准确地转发到相应的后端服务。</p>
<h3>路由策略</h3>
<p>API 网关支持多种路由策略：</p>
<ol>
<li><strong>基于路径的路由</strong>：根据请求 URL 的路径匹配规则进行路由</li>
<li><strong>基于方法的路由</strong>：根据 HTTP 方法（GET、POST、PUT、DELETE 等）进行路由</li>
<li><strong>基于头部的路由</strong>：根据请求头部信息进行路由</li>
<li><strong>基于查询参数的路由</strong>：根据查询参数进行路由</li>
<li><strong>基于权重的路由</strong>：根据权重分配请求到不同的服务实例</li>
</ol>`,readingTime:{minutes:4.95,words:1484},title:"API 网关的核心职责：构建稳定高效微服务系统的基石",type:"article"}}],["/posts/api-gateway/1-3-1-collaboration-with-service-registration-discovery.html",{loader:()=>y(()=>import("./1-3-1-collaboration-with-service-registration-discovery.html-BqjpooM5.js"),__vite__mapDeps([13,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在微服务架构中，服务实例的动态性是一个核心特征。服务实例可能因为扩缩容、故障恢复或版本升级等原因频繁地加入或离开集群。为了应对这种动态性，API 网关需要与服务注册发现机制紧密协作，实现动态路由和服务发现功能。本文将深入探讨 API 网关如何与服务注册发现组件协作，构建动态、可靠的微服务网关。</p>
<h2>服务注册发现的基本概念</h2>
<h3>什么是服务注册发现</h3>
<p>服务注册发现是微服务架构中的核心组件，它解决了服务实例动态变化带来的路由问题。服务注册发现包含两个主要功能：</p>
<ol>
<li><strong>服务注册</strong>：服务实例启动时向注册中心注册自己的信息</li>
<li><strong>服务发现</strong>：客户端或网关通过注册中心发现可用的服务实例</li>
</ol>`,readingTime:{minutes:6.72,words:2015},title:"与服务注册发现的协作：构建动态路由的微服务网关",type:"article"}}],["/posts/api-gateway/1-3-2-relationship-with-configuration-center-message-queue.html",{loader:()=>y(()=>import("./1-3-2-relationship-with-configuration-center-message-queue.html-Bdyw2QXb.js"),__vite__mapDeps([14,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在微服务架构中，API 网关不仅需要与服务注册发现组件协作，还需要与配置中心和消息队列等其他核心组件紧密配合，以构建一个动态、可配置、事件驱动的微服务网关系统。本文将深入探讨 API 网关如何与配置中心和消息队列协作，实现动态配置管理和事件驱动架构。</p>
<h2>配置中心的作用与价值</h2>
<h3>什么是配置中心</h3>
<p>配置中心是微服务架构中的核心组件，用于集中管理应用程序的配置信息。它解决了传统配置管理方式中的诸多问题，如配置分散、更新困难、环境差异等。</p>
<h3>配置中心的核心功能</h3>
<ol>
<li><strong>集中管理</strong>：将所有配置信息集中存储和管理</li>
<li><strong>动态更新</strong>：支持配置的动态更新，无需重启应用</li>
<li><strong>环境隔离</strong>：支持不同环境的配置隔离</li>
<li><strong>版本控制</strong>：提供配置的版本管理和回滚能力</li>
<li><strong>权限控制</strong>：实现配置访问的权限控制</li>
</ol>`,readingTime:{minutes:10.21,words:3063},title:"与配置中心、消息队列的关系：构建动态可配置的微服务网关",type:"article"}}],["/posts/api-gateway/1-3-3-api-gateway-position-in-service-governance-system.html",{loader:()=>y(()=>import("./1-3-3-api-gateway-position-in-service-governance-system.html-BHty2dVe.js"),__vite__mapDeps([15,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代微服务架构中，服务治理是确保系统稳定性和可维护性的关键要素。API 网关作为微服务架构中的重要组件，在服务治理体系中占据着独特的战略位置。它不仅承担着流量入口的职责，还与服务注册发现、配置管理、监控告警、安全控制等治理组件紧密协作，共同构建完整的微服务治理生态。本文将深入探讨 API 网关在服务治理体系中的位置及其重要作用。</p>
<h2>服务治理体系概述</h2>
<h3>什么是服务治理</h3>
<p>服务治理是指在微服务架构中，通过一系列策略、机制和工具来管理服务的生命周期、行为和交互，以确保系统的稳定性、可扩展性和可维护性。服务治理涵盖了服务的注册发现、配置管理、负载均衡、容错处理、安全控制、监控告警等多个方面。</p>`,readingTime:{minutes:9.19,words:2757},title:"API 网关在服务治理体系中的位置：构建完整的微服务治理生态",type:"article"}}],["/posts/api-gateway/1-3-api-gateway-and-microservices-architecture.html",{loader:()=>y(()=>import("./1-3-api-gateway-and-microservices-architecture.html-BSN7DsLl.js"),__vite__mapDeps([16,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代软件架构中，微服务架构已成为构建复杂分布式系统的主流模式。API 网关作为微服务架构中的关键组件，承担着连接客户端与后端服务的重要职责。本文将深入探讨 API 网关与微服务架构之间的紧密关系，以及它们如何协同工作来构建现代化的分布式系统。</p>
<h2>微服务架构的核心特征</h2>
<p>微服务架构通过将大型单体应用拆分为多个小型、独立的服务，每个服务都可以独立开发、部署和扩展。这种架构模式带来了诸多优势，包括技术栈的多样性、团队的独立性、部署的灵活性等。</p>
<h2>API 网关在微服务架构中的作用</h2>
<p>在微服务架构中，API 网关扮演着统一入口的角色，它不仅简化了客户端与后端服务的交互，还提供了安全控制、流量管理、监控日志等核心功能。</p>`,readingTime:{minutes:1.98,words:595},title:"API 网关与微服务架构：构建现代化分布式系统的关键纽带",type:"article"}}],["/posts/api-gateway/1-4-1-static-and-dynamic-routing-implementation.html",{loader:()=>y(()=>import("./1-4-1-static-and-dynamic-routing-implementation.html-lDB77qdF.js"),__vite__mapDeps([17,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在 API 网关的设计中，路由机制是核心组件之一，它决定了请求如何被分发到后端服务。根据路由规则的配置和管理方式，路由可以分为静态路由和动态路由两种类型。本文将深入探讨这两种路由方式的实现原理、优缺点以及在实际应用中的最佳实践。</p>
<h2>静态路由的实现</h2>
<h3>静态路由的概念</h3>
<p>静态路由是指在网关启动时就确定的路由规则，这些规则通常配置在配置文件中，不会在运行时发生变化。静态路由适用于路由规则相对固定的场景，具有配置简单、性能稳定的特点。</p>
<h3>静态路由的配置方式</h3>
<h4>基于配置文件的路由配置</h4>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># application.yml 静态路由配置示例</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    gateway</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      routes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">user-service</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">http://localhost:8081</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Path=/api/users/**</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">StripPrefix=2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">order-service</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">http://localhost:8082</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Path=/api/orders/**</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">StripPrefix=2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">product-service</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">lb://product-service</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Path=/api/products/**</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">StripPrefix=2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:7.23,words:2170},title:"静态路由与动态路由的实现：构建灵活的 API 路由系统",type:"article"}}],["/posts/api-gateway/1-4-2-reverse-proxy-implementation-principles.html",{loader:()=>y(()=>import("./1-4-2-reverse-proxy-implementation-principles.html-ClxADRUB.js"),__vite__mapDeps([18,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>反向代理是 API 网关的核心功能之一，它作为客户端和后端服务器之间的中介，接收客户端请求并将其转发到适当的后端服务，然后将响应返回给客户端。理解反向代理的实现原理对于构建高性能、高可用的 API 网关至关重要。本文将深入探讨反向代理的核心机制、技术实现以及性能优化策略。</p>
<h2>反向代理的基本概念</h2>
<h3>什么是反向代理</h3>
<p>反向代理是一种服务器架构模式，它代表客户端从一个或多个服务器检索资源。客户端的请求被发送到反向代理，然后反向代理将请求转发到后端服务器，并将响应返回给客户端。客户端通常不知道它正在与反向代理通信，而是认为它正在直接与后端服务器通信。</p>`,readingTime:{minutes:8.41,words:2523},title:"反向代理的实现原理：构建高性能的请求转发引擎",type:"article"}}],["/posts/api-gateway/1-4-3-multi-protocol-support-implementation.html",{loader:()=>y(()=>import("./1-4-3-multi-protocol-support-implementation.html-EFEtRXJ7.js"),__vite__mapDeps([19,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代微服务架构中，不同的服务可能使用不同的通信协议。API 网关作为系统的统一入口，需要具备强大的多协议支持能力，能够处理 HTTP/HTTPS、gRPC、WebSocket、GraphQL 等多种协议的请求，并将其转换为后端服务能够处理的格式。本文将深入探讨多协议支持的实现原理、技术细节以及最佳实践。</p>
<h2>多协议支持的重要性</h2>
<h3>协议多样性的挑战</h3>
<p>随着微服务架构的普及，系统中的服务可能使用不同的通信协议：</p>
<ol>
<li><strong>传统 REST API</strong>：基于 HTTP/1.1 的 RESTful 服务</li>
<li><strong>高性能 RPC</strong>：如 gRPC、Thrift 等基于 HTTP/2 的 RPC 框架</li>
<li><strong>实时通信</strong>：如 WebSocket、Server-Sent Events 等</li>
<li><strong>数据查询</strong>：如 GraphQL 等灵活的数据查询语言</li>
<li><strong>消息队列</strong>：如 Kafka、RabbitMQ 等异步消息协议</li>
</ol>`,readingTime:{minutes:9.3,words:2789},title:"多协议支持的实现：构建统一的多协议 API 网关",type:"article"}}],["/posts/api-gateway/1-4-request-routing-and-forwarding-mechanisms.html",{loader:()=>y(()=>import("./1-4-request-routing-and-forwarding-mechanisms.html-CYrc-LOI.js"),__vite__mapDeps([20,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代微服务架构中，API 网关作为系统的统一入口，其核心职责之一就是实现高效的请求路由与转发。请求路由与转发机制不仅是 API 网关的基础功能，更是确保系统高性能、高可用性的关键技术。本文将深入探讨 API 网关中请求路由与转发机制的核心原理和实现方式。</p>
<h2>静态路由与动态路由</h2>
<p>路由机制是 API 网关的核心组件，它决定了客户端请求如何被正确地转发到相应的后端服务。根据路由规则的配置方式，可以分为静态路由和动态路由两种模式。</p>
<p>静态路由是指在网关启动时就确定的路由规则，这些规则通常配置在配置文件中，不会在运行时发生变化。而动态路由则允许在运行时动态调整路由规则，通常与服务发现机制结合使用。</p>`,readingTime:{minutes:2.2,words:661},title:"请求路由与转发机制：API 网关的核心路由引擎",type:"article"}}],["/posts/api-gateway/2-5-1-identity-authentication-mechanisms.html",{loader:()=>y(()=>import("./2-5-1-identity-authentication-mechanisms.html-BYJ2Zmv2.js"),__vite__mapDeps([21,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代微服务架构中，身份认证是保护系统资源的第一道防线。API 网关作为系统的统一入口，需要支持多种身份认证机制，以满足不同场景的安全需求。本文将深入探讨 API 网关中常见的身份认证机制，包括 API Key、OAuth2、JWT、OIDC 等，并分析它们的实现原理和适用场景。</p>
<h2>身份认证的基本概念</h2>
<h3>什么是身份认证</h3>
<p>身份认证（Authentication）是验证用户身份的过程，确保用户是他们所声称的人。在 API 网关中，身份认证通常发生在请求进入系统时，验证客户端的身份凭证。</p>
<h3>身份认证与授权的区别</h3>
<p>身份认证和授权（Authorization）是安全体系中的两个不同但相关的概念：</p>`,readingTime:{minutes:8.49,words:2547},title:"身份认证机制：构建多层次的 API 网关认证体系",type:"article"}}],["/posts/api-gateway/2-5-2-authorization-and-rbac-model.html",{loader:()=>y(()=>import("./2-5-2-authorization-and-rbac-model.html-Ya4qAM1b.js"),__vite__mapDeps([22,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代微服务架构中，身份认证只是安全体系的第一步，鉴权（Authorization）才是确保系统资源不被未授权访问的关键环节。API 网关作为系统的统一入口，需要实现细粒度的权限控制机制，确保用户只能访问其被授权的资源。本文将深入探讨 API 网关中的鉴权机制，重点分析基于角色的访问控制（RBAC）模型的实现原理和最佳实践。</p>
<h2>鉴权的基本概念</h2>
<h3>什么是鉴权</h3>
<p>鉴权（Authorization）是确定已认证用户是否有权执行特定操作或访问特定资源的过程。在 API 网关中，鉴权通常发生在身份认证之后，基于用户的身份信息和权限配置来决定是否允许请求继续处理。</p>`,readingTime:{minutes:10.56,words:3169},title:"鉴权与 RBAC 模型：构建细粒度的 API 网关权限控制体系",type:"article"}}],["/posts/api-gateway/2-5-api-gateway-security-mechanisms.html",{loader:()=>y(()=>import("./2-5-api-gateway-security-mechanisms.html-D65fvNJl.js"),__vite__mapDeps([23,1])),meta:{date:1756512e6,category:["ApiGateway"],tag:["api-gateway"],excerpt:`<p>在现代微服务架构中，安全性是至关重要的考虑因素。API 网关作为系统的统一入口，承担着保护后端服务免受未授权访问的重要职责。通过完善的安全机制，API 网关能够为微服务系统构建可信的安全边界，确保系统资源不被恶意访问。</p>
<h2>身份认证机制</h2>
<p>身份认证是安全机制的第一道防线，API 网关需要支持多种身份认证方式，包括 API Key、OAuth2、JWT、OIDC 等，以满足不同场景的安全需求。</p>
<h2>鉴权与 RBAC 模型</h2>
<p>在身份认证的基础上，API 网关还需要实现细粒度的权限控制，通过基于角色的访问控制（RBAC）模型，确保用户只能访问其被授权的资源。</p>`,readingTime:{minutes:1.52,words:457},title:"API 网关的安全机制：构建可信的微服务边界",type:"article"}}],["/posts/api-gateway/",{loader:()=>y(()=>import("./index.html-CXdb9Fq4.js"),__vite__mapDeps([24,1])),meta:{date:1756740404e3,excerpt:`
<p>本索引按照《API 网关 从入门到精通》的章节结构组织，方便读者按顺序查阅相关文档。</p>
<h2>第 1 篇 基础篇 · 初识 API 网关</h2>
<h3>第 1 章 什么是 API 网关</h3>
<ul>
<li><a href="/blog-middleware/posts/api-gateway/1-1-what-is-api-gateway.html" target="_blank">1-1-what-is-api-gateway.md</a> - 什么是 API 网关：微服务架构的入口与大脑</li>
<li><a href="/blog-middleware/posts/api-gateway/1-1-1-api-gateway-definition-and-positioning.html" target="_blank">1-1-1-api-gateway-definition-and-positioning.md</a> - API 网关的定义与定位：微服务架构的统一入口</li>
<li><a href="/blog-middleware/posts/api-gateway/1-1-2-api-gateway-role-in-microservices-evolution.html" target="_blank">1-1-2-api-gateway-role-in-microservices-evolution.md</a> - 单体到微服务演进中的 API 网关角色：从架构变迁看网关价值</li>
<li><a href="/blog-middleware/posts/api-gateway/1-1-3-differences-between-api-gateway-and-other-components.html" target="_blank">1-1-3-differences-between-api-gateway-and-other-components.md</a> - API 网关与反向代理、负载均衡、服务网关的区别：技术组件的边界与协同</li>
</ul>`,readingTime:{minutes:2.19,words:657},title:"📖《API 网关 从入门到精通》文档索引",type:"article"}}],["/posts/api-gateway/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-Ck986vpB.js"),__vite__mapDeps([25,1])),meta:{date:1756738619e3,excerpt:`
<h2>第 1 篇 基础篇 · 初识 API 网关</h2>
<ol>
<li>
<p><strong>第 1 章 什么是 API 网关</strong></p>
<ul>
<li>API 网关的定义与定位</li>
<li>单体到微服务演进中的角色</li>
<li>与反向代理、负载均衡、服务网关的区别</li>
</ul>
</li>
<li>
<p><strong>第 2 章 API 网关的核心职责</strong></p>
<ul>
<li>请求路由</li>
<li>协议转换（REST/gRPC/WebSocket）</li>
<li>安全认证与鉴权</li>
<li>限流、熔断与降级</li>
<li>日志与监控</li>
</ul>
</li>
<li>
<p><strong>第 3 章 API 网关与微服务架构</strong></p>
<ul>
<li>与服务注册发现的协作</li>
<li>与配置中心、消息队列的关系</li>
<li>API 网关在服务治理体系中的位置</li>
</ul>
</li>
</ol>`,readingTime:{minutes:2.46,words:738},title:"📖《API 网关 从入门到精通》",type:"article"}}],["/posts/distributed-tx/1-1-what-is-distributed-transaction.html",{loader:()=>y(()=>import("./1-1-what-is-distributed-transaction.html-BzSB2T-O.js"),__vite__mapDeps([26,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在现代软件架构中，随着业务复杂度的增加和用户规模的扩大，传统的单体应用已经难以满足高并发、高可用的需求。微服务架构应运而生，将大型应用拆分为多个独立的服务，每个服务可以独立开发、部署和扩展。然而，这种架构也带来了新的挑战，其中之一就是分布式事务的处理。</p>
<h2>从单体事务到分布式事务</h2>
<h3>单体事务的简单世界</h3>
<p>在单体应用时代，事务处理相对简单。一个应用通常连接到一个数据库，所有的业务操作都在同一个数据库连接中完成。当需要保证多个操作的原子性时，数据库的ACID特性（原子性、一致性、隔离性、持久性）能够轻松地保证事务的一致性。</p>
<p>例如，在一个银行转账系统中，从账户A向账户B转账100元的操作只需要在一个数据库事务中完成：</p>`,readingTime:{minutes:6.69,words:2006},title:"什么是分布式事务：从单体到分布式的数据一致性挑战",type:"article"}}],["/posts/distributed-tx/1-2-distributed-transaction-pain-points.html",{loader:()=>y(()=>import("./1-2-distributed-transaction-pain-points.html-_knzdLTq.js"),__vite__mapDeps([27,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在上一章中，我们了解了分布式事务的基本概念和重要性。然而，在实际的系统设计和开发过程中，分布式事务带来的不仅仅是技术上的复杂性，还有许多深层次的痛点和挑战。这些挑战不仅影响系统的性能和可靠性，还对开发效率和维护成本产生重大影响。</p>
<h2>网络分区、延迟与异常</h2>
<h3>网络分区的挑战</h3>
<p>在分布式系统中，网络分区是最常见的问题之一。当网络出现故障时，系统的一部分节点可能无法与其他节点通信，形成网络孤岛。这种情况下，系统需要决定是继续提供服务（牺牲一致性）还是停止服务（保证一致性）。</p>
<h4>网络分区的影响</h4>
<ol>
<li><strong>数据不一致</strong>：在网络分区期间，不同分区可能对同一数据进行修改，导致数据不一致。</li>
<li><strong>服务不可用</strong>：为了保证一致性，系统可能选择停止服务，影响用户体验。</li>
<li><strong>恢复困难</strong>：网络恢复后，如何合并不同分区的数据是一个复杂的问题。</li>
</ol>`,readingTime:{minutes:8.64,words:2592},title:"分布式事务的痛点与挑战：构建可靠系统的必经之路",type:"article"}}],["/posts/distributed-tx/1-3-distributed-transaction-theoretical-models.html",{loader:()=>y(()=>import("./1-3-distributed-transaction-theoretical-models.html-sLBu4F7M.js"),__vite__mapDeps([28,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在前两章中，我们了解了分布式事务的基本概念、重要性以及面临的挑战。要解决这些挑战，我们需要深入理解分布式事务的理论模型。本章将详细介绍几种重要的分布式事务理论模型，包括经典的两阶段提交（2PC）、改进的三阶段提交（3PC）、一致性协议（Paxos/Raft）以及BASE理论。</p>
<h2>二阶段提交（2PC）</h2>
<h3>2PC的基本原理</h3>
<p>两阶段提交（Two-Phase Commit，2PC）是最经典的分布式事务协议，它通过引入一个协调者（Coordinator）来协调所有参与者（Participants）的事务操作。</p>
<h4>第一阶段：准备阶段（Prepare Phase）</h4>`,readingTime:{minutes:9.65,words:2894},title:"分布式事务的理论模型：从2PC到BASE理论的全面解析",type:"article"}}],["/posts/distributed-tx/2-1-local-transaction-message-queue.html",{loader:()=>y(()=>import("./2-1-local-transaction-message-queue.html-C6uwHw7V.js"),__vite__mapDeps([29,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统中，保证数据一致性是一个复杂而重要的问题。在前面的章节中，我们学习了分布式事务的理论模型和面临的挑战。本章将介绍一种实用且广泛应用的分布式事务解决方案——本地事务 + 消息队列模式，也称为可靠消息最终一致性模式。</p>
<h2>模式概述</h2>
<h3>核心思想</h3>
<p>本地事务 + 消息队列模式的核心思想是将分布式事务拆分为多个本地事务，通过消息队列来协调这些本地事务的执行，最终达到数据一致性。这种模式放弃了强一致性，采用最终一致性，但在实际应用中具有更好的性能和可用性。</p>
<h3>基本流程</h3>
<ol>
<li><strong>本地事务执行</strong>：在本地事务中完成业务操作和消息的持久化</li>
<li><strong>消息发送</strong>：将消息发送到消息队列</li>
<li><strong>消息消费</strong>：消费者接收到消息后执行相应的业务操作</li>
<li><strong>最终一致性</strong>：通过消息的可靠传递保证数据最终一致</li>
</ol>`,readingTime:{minutes:7.81,words:2342},title:"本地事务 + 消息队列模式：实现可靠消息最终一致性的利器",type:"article"}}],["/posts/distributed-tx/2-2-tcc-try-confirm-cancel.html",{loader:()=>y(()=>import("./2-2-tcc-try-confirm-cancel.html-BxXWJZaf.js"),__vite__mapDeps([30,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统中，事务处理是一个复杂而关键的问题。在前面的章节中，我们介绍了本地事务 + 消息队列模式，它通过最终一致性来解决分布式事务问题。本章将深入探讨另一种重要的分布式事务模式——TCC（Try-Confirm-Cancel）模式。</p>
<h2>TCC模式概述</h2>
<h3>TCC的核心概念</h3>
<p>TCC是Try-Confirm-Cancel的缩写，它是一种分布式事务的解决方案，通过定义业务活动中的三个操作来保证分布式事务的一致性：</p>
<ol>
<li><strong>Try（尝试）</strong>：预留业务资源，检查并锁定资源</li>
<li><strong>Confirm（确认）</strong>：确认执行业务操作，实际执行业务</li>
<li><strong>Cancel（取消）</strong>：取消执行业务操作，释放资源</li>
</ol>`,readingTime:{minutes:9.81,words:2942},title:"TCC（Try-Confirm-Cancel）模式：构建高性能分布式事务的三步法",type:"article"}}],["/posts/distributed-tx/2-3-saga-pattern.html",{loader:()=>y(()=>import("./2-3-saga-pattern.html-BRVMNDYc.js"),__vite__mapDeps([31,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统中，处理长时间运行的业务流程是一个常见且具有挑战性的问题。传统的ACID事务在处理这类场景时往往表现不佳，要么因为锁持有时间过长影响系统性能，要么因为超时导致事务失败。SAGA模式作为一种长事务的解决方案，为这类问题提供了优雅的解决思路。</p>
<h2>SAGA模式概述</h2>
<h3>SAGA的核心概念</h3>
<p>SAGA模式最初由Hector Garcia-Molina和Kenneth Salem在1987年提出，它将一个长事务分解为多个短事务，每个短事务都对应一个补偿事务。当所有短事务都成功执行时，整个SAGA事务成功；如果任何一个短事务失败，则通过执行相应的补偿事务来回滚已执行的操作。</p>`,readingTime:{minutes:9.36,words:2809},title:"SAGA 模式：长事务的优雅解决方案",type:"article"}}],["/posts/distributed-tx/2-4-other-patterns-and-practices.html",{loader:()=>y(()=>import("./2-4-other-patterns-and-practices.html-D5knhu0D.js"),__vite__mapDeps([32,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在前面的章节中，我们详细探讨了分布式事务的核心模式，包括本地事务+消息队列、TCC和Saga模式。这些模式各有特点，适用于不同的业务场景。然而，在实际的分布式系统设计中，还有许多其他的模式和实践方法值得我们关注。本章将介绍一些重要的补充模式和实践，包括事务日志与重放、异步补偿策略，以及各种最终一致性策略的比较。</p>
<h2>事务日志与重放</h2>
<h3>事务日志的核心概念</h3>
<p>事务日志是一种记录系统状态变化的机制，它将业务操作转化为一系列可重放的事件。通过事务日志，系统可以在故障恢复时重放这些事件，恢复到故障前的状态。</p>
<h3>实现机制</h3>
<h4>日志结构设计</h4>`,readingTime:{minutes:8.53,words:2558},title:"分布式事务的其他模式与实践：事务日志、异步补偿与策略比较",type:"article"}}],["/posts/distributed-tx/3-1-seata-deep-dive.html",{loader:()=>y(()=>import("./3-1-seata-deep-dive.html-DjA8-a82.js"),__vite__mapDeps([33,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统中，事务处理一直是一个复杂而关键的问题。随着微服务架构的普及，跨服务的事务处理需求越来越强烈。Seata作为阿里巴巴开源的分布式事务解决方案，为解决这一问题提供了强大而灵活的工具。本章将深入解析Seata的架构设计、核心组件和使用方法。</p>
<h2>Seata概述</h2>
<h3>Seata的诞生背景</h3>
<p>Seata（Simple Extensible Autonomous Transaction Architecture）最初由阿里巴巴集团开发，旨在解决微服务架构下的分布式事务问题。它于2019年正式开源，迅速成为分布式事务领域的重要工具。</p>
<h3>Seata的核心特性</h3>`,readingTime:{minutes:8.14,words:2441},title:"Seata 深度解析：阿里巴巴开源的分布式事务解决方案",type:"article"}}],["/posts/distributed-tx/3-2-spring-cloud-transaction-management.html",{loader:()=>y(()=>import("./3-2-spring-cloud-transaction-management.html-p7C_v6k0.js"),__vite__mapDeps([34,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在微服务架构中，分布式事务管理是一个复杂而关键的问题。Spring Cloud作为主流的微服务框架，提供了丰富的工具和组件来帮助开发者处理分布式事务。本章将深入探讨Spring Cloud中的事务管理机制，包括与Feign、RestTemplate、Dubbo等组件的集成，以及事务传播和幂等性设计。</p>
<h2>分布式事务在 Spring Cloud 中的支持</h2>
<h3>Spring Cloud事务管理概述</h3>
<p>Spring Cloud本身并不直接提供分布式事务解决方案，而是通过集成第三方框架（如Seata、Atomikos等）来实现分布式事务管理。Spring Cloud提供了良好的抽象和集成能力，使得开发者可以方便地在微服务架构中使用分布式事务。</p>`,readingTime:{minutes:9.64,words:2891},title:"Spring Cloud + 事务管理：构建可靠的微服务分布式事务体系",type:"article"}}],["/posts/distributed-tx/3-3-other-frameworks-analysis.html",{loader:()=>y(()=>import("./3-3-other-frameworks-analysis.html-CqtZpVla.js"),__vite__mapDeps([35,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统中，事务管理是一个复杂而关键的问题。除了我们之前详细介绍的Seata框架外，还有许多其他优秀的分布式事务框架和解决方案。本章将深入分析几种重要的分布式事务框架，包括Atomikos、Narayana/JTA等，并对各种微服务下的开源方案进行对比分析。</p>
<h2>Atomikos 深度解析</h2>
<h3>Atomikos概述</h3>
<p>Atomikos是一家专注于事务处理的公司，其提供的Atomikos Transactions Essentials是一个轻量级的Java事务管理器，支持JTA（Java Transaction API）规范。它可以在不依赖应用服务器的情况下提供分布式事务支持。</p>`,readingTime:{minutes:9.49,words:2846},title:"分布式事务其他框架简析：Atomikos、Narayana与开源方案对比",type:"article"}}],["/posts/distributed-tx/4-1-idempotency-design-guarantee.html",{loader:()=>y(()=>import("./4-1-idempotency-design-guarantee.html-Bu-6ckP8.js"),__vite__mapDeps([36,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统中，由于网络的不确定性、超时重试机制以及系统故障恢复等原因，同一个操作可能会被多次执行。如果没有适当的防护措施，这种重复执行可能会导致数据不一致、业务逻辑错误等问题。幂等性设计正是解决这一问题的关键技术，它确保同一个操作无论执行多少次，都会产生相同的结果。本章将深入探讨幂等性设计的必要性、实现方法以及在分布式事务中的应用。</p>
<h2>幂等性操作的必要性</h2>
<h3>幂等性的定义</h3>
<p>幂等性（Idempotence）是数学和计算机科学中的一个概念，指的是一个操作或函数可以被多次执行，但结果保持不变。在分布式系统中，幂等性意味着客户端发起的多次相同请求，服务端应该返回相同的结果，且不会对系统状态产生额外的影响。</p>`,readingTime:{minutes:11.25,words:3375},title:"幂等性设计与保证：构建可靠的分布式系统基石",type:"article"}}],["/posts/distributed-tx/4-2-transaction-monitoring-tracing.html",{loader:()=>y(()=>import("./4-2-transaction-monitoring-tracing.html-BiDutxhh.js"),__vite__mapDeps([37,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在复杂的分布式系统中，事务的执行过程涉及多个服务、数据库和中间件，其执行路径往往错综复杂。如果没有完善的监控和追踪机制，当系统出现问题时，我们很难快速定位故障原因和影响范围。事务监控与追踪是分布式事务系统中不可或缺的重要组成部分，它为我们提供了系统的可视化洞察，帮助我们更好地理解和优化系统性能。本章将深入探讨分布式事务的监控与追踪技术。</p>
<h2>分布式事务链路可视化</h2>
<h3>链路追踪的重要性</h3>
<p>在分布式事务系统中，一个事务可能涉及多个服务的调用，每个服务又可能访问不同的数据库或调用其他服务。这种复杂的调用关系形成了一个分布式调用链路，如果没有有效的追踪机制，我们很难理解事务的完整执行过程。</p>`,readingTime:{minutes:9.8,words:2941},title:"事务监控与追踪：分布式事务系统的可视化洞察",type:"article"}}],["/posts/distributed-tx/4-3-high-concurrency-performance-optimization.html",{loader:()=>y(()=>import("./4-3-high-concurrency-performance-optimization.html-2oUi3VJr.js"),__vite__mapDeps([38,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在互联网时代，高并发场景下的系统性能优化成为了每个技术团队必须面对的挑战。分布式事务系统由于其复杂的协调机制和跨服务调用特性，在高并发场景下面临着更大的性能压力。本章将深入探讨分布式事务系统在高并发环境下的性能优化策略，包括锁粒度优化、批量提交、异步补偿、数据分片等关键技术。</p>
<h2>事务锁粒度优化</h2>
<h3>锁粒度对性能的影响</h3>
<p>在分布式事务中，锁的粒度直接影响系统的并发性能。过粗的锁粒度会导致大量请求阻塞，降低系统吞吐量；过细的锁粒度虽然能提高并发性，但会增加锁管理的复杂度和开销。</p>
<h3>数据库锁优化</h3>
<h4>行级锁优化</h4>
`,readingTime:{minutes:11.68,words:3503},title:"高并发与性能优化：构建高性能的分布式事务系统",type:"article"}}],["/posts/distributed-tx/4-4-cap-trade-offs-distributed-transactions.html",{loader:()=>y(()=>import("./4-4-cap-trade-offs-distributed-transactions.html-CQ7uz7aj.js"),__vite__mapDeps([39,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在分布式系统的设计中，CAP定理是一个基础而重要的理论，它深刻地影响着系统架构的选择和实现。CAP定理指出，在分布式系统中，一致性（Consistency）、可用性（Availability）和分区容忍性（Partition tolerance）三者不可兼得，最多只能同时满足其中两个。本章将深入探讨CAP定理在分布式事务中的应用，分析不同场景下的权衡策略，并介绍最终一致性设计原则和容错与失败恢复策略。</p>
<h2>一致性 vs 可用性</h2>
<h3>CAP定理的核心思想</h3>
<p>CAP定理由计算机科学家Eric Brewer在2000年提出，后来被Seth Gilbert和Nancy Lynch在2002年证明。该定理揭示了分布式系统设计中的根本性约束：</p>`,readingTime:{minutes:11.97,words:3590},title:"分布式事务的 CAP 权衡：一致性与可用性的智慧选择",type:"article"}}],["/posts/distributed-tx/5-1-ecommerce-flash-sale-inventory-transaction.html",{loader:()=>y(()=>import("./5-1-ecommerce-flash-sale-inventory-transaction.html-BncT17To.js"),__vite__mapDeps([40,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在电商领域，秒杀活动是最具挑战性的场景之一。短时间内大量用户涌入，对系统的并发处理能力、数据一致性以及响应速度都提出了极高的要求。库存扣减作为秒杀场景的核心环节，其事务处理的正确性和性能直接影响着用户体验和业务收益。本章将深入分析电商秒杀场景的特点，探讨库存扣减事务设计的挑战，并通过实际案例展示如何在高并发环境下实现可靠的分布式事务处理。</p>
<h2>库存扣减事务设计</h2>
<h3>秒杀场景的特点与挑战</h3>
<p>电商秒杀活动具有以下显著特点：</p>
<ol>
<li><strong>高并发性</strong>：短时间内大量用户同时访问，请求量可能达到平时的数十倍甚至上百倍</li>
<li><strong>瞬时性</strong>：活动时间通常较短，用户需要在限定时间内完成购买</li>
<li><strong>稀缺性</strong>：商品数量有限，先到先得，容易引发抢购热潮</li>
<li><strong>一致性要求高</strong>：库存数据必须准确，超卖或少卖都会造成业务损失</li>
</ol>`,readingTime:{minutes:13.85,words:4154},title:"电商秒杀与库存事务案例：高并发场景下的分布式事务实践",type:"article"}}],["/posts/distributed-tx/5-2-financial-system-transaction-case.html",{loader:()=>y(()=>import("./5-2-financial-system-transaction-case.html-ZsfBxvGX.js"),__vite__mapDeps([41,1])),meta:{date:17566848e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>金融系统对数据一致性和事务可靠性的要求极高，任何微小的错误都可能导致巨大的经济损失。资金转账作为金融系统的核心业务之一，涉及多个账户的操作，必须保证事务的原子性和一致性。本章将深入分析金融系统中资金转账的分布式事务设计，探讨账户资金转账事务设计的关键要素，并介绍双活、多中心事务方案以及风控与审计策略。</p>
<h2>账户资金转账事务设计</h2>
<h3>金融系统的特点与要求</h3>
<p>金融系统具有以下显著特点：</p>
<ol>
<li><strong>高一致性要求</strong>：资金数据必须绝对准确，不允许出现任何不一致的情况</li>
<li><strong>强监管合规</strong>：需要满足严格的金融监管要求，包括审计、风控等</li>
<li><strong>高安全性</strong>：系统必须具备完善的安全防护机制，防止欺诈和攻击</li>
<li><strong>高可靠性</strong>：系统必须具备高可用性和容错能力，确保业务连续性</li>
<li><strong>可追溯性</strong>：所有操作必须有完整的日志记录，便于审计和问题排查</li>
</ol>`,readingTime:{minutes:15.11,words:4534},title:"金融系统事务案例：资金转账的分布式事务实践",type:"article"}}],["/posts/distributed-tx/5-3-big-data-message-transaction.html",{loader:()=>y(()=>import("./5-3-big-data-message-transaction.html-rnDjTBaN.js"),__vite__mapDeps([42,1])),meta:{date:17567712e5,category:["DisTx"],tag:["dis-tx"],excerpt:`
<p>在当今数据驱动的时代，大数据处理和消息队列已成为现代分布式系统的重要组成部分。随着数据量的爆炸式增长和业务复杂度的不断提升，如何在大数据处理过程中保证数据一致性，以及如何在消息传递中确保事务的可靠性，成为了系统架构师和开发者面临的重要挑战。本章将深入探讨大数据与消息事务的结合，分析ETL数据一致性保障机制，研究Kafka/RocketMQ与事务的结合方式，以及数据重放与补偿机制。</p>
<h2>ETL 数据一致性保障</h2>
<h3>ETL流程中的事务挑战</h3>
<p>ETL（Extract, Transform, Load）是数据仓库和大数据处理中的核心流程，它涉及从多个数据源提取数据、进行转换处理，然后加载到目标系统中。在这个过程中，数据一致性保障面临着诸多挑战：</p>`,readingTime:{minutes:15.03,words:4509},title:"大数据与消息事务结合：ETL数据一致性保障与消息队列事务",type:"article"}}],["/posts/distributed-tx/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-zeG6nEbB.js"),__vite__mapDeps([43,1])),meta:{date:1756738619e3,excerpt:`<p>一书《分布式事务中间件：从入门到精通》可以按照 <strong>基础理论 → 模式解析 → 主流框架 → 高级设计 → 实战与优化 → 企业落地</strong> 的逻辑来布局目录。</p>
<hr>
<h1><strong>《分布式事务中间件：从入门到精通》目录</strong></h1>
<hr>
<h2><strong>第一篇：基础篇 · 理解分布式事务</strong></h2>
<ol>
<li>
<p><strong>第1章 什么是分布式事务</strong></p>
<ul>
<li>单体事务与分布式事务的区别</li>
<li>分布式系统中的数据一致性问题</li>
<li>事务的ACID属性与微服务挑战</li>
</ul>
</li>
<li>
<p><strong>第2章 分布式事务的痛点与挑战</strong></p>
<ul>
<li>网络分区、延迟与异常</li>
<li>跨服务、跨数据库、跨存储系统的事务</li>
<li>CAP定理与一致性选择</li>
</ul>
</li>
<li>
<p><strong>第3章 分布式事务的理论模型</strong></p>
<ul>
<li>二阶段提交（2PC）</li>
<li>三阶段提交（3PC）</li>
<li>Paxos / Raft 一致性协议</li>
<li>BASE理论与最终一致性</li>
</ul>
</li>
</ol>`,readingTime:{minutes:3.03,words:910},title:"《分布式事务中间件：从入门到精通》目录",type:"article"}}],["/posts/cache/1-1-0_Cache_Basics_Overview.html",{loader:()=>y(()=>import("./1-1-0_Cache_Basics_Overview.html-jgCYQWDO.js"),__vite__mapDeps([44,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在现代软件架构中，缓存已成为提升系统性能和用户体验的关键技术之一。特别是在分布式系统中，缓存的作用更加凸显，它不仅能够显著减少数据库负载，还能有效降低网络延迟，提高系统的响应速度。</p>
<p>本章将从基础概念出发，帮助读者理解为什么需要缓存、缓存的适用场景与潜在风险，以及本地缓存与分布式缓存的区别。通过深入探讨缓存的优势与挑战，我们将为后续章节中更深入的技术实现和最佳实践打下坚实的基础。</p>
<h2>为什么需要缓存</h2>
<p>在当今数据驱动的应用环境中，用户对系统响应速度的要求越来越高。无论是电商网站的商品浏览，还是社交媒体的内容推送，用户都期望能够获得即时的反馈。然而，直接从数据库或其他持久化存储中读取数据往往需要较长的时间，特别是在高并发场景下，数据库可能成为系统的性能瓶颈。</p>`,readingTime:{minutes:2.75,words:825},title:"缓存基础概述：理解分布式缓存的核心概念",type:"article"}}],["/posts/cache/1-1-1_Why_Cache_Is_Needed.html",{loader:()=>y(()=>import("./1-1-1_Why_Cache_Is_Needed.html-CVg8w5dE.js"),__vite__mapDeps([45,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在现代软件开发中，缓存已成为提升系统性能不可或缺的技术手段。但你是否真正思考过为什么需要缓存？它解决了哪些核心问题？本文将从系统架构的角度深入探讨缓存存在的必要性。</p>
<h2>系统性能瓶颈的根源</h2>
<p>在深入探讨缓存之前，我们需要先理解系统性能瓶颈的根源。在典型的Web应用架构中，用户请求需要经过多个处理环节：</p>
<ol>
<li><strong>网络传输</strong>：请求从客户端传输到服务器</li>
<li><strong>应用处理</strong>：服务器解析请求并执行业务逻辑</li>
<li><strong>数据访问</strong>：从数据库或其他持久化存储中读取数据</li>
<li><strong>响应返回</strong>：将处理结果返回给客户端</li>
</ol>`,readingTime:{minutes:4.2,words:1259},title:"为什么需要缓存：深入理解缓存的价值与意义",type:"article"}}],["/posts/cache/1-1-2_Cache_Applicable_Scenarios_And_Risks.html",{loader:()=>y(()=>import("./1-1-2_Cache_Applicable_Scenarios_And_Risks.html-BHzCRZZX.js"),__vite__mapDeps([46,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在前一节中，我们探讨了为什么需要缓存以及它能带来的核心价值。然而，缓存并非适用于所有场景，盲目使用缓存可能会带来一系列问题。本节将深入分析缓存的适用场景与潜在风险，帮助开发者在实际项目中做出更明智的技术决策。</p>
<h2>缓存的适用场景深度解析</h2>
<p>要充分发挥缓存的价值，首先需要准确识别适合使用缓存的场景。以下是一些典型的适用场景：</p>
<h3>1. 读多写少的数据场景</h3>
<p>这是最常见的缓存适用场景。以电商平台为例，商品的基本信息（如名称、价格、描述等）被大量用户频繁查看，但更新频率相对较低。这类数据非常适合缓存：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 示例：商品信息缓存</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ProductService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Product</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getProduct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Long</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> productId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cacheKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "product:"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> productId;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Product</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> product</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (Product) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cacheKey);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (product </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            product </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> productRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(productId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (product </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cacheKey, product, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> product;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.5,words:1651},title:"缓存的适用场景与风险：精准识别与有效规避",type:"article"}}],["/posts/cache/1-1-3_Local_Cache_vs_Distributed_Cache.html",{loader:()=>y(()=>import("./1-1-3_Local_Cache_vs_Distributed_Cache.html-DWtnGc3B.js"),__vite__mapDeps([47,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统架构中，缓存技术扮演着至关重要的角色。然而，面对本地缓存和分布式缓存两种不同的实现方式，开发者往往难以抉择。本节将从多个维度深入对比这两种缓存方案，帮助读者理解它们的特点、适用场景以及技术选型的考量因素。</p>
<h2>本地缓存详解</h2>
<p>本地缓存是指将数据存储在应用进程内部的缓存方案，最常见的实现方式是使用内存数据结构。</p>
<h3>1. 本地缓存的特点</h3>
<h4>优势：</h4>
<ul>
<li><strong>访问速度极快</strong>：数据存储在应用进程内部，无需网络传输，访问延迟通常在微秒级别</li>
<li><strong>实现简单</strong>：不需要额外的缓存服务，直接使用编程语言提供的数据结构即可</li>
<li><strong>无网络依赖</strong>：不会因为网络问题导致缓存访问失败</li>
<li><strong>低延迟</strong>：由于数据就在本地，响应时间非常短</li>
</ul>`,readingTime:{minutes:5.12,words:1535},title:"本地缓存 vs 分布式缓存：技术选型的深度对比",type:"article"}}],["/posts/cache/1-1-4_Cache_Advantages_And_Challenges.html",{loader:()=>y(()=>import("./1-1-4_Cache_Advantages_And_Challenges.html-gmlY2Iyy.js"),__vite__mapDeps([48,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在前几节中，我们探讨了缓存的基本概念、适用场景以及本地缓存与分布式缓存的区别。本节将深入分析缓存技术的优势与挑战，帮助读者全面理解缓存技术的双面性，从而在实际应用中更好地发挥其价值并规避潜在风险。</p>
<h2>缓存的核心优势</h2>
<p>缓存技术之所以在现代软件架构中占据重要地位，主要得益于以下几个核心优势：</p>
<h3>1. 显著提升系统性能</h3>
<p>缓存最直接的优势就是能够显著提升系统性能，这主要体现在以下几个方面：</p>
<h4>降低数据访问延迟</h4>
<p>通过将热点数据存储在访问速度更快的存储介质中（通常是内存），缓存能够将数据访问时间从毫秒级降低到微秒级甚至纳秒级。</p>`,readingTime:{minutes:6.98,words:2094},title:"缓存的优势与挑战：全面解析缓存技术的双面性",type:"article"}}],["/posts/cache/1-2-0_Distributed_Cache_Core_Principles_Overview.html",{loader:()=>y(()=>import("./1-2-0_Distributed_Cache_Core_Principles_Overview.html-ip-1sIfR.js"),__vite__mapDeps([49,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在现代分布式系统中，缓存技术已成为提升系统性能和可扩展性的关键组件。然而，与单体应用中的本地缓存不同，分布式缓存面临着更为复杂的挑战和需求。本章将深入探讨分布式架构下的缓存需求，分析CAP定理与缓存系统的权衡，解析一致性哈希与节点分片技术，并探讨缓存与数据库的关系。</p>
<h2>分布式架构下的缓存需求</h2>
<p>在分布式系统中，应用被拆分为多个独立的服务，部署在不同的服务器上。这种架构带来了新的缓存需求：</p>
<ol>
<li><strong>数据共享需求</strong>：多个服务实例需要访问相同的数据</li>
<li><strong>高可用性需求</strong>：缓存服务需要具备故障恢复能力</li>
<li><strong>可扩展性需求</strong>：缓存容量需要能够动态扩展</li>
<li><strong>一致性需求</strong>：在分布式环境下保证数据一致性</li>
</ol>`,readingTime:{minutes:1.98,words:593},title:"分布式缓存核心原理概述：深入理解分布式架构下的缓存需求",type:"article"}}],["/posts/cache/1-2-1_Distributed_Architecture_Cache_Requirements.html",{loader:()=>y(()=>import("./1-2-1_Distributed_Architecture_Cache_Requirements.html-DJt4Fp5X.js"),__vite__mapDeps([50,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在传统的单体应用架构中，缓存通常以内存数据结构的形式存在于应用进程内部。然而，随着业务规模的不断扩大和系统复杂性的增加，单体应用逐渐向分布式架构演进。在这一演进过程中，缓存技术也面临着全新的需求和挑战。本节将深入探讨分布式架构下的缓存需求，帮助读者理解如何构建高可用、可扩展的分布式缓存系统。</p>
<h2>分布式架构的特点与挑战</h2>
<p>在深入探讨缓存需求之前，我们需要先理解分布式架构的特点：</p>
<h3>1. 服务拆分与独立部署</h3>
<p>在微服务架构中，原本庞大的单体应用被拆分为多个独立的服务，每个服务可以独立开发、部署和扩展。这种架构带来了以下特点：</p>
<ul>
<li>服务间通过网络进行通信</li>
<li>每个服务可以使用不同的技术栈</li>
<li>服务可以独立进行水平扩展</li>
</ul>`,readingTime:{minutes:6.13,words:1839},title:"分布式架构下的缓存需求：构建高可用、可扩展的缓存系统",type:"article"}}],["/posts/cache/1-2-2_CAP_Theorem_And_Cache_System_Tradeoffs.html",{loader:()=>y(()=>import("./1-2-2_CAP_Theorem_And_Cache_System_Tradeoffs.html-rEBgx2_7.js"),__vite__mapDeps([51,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统的设计中，CAP定理是一个基础而重要的理论。由计算机科学家Eric Brewer在2000年提出，CAP定理指出在分布式系统中，一致性(Consistency)、可用性(Availability)和分区容错性(Partition tolerance)这三个属性最多只能同时满足两个。这一理论对分布式缓存系统的设计产生了深远影响。本节将深入探讨CAP定理的内涵，并分析在缓存系统设计中如何进行合理的权衡。</p>
<h2>CAP定理详解</h2>
<h3>1. 一致性(Consistency)</h3>
<p>在CAP定理中，一致性指的是数据在分布式系统中的状态保持一致。具体来说，当数据在一个节点上被更新后，其他节点应该能够立即看到这个更新。</p>`,readingTime:{minutes:8.19,words:2456},title:"CAP定理与缓存系统的权衡：在一致性、可用性与分区容错性间寻找平衡",type:"article"}}],["/posts/cache/1-2-3_Consistent_Hashing_And_Node_Sharding.html",{loader:()=>y(()=>import("./1-2-3_Consistent_Hashing_And_Node_Sharding.html-IaM8zw7b.js"),__vite__mapDeps([52,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式缓存系统中，如何将数据均匀分布到多个节点上是一个关键技术问题。传统的哈希取模算法在节点增减时会导致大量数据迁移，严重影响系统性能。一致性哈希算法的出现有效解决了这一问题，成为构建可扩展分布式缓存系统的核心技术之一。本节将深入探讨一致性哈希的原理、实现以及节点分片技术，帮助读者理解如何构建高可扩展的分布式缓存系统。</p>
<h2>传统哈希取模算法的问题</h2>
<p>在深入探讨一致性哈希之前，我们先来看看传统的哈希取模算法存在的问题。</p>
<h3>1. 数据分布不均</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 传统哈希取模算法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SimpleHashSharding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nodeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SimpleHashSharding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> nodeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nodeCount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nodeCount;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getNodeIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nodeCount;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.24,words:2472},title:"一致性哈希与节点分片：构建可扩展的分布式缓存系统",type:"article"}}],["/posts/cache/1-2-4_Cache_And_Database_Relationship.html",{loader:()=>y(()=>import("./1-2-4_Cache_And_Database_Relationship.html-CMAXEtCU.js"),__vite__mapDeps([53,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在现代分布式系统中，缓存与数据库的关系是系统架构设计中的核心问题之一。正确处理缓存与数据库的关系不仅能够显著提升系统性能，还能确保数据的一致性和系统的可靠性。本节将深入探讨缓存与数据库的各种交互模式、一致性保证机制以及最佳实践，帮助读者构建高效的数据访问层。</p>
<h2>缓存与数据库的基本关系</h2>
<p>缓存与数据库的关系可以从以下几个维度来理解：</p>
<h3>1. 数据层次关系</h3>
<p>在典型的三层架构中，缓存位于应用层和数据库层之间：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>应用层</span></span>
<span class="line"><span>   ↓</span></span>
<span class="line"><span>缓存层 (内存/高速存储)</span></span>
<span class="line"><span>   ↓</span></span>
<span class="line"><span>数据库层 (磁盘/持久化存储)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.38,words:2515},title:"缓存与数据库的关系：构建高效数据访问层的关键",type:"article"}}],["/posts/cache/1-3-0_Common_Distributed_Cache_Selection_Overview.html",{loader:()=>y(()=>import("./1-3-0_Common_Distributed_Cache_Selection_Overview.html-BZvL47b1.js"),__vite__mapDeps([54,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统中，选择合适的缓存技术是构建高性能应用的关键决策之一。随着技术的发展，市场上涌现出了多种分布式缓存解决方案，每种方案都有其独特的特性和适用场景。本章将深入探讨主流的分布式缓存技术，包括Memcached、Redis、Tair、Couchbase和Aerospike等，并提供详细的选型指南。</p>
<h2>主流分布式缓存技术概览</h2>
<h3>Memcached：轻量级高速缓存</h3>
<p>Memcached是一个高性能的分布式内存对象缓存系统，以其简单性和高性能著称。它采用简单的键值存储模型，适用于需要高速缓存的场景。</p>
<h3>Redis：全能型缓存数据库</h3>`,readingTime:{minutes:1.85,words:555},title:"常见分布式缓存选型概述：主流缓存技术对比与选择指南",type:"article"}}],["/posts/cache/1-3-1_Memcached_Lightweight_High_Speed_Cache.html",{loader:()=>y(()=>import("./1-3-1_Memcached_Lightweight_High_Speed_Cache.html-BaYn0kea.js"),__vite__mapDeps([55,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Memcached作为一个高性能的分布式内存对象缓存系统，自2003年由Brad Fitzpatrick开发以来，一直是互联网应用中广泛使用的缓存解决方案。它以其简单性、高性能和可扩展性著称，特别适用于需要高速缓存的场景。本节将深入探讨Memcached的技术特点、架构原理、使用场景以及最佳实践。</p>
<h2>Memcached概述</h2>
<p>Memcached是一个自由开源的高性能分布式内存对象缓存系统，主要用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高Web应用的速度。</p>
<h3>核心特性</h3>
<ol>
<li><strong>简单性</strong>：Memcached采用简单的键值存储模型，API简洁易用</li>
<li><strong>高性能</strong>：基于libevent事件驱动，支持高并发访问</li>
<li><strong>分布式</strong>：支持多台服务器协同工作</li>
<li><strong>内存管理</strong>：高效的内存分配和回收机制</li>
<li><strong>协议简单</strong>：使用简单的文本协议进行通信</li>
</ol>`,readingTime:{minutes:6.44,words:1931},title:"Memcached：轻量级高速缓存的技术深度解析",type:"article"}}],["/posts/cache/1-3-2_Redis_All_Powerful_Cache_Database.html",{loader:()=>y(()=>import("./1-3-2_Redis_All_Powerful_Cache_Database.html-DmbAOQ1V.js"),__vite__mapDeps([56,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis（Remote Dictionary Server）是一个开源的、基于内存的数据结构存储系统，可以用作数据库、缓存和消息中间件。由Salvatore Sanfilippo（antirez）于2009年开发，Redis以其丰富的数据结构、高性能和丰富的功能特性，成为当今最受欢迎的NoSQL数据库之一。本节将深入探讨Redis的技术特点、核心功能、架构原理以及最佳实践。</p>
<h2>Redis概述</h2>
<p>Redis不仅仅是一个简单的键值存储系统，它支持多种数据结构，如字符串（Strings）、哈希（Hashes）、列表（Lists）、集合（Sets）、有序集合（Sorted Sets）等。此外，Redis还提供了事务、发布订阅、Lua脚本、LRU驱逐、事务和不同级别的磁盘持久化等高级功能。</p>`,readingTime:{minutes:9.44,words:2831},title:"Redis：全能型缓存数据库的深度解析与最佳实践",type:"article"}}],["/posts/cache/1-3-3_Tair_Couchbase_Aerospike_Introduction.html",{loader:()=>y(()=>import("./1-3-3_Tair_Couchbase_Aerospike_Introduction.html-DArl9sXv.js"),__vite__mapDeps([57,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式缓存领域，除了广泛使用的Memcached和Redis之外，还有许多企业级的分布式缓存解决方案，如阿里巴巴的Tair、Couchbase和Aerospike等。这些系统针对特定的企业级需求进行了优化，在性能、可扩展性、持久化和数据一致性等方面都有独特的优势。本节将深入介绍这三种分布式缓存技术，分析它们的特点、架构和适用场景。</p>
<h2>Tair：阿里巴巴的分布式缓存系统</h2>
<p>Tair是阿里巴巴集团自主研发的分布式缓存系统，最初是为了满足淘宝网高并发、大数据量的业务需求而开发的。Tair在阿里巴巴内部得到了广泛应用，并在2013年开源。</p>
<h3>核心特性</h3>`,readingTime:{minutes:9.13,words:2740},title:"Tair/Couchbase/Aerospike简介：企业级分布式缓存解决方案",type:"article"}}],["/posts/cache/1-3-4_How_To_Choose_Cache_Technology.html",{loader:()=>y(()=>import("./1-3-4_How_To_Choose_Cache_Technology.html-CWHezKsC.js"),__vite__mapDeps([58,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统架构中，缓存技术选型是一个至关重要的决策过程。选择合适的缓存技术不仅能够显著提升系统性能，还能降低运维复杂度和成本。然而，面对市场上众多的缓存解决方案，如何根据具体业务需求做出明智的选择却是一个复杂的问题。本节将深入探讨缓存技术选型的方法论，提供详细的评估框架和决策指南。</p>
<h2>缓存技术选型的核心原则</h2>
<p>在进行缓存技术选型时，我们需要遵循以下核心原则：</p>
<h3>1. 业务需求驱动</h3>
<p>技术选型应以满足业务需求为首要目标，而不是追求技术的先进性或流行度。</p>
<h3>2. 性能与成本平衡</h3>
<p>在满足性能要求的前提下，选择成本最优的解决方案。</p>`,readingTime:{minutes:9.51,words:2852},title:"如何进行缓存技术选型：构建最适合业务需求的缓存方案",type:"article"}}],["/posts/cache/1-4-0_Cache_Patterns_And_Design_Strategies_Overview.html",{loader:()=>y(()=>import("./1-4-0_Cache_Patterns_And_Design_Strategies_Overview.html-BxOA9Kig.js"),__vite__mapDeps([59,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统中，正确使用缓存是提升系统性能和用户体验的关键。然而，缓存的使用并非简单的存储和读取操作，它涉及到多种设计模式和策略选择。本章将深入探讨缓存的核心模式，包括Cache Aside（旁路缓存模式）、Read Through/Write Through、Write Behind/Write Back等，并分析分布式缓存中的读写一致性问题。</p>
<h2>缓存核心模式详解</h2>
<h3>Cache Aside（旁路缓存模式）</h3>
<p>这是最常用的缓存模式，应用代码负责维护缓存与数据库的一致性。在这种模式下，应用直接与缓存和数据库交互，具有最大的灵活性。</p>
<h3>Read Through/Write Through模式</h3>`,readingTime:{minutes:1.55,words:464},title:"缓存模式与设计策略概述：掌握正确的缓存使用方式",type:"article"}}],["/posts/cache/1-4-1_Cache_Patterns_And_Design_Strategies.html",{loader:()=>y(()=>import("./1-4-1_Cache_Patterns_And_Design_Strategies.html-DyeLJFj6.js"),__vite__mapDeps([60,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统中，缓存模式和设计策略的选择直接影响着系统的性能、一致性和可维护性。不同的缓存模式适用于不同的业务场景，而合理的设计策略能够最大化缓存的价值并规避潜在的风险。本节将深入探讨主流的缓存模式，分析它们的实现原理、优缺点以及适用场景，并提供详细的设计策略指导。</p>
<h2>缓存模式概述</h2>
<p>缓存模式定义了应用、缓存和数据源之间的交互方式。选择合适的缓存模式对于构建高效的缓存系统至关重要。</p>
<h3>缓存模式分类</h3>
<p>根据数据流向和一致性保证方式，缓存模式可以分为以下几类：</p>
<ol>
<li><strong>旁路缓存模式（Cache-Aside）</strong></li>
<li><strong>读穿透模式（Read-Through）</strong></li>
<li><strong>写穿透模式（Write-Through）</strong></li>
<li><strong>写回模式（Write-Behind/Write-Back）</strong></li>
</ol>`,readingTime:{minutes:8.88,words:2663},title:"缓存模式与设计策略：构建高效缓存系统的核心方法",type:"article"}}],["/posts/cache/1-4-2_Cache_Expiration_And_Update_Strategies.html",{loader:()=>y(()=>import("./1-4-2_Cache_Expiration_And_Update_Strategies.html-Cs-0GKGT.js"),__vite__mapDeps([61,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式缓存系统中，缓存的失效与更新策略是确保数据时效性和一致性的关键环节。合理的失效策略能够保证缓存数据的时效性，而有效的更新策略则能确保缓存与数据源的一致性。本节将深入探讨缓存过期时间（TTL）的设置、主动刷新机制、定时更新与延迟更新的对比，以及热点数据与长尾数据的处理策略。</p>
<h2>缓存过期时间（TTL）与主动刷新</h2>
<p>缓存过期时间是控制缓存数据生命周期的核心机制。合理设置TTL能够在保证数据时效性的同时，最大化缓存的命中率。</p>
<h3>1. TTL设置策略</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// TTL设置策略实现</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CacheTTLStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autowired</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RedisTemplate</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 固定TTL策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWithFixedTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ttlSeconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, ttlSeconds, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 动态TTL策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWithDynamicTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ttl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateDynamicTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, ttl, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 分层TTL策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWithTieredTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isHotData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key)) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 热点数据设置较长TTL</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 2小时</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isWarmData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key)) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 温数据设置中等TTL</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 1小时</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 冷数据设置较短TTL</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 30分钟</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 随机TTL策略（防止雪崩）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWithRandomTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> baseTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 在基础TTL基础上增加±10%的随机值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> randomRange</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> baseTTL </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ttl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> baseTTL </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Random</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nextInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(randomRange </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> randomRange;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, ttl, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 基于业务规则的TTL</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWithBusinessRuleTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 根据数据的重要性和更新频率设置TTL</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isCriticalData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 10分钟</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isFrequentlyUpdatedData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 30分钟</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, value, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 1小时</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateDynamicTTL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 根据访问频率动态计算TTL</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 访问频率高的数据设置较长TTL，访问频率低的数据设置较短TTL</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 简化实现</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isHotData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断是否为热点数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isWarmData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isCriticalData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断是否为关键数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isFrequentlyUpdatedData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 判断是否为频繁更新的数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:12.52,words:3755},title:"缓存的失效与更新策略：确保数据时效性与一致性的关键",type:"article"}}],["/posts/cache/1-4-3_Cache_And_Database_Consistency.html",{loader:()=>y(()=>import("./1-4-3_Cache_And_Database_Consistency.html-D8fn-qbW.js"),__vite__mapDeps([62,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统中，缓存与数据库的一致性问题是构建可靠数据访问层面临的核心挑战之一。随着系统复杂性的增加和数据更新频率的提高，如何在保证系统性能的同时确保数据的一致性，成为架构师和开发者必须深入思考的问题。本节将深入探讨强一致性与最终一致性的对比，缓存与数据库双写问题，以及多种一致性解决方案。</p>
<h2>强一致性 vs 最终一致性</h2>
<p>在分布式系统中，一致性模型的选择直接影响着系统的性能、可用性和复杂度。强一致性和最终一致性代表了两种不同的一致性保证级别。</p>
<h3>1. 强一致性</h3>
<p>强一致性要求数据在任何时刻都保持一致状态，一旦数据被更新，所有后续的读取操作都能看到最新的数据。</p>`,readingTime:{minutes:13.39,words:4018},title:"缓存与数据库一致性：构建可靠数据访问层的关键挑战",type:"article"}}],["/posts/cache/1-5-0_Redis_Basics_And_Core_Data_Structures_Overview.html",{loader:()=>y(()=>import("./1-5-0_Redis_Basics_And_Core_Data_Structures_Overview.html-DZGt4Tiy.js"),__vite__mapDeps([63,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis（Remote Dictionary Server）作为一个高性能的内存数据结构存储系统，已经成为现代分布式系统中不可或缺的组件。它不仅可以用作数据库、缓存和消息中间件，还提供了丰富的数据结构和高级功能。本章将深入探讨Redis的基础知识，包括String、List、Hash、Set、SortedSet等核心数据结构，以及它们的常见使用场景。</p>
<h2>Redis核心数据结构详解</h2>
<h3>String（字符串）</h3>
<p>String是Redis最基本的数据类型，可以存储文本、数字或二进制数据。它支持原子性的递增/递减操作，适用于计数器、会话存储等场景。</p>`,readingTime:{minutes:1.9,words:570},title:"Redis基础与核心数据结构概述：掌握高性能缓存的核心技术",type:"article"}}],["/posts/cache/1-5-1_Redis_Basics_And_Core_Data_Structures.html",{loader:()=>y(()=>import("./1-5-1_Redis_Basics_And_Core_Data_Structures.html-BhVLhdev.js"),__vite__mapDeps([64,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis（Remote Dictionary Server）作为一个开源的内存数据结构存储系统，以其高性能、丰富的数据结构和强大的功能特性，成为现代分布式系统中不可或缺的组件。它不仅可以用作数据库、缓存和消息中间件，还提供了事务、发布订阅、Lua脚本等高级功能。本节将深入探讨Redis的基础知识和核心数据结构，帮助读者掌握这一重要技术。</p>
<h2>Redis概述</h2>
<p>Redis是一个基于内存的键值存储系统，由Salvatore Sanfilippo（antirez）于2009年开发。它支持多种数据结构，包括字符串（Strings）、哈希（Hashes）、列表（Lists）、集合（Sets）、有序集合（Sorted Sets）等，并提供了丰富的操作命令。</p>`,readingTime:{minutes:11.99,words:3597},title:"Redis基础与核心数据结构：构建高性能应用的基石",type:"article"}}],["/posts/cache/1-5-2_Redis_Advanced_Features_And_Extensions.html",{loader:()=>y(()=>import("./1-5-2_Redis_Advanced_Features_And_Extensions.html-CY5m0OB6.js"),__vite__mapDeps([65,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis不仅仅是一个简单的键值存储系统，它还提供了许多高级特性和扩展功能，使其成为一个功能丰富的数据平台。这些特性包括持久化机制、发布订阅模式、Stream数据结构、模块扩展等。本节将深入探讨这些高级特性，帮助读者充分利用Redis的强大功能。</p>
<h2>Redis持久化机制</h2>
<p>Redis提供了两种主要的持久化方式：RDB（Redis Database）和AOF（Append Only File）。这两种方式可以单独使用，也可以结合使用，以满足不同的数据安全和性能需求。</p>
<h3>1. RDB持久化</h3>
<p>RDB持久化通过创建数据快照的方式将内存中的数据保存到磁盘上。它会在指定的时间间隔内将数据集快照写入磁盘。</p>`,readingTime:{minutes:10.71,words:3214},title:"Redis高级特性与扩展：解锁更多可能性的钥匙",type:"article"}}],["/posts/cache/1-5-3_Redis_Cluster_Principles_And_Applications.html",{loader:()=>y(()=>import("./1-5-3_Redis_Cluster_Principles_And_Applications.html-h67-ghCj.js"),__vite__mapDeps([66,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis Cluster是Redis官方提供的分布式解决方案，它通过分片机制实现了数据的分布式存储和高可用性。Redis Cluster不仅能够水平扩展Redis的存储容量和处理能力，还提供了自动故障转移和数据冗余等高级特性。本节将深入探讨Redis Cluster的原理、架构设计和实际应用。</p>
<h2>Redis Cluster概述</h2>
<p>Redis Cluster是Redis 3.0版本引入的分布式解决方案，它通过哈希槽（Hash Slot）机制将数据分布到多个节点上，每个节点负责一部分数据。Redis Cluster具有以下核心特性：</p>
<ol>
<li><strong>自动分片</strong>：数据自动分布到多个节点</li>
<li><strong>高可用性</strong>：支持主从复制和自动故障转移</li>
<li><strong>无中心架构</strong>：去中心化设计，无单点故障</li>
<li><strong>线性扩展</strong>：支持动态添加和删除节点</li>
<li><strong>客户端路由</strong>：客户端直接与节点通信</li>
</ol>`,readingTime:{minutes:14.13,words:4239},title:"Redis Cluster原理与应用：构建高可用分布式缓存系统",type:"article"}}],["/posts/cache/1-6-0_Memcached_In_Action_Overview.html",{loader:()=>y(()=>import("./1-6-0_Memcached_In_Action_Overview.html-BczwNZor.js"),__vite__mapDeps([67,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Memcached作为一个高性能的分布式内存对象缓存系统，以其简单性、高性能和可扩展性在互联网应用中得到了广泛应用。尽管Redis等更功能丰富的缓存系统逐渐流行，Memcached仍然在许多场景下发挥着重要作用。本章将深入探讨Memcached的架构与工作原理、内存管理与LRU淘汰策略，以及与Redis的对比与结合使用。</p>
<h2>Memcached架构与工作原理</h2>
<p>Memcached采用简单的客户端-服务器架构，通过libevent事件驱动库实现高并发处理能力。它使用Slab Allocation机制管理内存，避免内存碎片问题，并通过LRU算法淘汰过期数据。</p>`,readingTime:{minutes:1.45,words:434},title:"Memcached实战概述：轻量级高速缓存的实践指南",type:"article"}}],["/posts/cache/1-6-1_Memcached_Architecture_And_Working_Principles.html",{loader:()=>y(()=>import("./1-6-1_Memcached_Architecture_And_Working_Principles.html-DodGa4tw.js"),__vite__mapDeps([68,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Memcached作为一个高性能的分布式内存对象缓存系统，自2003年由Brad Fitzpatrick开发以来，一直以其简单性、高性能和可扩展性在互联网应用中得到广泛应用。理解Memcached的架构与工作原理对于正确使用和优化这一缓存系统至关重要。本节将深入探讨Memcached的系统架构、核心组件、工作流程以及性能优化机制。</p>
<h2>Memcached概述</h2>
<p>Memcached是一个自由开源的高性能分布式内存对象缓存系统，主要用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高Web应用的速度。Memcached基于一个存储键值对的哈希表，其守护进程运行在服务器上，通过简单的协议处理客户端的请求。</p>`,readingTime:{minutes:12.8,words:3841},title:"Memcached架构与工作原理：深入理解高性能缓存系统的核心机制",type:"article"}}],["/posts/cache/1-6-2_Memcached_Memory_Management_And_LRU_Eviction_Strategy.html",{loader:()=>y(()=>import("./1-6-2_Memcached_Memory_Management_And_LRU_Eviction_Strategy.html-fNBttrQU.js"),__vite__mapDeps([69,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Memcached的高性能很大程度上得益于其精巧的内存管理机制和高效的淘汰策略。与传统的内存分配方式不同，Memcached采用了Slab Allocation内存管理机制来避免内存碎片，并结合LRU（Least Recently Used）算法来管理数据的生命周期。本节将深入探讨Memcached的内存管理原理、Slab Allocation机制、LRU淘汰策略以及相关的优化技术。</p>
<h2>Memcached内存管理概述</h2>
<p>Memcached的内存管理是其高性能的关键因素之一。它通过预分配大块内存、使用Slab分类存储和LRU淘汰算法，实现了高效的内存利用和快速的数据访问。</p>`,readingTime:{minutes:14.64,words:4393},title:"Memcached内存管理与LRU淘汰策略：高性能缓存的核心机制",type:"article"}}],["/posts/cache/1-6-3_Memcached_And_Redis_Comparison_And_Combined_Use.html",{loader:()=>y(()=>import("./1-6-3_Memcached_And_Redis_Comparison_And_Combined_Use.html-DDEd2pvI.js"),__vite__mapDeps([70,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式缓存领域，Memcached和Redis是两个最主流的解决方案。虽然它们都提供高性能的内存缓存功能，但在设计理念、功能特性和适用场景上存在显著差异。正确理解这两种技术的特点，并根据具体业务需求做出合理选择，对于构建高效的缓存架构至关重要。本节将深入对比Memcached与Redis的核心特性，并探讨如何结合使用这两种技术来构建最优的缓存解决方案。</p>
<h2>Memcached与Redis核心特性对比</h2>
<h3>1. 基础特性对比</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Memcached与Redis基础特性对比表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CacheTechnologyComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> FeatureComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 特性 | Memcached | Redis |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        |------|-----------|-------|</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 开发语言 | C | C |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 首次发布 | 2003年 | 2009年 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 数据模型 | 简单键值对 | 多种数据结构 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 持久化 | 不支持 | 支持RDB和AOF |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 集群支持 | 客户端分片 | 原生集群支持 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 内存管理 | Slab Allocation | 内存池化 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 淘汰策略 | LRU | 多种策略 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 事务支持 | 不支持 | 支持 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 发布订阅 | 不支持 | 支持 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | Lua脚本 | 不支持 | 支持 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        | 性能 | 更高（简单操作） | 略低但功能丰富 |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 详细特性对比分析</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DetailedComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 数据模型对比</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DataModelComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            /*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Memcached数据模型：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 仅支持简单的字符串键值对</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 值可以是任意二进制数据</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 最大值大小通常为1MB</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 适合存储序列化对象</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Redis数据模型：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 支持字符串、哈希、列表、集合、有序集合</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 支持位图、HyperLogLog等特殊数据结构</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 最大值大小可达512MB</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 适合复杂数据操作</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 持久化对比</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PersistenceComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            /*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Memcached持久化：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 无持久化支持</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 数据完全存储在内存中</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 重启后数据丢失</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 适合作为纯缓存使用</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Redis持久化：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - RDB快照：定期创建数据快照</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - AOF日志：记录每个写操作</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 支持混合持久化</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 可以作为数据库使用</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 集群支持对比</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ClusterComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            /*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Memcached集群：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 客户端实现分片</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 无原生集群支持</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 节点增减需要客户端配合</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 无自动故障转移</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Redis集群：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 原生集群支持</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 自动分片和重新平衡</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 支持主从复制和故障转移</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 配置透明化</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 性能对比</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PerformanceComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            /*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Memcached性能：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 更简单的协议和数据结构</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 更少的内存开销</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 更高的QPS（简单操作）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 更低的延迟</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            Redis性能：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 功能丰富但有一定开销</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 支持复杂操作</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 持久化有一定性能影响</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            - 适合复杂业务场景</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:15.56,words:4669},title:"Memcached与Redis对比与结合使用：构建最优缓存架构的策略选择",type:"article"}}],["/posts/cache/1-7-0_Redis_Basics_And_Core_Data_Structures_Overview.html",{loader:()=>y(()=>import("./1-7-0_Redis_Basics_And_Core_Data_Structures_Overview.html-DdNLos_w.js"),__vite__mapDeps([71,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis作为一个高性能的键值存储系统，以其丰富的数据结构和强大的功能在分布式缓存领域占据重要地位。在众多数据结构中，String、List、Hash、Set、SortedSet构成了Redis的核心，它们各自具有独特的特性和适用场景。</p>
<p>本章将深入探讨这些核心数据结构的内部实现原理、典型应用场景以及最佳实践。我们将通过实际案例分析，展示如何在计数器、排行榜、会话存储等场景中合理运用这些数据结构。此外，我们还将介绍Redis事务和Lua脚本的使用，帮助读者掌握构建高效、可靠缓存系统的关键技术。</p>
<h2>Redis核心数据结构概览</h2>
<p>Redis提供了五种核心数据结构，每种都有其特定的用途和优势：</p>`,readingTime:{minutes:1.97,words:591},title:"Redis基础与核心数据结构概述：构建高效缓存系统的基石",type:"article"}}],["/posts/cache/1-7-1_Redis_Core_Data_Structures_In_Depth.html",{loader:()=>y(()=>import("./1-7-1_Redis_Core_Data_Structures_In_Depth.html-B5CbXgJr.js"),__vite__mapDeps([72,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis的核心数据结构是其高性能和灵活性的基础。理解这些数据结构的内部实现原理和使用场景，对于构建高效的缓存系统至关重要。本章将深入剖析String、List、Hash、Set、SortedSet五种核心数据结构，从底层实现到实际应用进行全面解析。</p>
<h2>String：最基础也最强大的数据结构</h2>
<p>String是Redis中最基本的数据类型，但它绝不仅仅是简单的字符串存储。在底层，Redis通过SDS（Simple Dynamic String）结构来实现String，相比C语言的字符串具有更多优势。</p>
<h3>SDS结构的优势</h3>
<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sdshdr {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> len;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 记录buf数组中已使用字节的数量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> free;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       // 记录buf数组中未使用字节的数量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> buf</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 字节数组，用于保存字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.63,words:1989},title:"Redis核心数据结构深度解析：从实现原理到最佳实践",type:"article"}}],["/posts/cache/1-7-2_Redis_Transactions_And_Lua_Scripts.html",{loader:()=>y(()=>import("./1-7-2_Redis_Transactions_And_Lua_Scripts.html-76H6uo6L.js"),__vite__mapDeps([73,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>在分布式系统中，保证数据的一致性和操作的原子性是至关重要的。Redis提供了事务机制和Lua脚本支持，帮助开发者在缓存系统中实现复杂的原子操作。本章将深入探讨Redis事务的工作原理、使用方法以及Lua脚本的强大功能，通过实际案例展示如何在生产环境中正确应用这些技术。</p>
<h2>Redis事务机制详解</h2>
<p>Redis事务允许将多个命令打包执行，这些命令会按顺序执行，不会被其他客户端的命令打断。但需要注意的是，Redis事务与传统关系型数据库的事务有所不同，它不支持回滚机制。</p>
<h3>事务的基本使用</h3>
<p>Redis事务通过MULTI、EXEC、DISCARD和WATCH四个命令来实现：</p>`,readingTime:{minutes:7.16,words:2149},title:"Redis事务与Lua脚本：保障数据一致性的关键技术",type:"article"}}],["/posts/cache/1-8-0_Redis_Advanced_Features_And_Extensions_Overview.html",{loader:()=>y(()=>import("./1-8-0_Redis_Advanced_Features_And_Extensions_Overview.html-DyCfwfqa.js"),__vite__mapDeps([74,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis不仅仅是一个简单的键值存储系统，它还提供了许多高级特性和扩展功能，使其成为一个功能丰富的数据平台。这些特性包括持久化机制、发布订阅模式、Stream数据结构、模块扩展等。本章将深入探讨这些高级特性，帮助读者充分利用Redis的强大功能。</p>
<h2>Redis持久化机制</h2>
<p>Redis提供了两种主要的持久化方式：RDB（Redis Database）和AOF（Append Only File）。这两种方式可以单独使用，也可以结合使用，以满足不同的数据安全和性能需求。</p>
<p>RDB持久化通过创建数据快照的方式将内存中的数据保存到磁盘上，适合备份和灾难恢复场景。AOF持久化通过记录每个写操作命令来实现持久化，提供更高的数据安全性。</p>`,readingTime:{minutes:2.18,words:654},title:"Redis高级特性与扩展概述：解锁更多可能性的钥匙",type:"article"}}],["/posts/cache/1-8-1_Redis_Persistence_Mechanisms.html",{loader:()=>y(()=>import("./1-8-1_Redis_Persistence_Mechanisms.html-DgmaKIUK.js"),__vite__mapDeps([75,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis作为一个内存数据库，数据存储在内存中，一旦服务器重启或发生故障，内存中的数据将会丢失。为了保证数据的持久性和可靠性，Redis提供了两种主要的持久化机制：RDB（Redis Database Backup）和AOF（Append Only File）。这两种机制各有特点，可以单独使用也可以结合使用，为数据安全提供双重保障。</p>
<h2>RDB持久化机制</h2>
<p>RDB持久化是通过生成数据集的快照（snapshot）来实现的。它会在指定的时间间隔内将内存中的数据以快照的形式保存到磁盘上，生成一个二进制文件。这个文件包含了Redis在某个时间点上的所有数据，可以用于数据恢复。</p>`,readingTime:{minutes:6.75,words:2025},title:"Redis持久化机制详解：保障数据安全的双重保险",type:"article"}}],["/posts/cache/1-8-2_Redis_PubSub_And_Stream.html",{loader:()=>y(()=>import("./1-8-2_Redis_PubSub_And_Stream.html-ZA5Khtw4.js"),__vite__mapDeps([76,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis不仅是一个高性能的键值存储系统，还提供了强大的消息传递功能。通过发布订阅（Pub/Sub）模式和Stream数据结构，Redis可以作为轻量级的消息中间件使用，满足各种消息传递场景的需求。本章将深入探讨这两种消息传递机制的原理、使用方法以及适用场景。</p>
<h2>Redis发布订阅模式</h2>
<p>发布订阅是一种消息通信模式，发送者（发布者）发送消息，接收者（订阅者）接收消息，两者之间不需要直接建立联系。Redis的发布订阅模式基于频道（Channel）实现，发布者向频道发送消息，订阅者订阅频道接收消息。</p>
<h3>发布订阅的基本使用</h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 订阅频道</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SUBSCRIBE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> channel1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> channel2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 发布消息到频道</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PUBLISH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> channel1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Hello World"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看活跃频道</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PUBSUB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> CHANNELS</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看频道订阅者数量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PUBSUB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NUMSUB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> channel1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:7.09,words:2126},title:"Redis发布订阅与Stream：构建高效消息传递系统",type:"article"}}],["/posts/cache/1-8-3_Redis_Modules_Extensions.html",{loader:()=>y(()=>import("./1-8-3_Redis_Modules_Extensions.html-DfjH4M0i.js"),__vite__mapDeps([77,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis模块系统是Redis 4.0版本引入的重要特性，它允许开发者通过动态加载模块的方式扩展Redis的功能，而无需修改Redis核心代码。通过模块，我们可以添加新的数据结构、命令和功能，使Redis成为一个更加强大和灵活的数据平台。本章将深入探讨Redis模块系统的原理和使用方法，并详细介绍几个流行的Redis模块。</p>
<h2>Redis模块系统概述</h2>
<p>Redis模块系统通过动态库（.so文件）的方式扩展Redis功能。模块可以在Redis启动时加载，也可以在运行时动态加载。每个模块可以注册新的命令、数据类型和回调函数，与Redis核心进行交互。</p>
<h3>模块的基本结构</h3>`,readingTime:{minutes:7.93,words:2378},title:"Redis模块扩展：解锁更多可能性的钥匙",type:"article"}}],["/posts/cache/1-8-4_Redis_Cluster_Principles_And_Applications.html",{loader:()=>y(()=>import("./1-8-4_Redis_Cluster_Principles_And_Applications.html-BtSCFuxe.js"),__vite__mapDeps([78,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Redis Cluster是Redis官方提供的分布式解决方案，它通过分片机制实现数据的分布式存储，支持自动故障转移和数据重分布。Redis Cluster采用去中心化的架构，无需代理节点，每个节点都具备路由信息，能够直接响应客户端请求。本章将深入探讨Redis Cluster的原理、架构设计以及在生产环境中的应用实践。</p>
<h2>Redis Cluster概述</h2>
<p>Redis Cluster是Redis 3.0版本引入的分布式解决方案，旨在解决单个Redis实例的容量和可用性限制。它通过将数据分片存储在多个节点上来实现水平扩展，同时通过主从复制和故障转移机制保证高可用性。</p>`,readingTime:{minutes:8.21,words:2463},title:"Redis Cluster原理与应用：构建高可用分布式缓存系统",type:"article"}}],["/posts/cache/1-9-0_Memcached_In_Action_Overview.html",{loader:()=>y(()=>import("./1-9-0_Memcached_In_Action_Overview.html-CHUT_mUF.js"),__vite__mapDeps([79,1])),meta:{date:1756512e6,category:["Cache"],tag:["cache"],excerpt:`<p>Memcached作为一个高性能的分布式内存对象缓存系统，以其简单性、高性能和可扩展性在互联网应用中得到了广泛应用。尽管Redis等更功能丰富的缓存系统逐渐流行，Memcached仍然在许多场景下发挥着重要作用。本章将深入探讨Memcached的架构与工作原理、内存管理与LRU淘汰策略，以及与Redis的对比与结合使用。</p>
<h2>Memcached架构与工作原理</h2>
<p>Memcached采用简单的客户端-服务器架构，通过libevent事件驱动库实现高并发处理能力。它使用Slab Allocation机制管理内存，避免内存碎片问题，并通过LRU算法淘汰过期数据。</p>`,readingTime:{minutes:1.45,words:434},title:"Memcached实战概述：轻量级高速缓存的实践指南",type:"article"}}],["/posts/cache/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-5aCdFyPp.js"),__vite__mapDeps([80,1])),meta:{date:1756738619e3,excerpt:`<h2>《分布式缓存：从入门到精通》</h2>
<h3><strong>第一篇：基础篇 —— 认识分布式缓存</strong></h3>
<ol>
<li>
<p><strong>第1章 缓存的基本概念</strong></p>
<ul>
<li>为什么需要缓存</li>
<li>缓存的适用场景与风险</li>
<li>本地缓存 vs 分布式缓存</li>
<li>缓存的优势与挑战</li>
</ul>
</li>
<li>
<p><strong>第2章 分布式缓存的核心原理</strong></p>
<ul>
<li>分布式架构下的缓存需求</li>
<li>CAP 定理与缓存系统的权衡</li>
<li>一致性哈希与节点分片</li>
<li>缓存与数据库的关系</li>
</ul>
</li>
<li>
<p><strong>第3章 常见分布式缓存选型</strong></p>
<ul>
<li>Memcached：轻量级高速缓存</li>
<li>Redis：全能型缓存数据库</li>
<li>Tair / Couchbase / Aerospike 简介</li>
<li>如何进行缓存技术选型</li>
</ul>
</li>
</ol>`,readingTime:{minutes:3.02,words:906},title:"",type:"article"}}],["/posts/mq/1-1-why-message-queues.html",{loader:()=>y(()=>import("./1-1-why-message-queues.html-DqIZhbNF.js"),__vite__mapDeps([81,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在现代分布式系统中，消息队列（Message Queue，简称MQ）已成为构建高可用、可扩展应用的核心组件之一。但为什么我们需要消息队列？它解决了什么问题？这篇文章将从系统架构的角度深入探讨消息队列的必要性。</p>
<h2>同步调用 vs 异步调用：系统通信的两种模式</h2>
<p>在没有消息队列的时代，系统间的通信主要依赖于同步调用。当一个系统需要与另一个系统交互时，它会直接调用对方提供的API接口，等待对方处理完成并返回结果后再继续执行后续逻辑。</p>
<p>这种模式看似简单直接，但在复杂的分布式环境中却存在诸多问题：</p>
<ol>
<li><strong>强耦合性</strong>：调用方必须知道被调用方的地址、接口等详细信息，系统间形成了强依赖关系。</li>
<li><strong>性能瓶颈</strong>：调用方需要等待被调用方处理完成，整个流程的耗时是各环节耗时之和。</li>
<li><strong>容错能力差</strong>：一旦被调用方出现故障，调用方也会受到影响，可能导致整个业务流程中断。</li>
</ol>`,readingTime:{minutes:4.74,words:1422},title:"为什么需要消息队列？系统间通信的核心技术解析",type:"article"}}],["/posts/mq/1-2-system-communication-comparison.html",{loader:()=>y(()=>import("./1-2-system-communication-comparison.html-CCiYi7qd.js"),__vite__mapDeps([82,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在构建分布式系统时，选择合适的系统间通信方式是架构设计的关键决策之一。不同的通信方式有着各自的优缺点，适用于不同的业务场景。本文将深入对比分析同步调用和异步调用这两种主要的系统间通信方式。</p>
<h2>同步调用的工作原理与特点</h2>
<p>同步调用是一种传统的系统间通信方式，其工作流程如下：</p>
<ol>
<li>调用方发起请求到被调用方</li>
<li>调用方阻塞等待，直到被调用方处理完成并返回结果</li>
<li>调用方接收到结果后继续执行后续逻辑</li>
</ol>
<h3>同步调用的优势</h3>
<ol>
<li><strong>简单直观</strong>：逻辑清晰，易于理解和实现</li>
<li><strong>实时性强</strong>：调用方可以立即获得处理结果</li>
<li><strong>调试方便</strong>：调用链路清晰，便于问题排查</li>
</ol>`,readingTime:{minutes:5.58,words:1675},title:"系统间通信方式对比：同步调用 vs 异步调用的深度解析",type:"article"}}],["/posts/mq/1-3-mq-benefits-risks.html",{loader:()=>y(()=>import("./1-3-mq-benefits-risks.html-Bua6IYOc.js"),__vite__mapDeps([83,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>消息队列（Message Queue，简称MQ）作为现代分布式系统的核心组件，为系统解耦、异步处理和流量削峰提供了强大的支持。然而，正如任何技术一样，MQ也是一把双刃剑，既带来了显著的优势，也伴随着一定的风险。本文将深入探讨MQ的优势与风险，帮助架构师在系统设计中做出更明智的决策。</p>
<h2>MQ的核心优势</h2>
<h3>1. 系统解耦：打破紧耦合的枷锁</h3>
<p>在传统的系统架构中，服务间的直接调用往往导致紧密耦合，一个服务的变更可能会影响到所有依赖它的服务。MQ通过引入中间层，实现了生产者和消费者之间的解耦。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 传统紧耦合方式</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> InventoryService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PaymentService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> paymentService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> processOrder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Order</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 直接调用其他服务，形成紧耦合</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">updateInventory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(order);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        paymentService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">processPayment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(order);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 使用MQ实现解耦</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MessageQueue</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> messageQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> processOrder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Order</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 只需发送消息，无需关心谁来处理</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        messageQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"order.created"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, order);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.29,words:1886},title:"MQ的优势与风险：构建可靠分布式系统的双刃剑",type:"article"}}],["/posts/mq/2-1-message-queue-basic-concepts-overview.html",{loader:()=>y(()=>import("./2-1-message-queue-basic-concepts-overview.html-DW8Y3owC.js"),__vite__mapDeps([84,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>消息队列（Message Queue，简称MQ）作为现代分布式系统中不可或缺的组件，其核心概念的理解对于系统架构师和开发者至关重要。掌握消息队列的基本概念不仅有助于正确使用现有的消息队列产品，更是深入理解其内部机制和进行定制化开发的基础。</p>
<p>本文将全面概述消息队列的基本概念，为后续章节的深入探讨奠定基础。我们将从消息队列的核心组成要素开始，逐步介绍消息传递模型和消费模式，帮助读者建立完整的知识体系。</p>
<h2>消息队列的核心组成要素</h2>
<h3>消息（Message）</h3>
<p>消息是消息队列中传输的基本单位，它包含了需要传递的数据和元信息。一个典型的消息结构包括：</p>`,readingTime:{minutes:5.1,words:1530},title:"消息队列的基本概念概述：理解现代分布式通信的核心要素",type:"article"}}],["/posts/mq/2-2-point-to-point-vs-publish-subscribe-in-depth.html",{loader:()=>y(()=>import("./2-2-point-to-point-vs-publish-subscribe-in-depth.html-oYI2FQzf.js"),__vite__mapDeps([85,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在消息队列的世界中，点对点（Point-to-Point）模型和发布订阅（Publish-Subscribe）模型是两种最核心的消息传递模式。它们各自有着独特的设计理念和适用场景，理解它们的差异对于正确选择和使用消息队列至关重要。本文将深入剖析这两种模型的内部机制、实现细节和实际应用。</p>
<h2>点对点模型（Point-to-Point）深度解析</h2>
<h3>核心特征与工作原理</h3>
<p>点对点模型是消息队列中最基础的传递模式，其核心特征包括：</p>
<ol>
<li><strong>一对一传递</strong>：每条消息只能被一个消费者处理</li>
<li><strong>队列机制</strong>：消息存储在队列中，消费者从队列中获取消息</li>
<li><strong>负载均衡</strong>：多个消费者可以同时监听同一个队列，实现负载均衡</li>
<li><strong>消息确认</strong>：消费者处理完消息后需要发送确认，确保消息不丢失</li>
</ol>`,readingTime:{minutes:10.39,words:3116},title:"点对点模型与发布订阅模型深度解析：消息队列核心传输模式的内部机制与实践",type:"article"}}],["/posts/mq/2-3-push-vs-pull-consumption-in-depth.html",{loader:()=>y(()=>import("./2-3-push-vs-pull-consumption-in-depth.html-UUWn2uHf.js"),__vite__mapDeps([86,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在消息队列系统中，消费者如何获取消息是一个核心问题。Push（推送）模式和Pull（拉取）模式是两种基本的消费机制，它们各有特点，适用于不同的场景。深入理解这两种消费模式的工作原理、内部实现和性能优化策略，对于构建高效、可靠的消息处理系统至关重要。本文将深入探讨这两种消费模式的内部机制、实现细节和最佳实践。</p>
<h2>Push模式（推送模式）深度解析</h2>
<h3>工作原理与核心机制</h3>
<p>在Push模式下，消息队列系统主动将消息推送给消费者。当有新消息到达时，消息队列会立即通知并推送消息给已注册的消费者。消费者无需主动请求消息，而是被动接收。</p>
<p>Push模式的核心优势在于其实时性强，消息到达后立即推送给消费者，延迟最小。但同时也带来了负载控制困难和背压问题等挑战。</p>`,readingTime:{minutes:13.45,words:4036},title:"Push与Pull消费模式深度解析：消息队列消费机制的内部实现与性能优化",type:"article"}}],["/posts/mq/3-1-message-queue-core-elements-overview.html",{loader:()=>y(()=>import("./3-1-message-queue-core-elements-overview.html-B1bixObt.js"),__vite__mapDeps([87,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在现代分布式系统架构中，消息队列作为解耦组件、异步处理和流量削峰的重要工具，其核心价值不言而喻。然而，要真正理解并有效运用消息队列技术，我们必须深入掌握其核心要素。消息队列系统主要由三大核心要素构成：生产者（Producer）、Broker（消息代理）和消费者（Consumer）。此外，消息持久化机制和消费确认与重试机制也是保障系统可靠性的关键组成部分。</p>
<p>本文将从整体视角出发，深入剖析消息队列的核心要素，为后续章节的详细探讨奠定基础。</p>
<h2>生产者：消息的源头</h2>
<p>生产者是消息队列系统的起点，负责创建业务消息并将其发送到Broker。一个优秀的生产者实现不仅需要考虑消息的正确封装和高效传输，还需要具备故障恢复、重试机制、流量控制等高级特性。</p>`,readingTime:{minutes:4.5,words:1351},title:"消息队列的核心要素概述：构建可靠分布式系统的三大支柱",type:"article"}}],["/posts/mq/3-2-producers-brokers-consumers-in-depth.html",{loader:()=>y(()=>import("./3-2-producers-brokers-consumers-in-depth.html-DWbv0PwP.js"),__vite__mapDeps([88,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>消息队列系统的核心由三个关键组件构成：生产者（Producer）、Broker（消息代理）和消费者（Consumer）。这三个组件协同工作，实现了消息的创建、传输和处理。深入理解每个组件的内部机制、设计原则和最佳实践，对于构建高效、可靠的分布式系统至关重要。本文将详细剖析这三个核心组件的内部机制和实现细节。</p>
<h2>生产者（Producer）深度解析</h2>
<p>生产者是消息队列系统的起点，负责创建业务消息并将其发送到Broker。一个优秀的生产者实现需要考虑性能、可靠性、容错性等多个方面。</p>
<h3>核心职责与设计原则</h3>
<p>生产者的核心职责包括：</p>
`,readingTime:{minutes:10.55,words:3165},title:"生产者、Broker、消费者深度解析：消息队列核心组件的内部机制与最佳实践",type:"article"}}],["/posts/mq/3-3-message-persistence-in-depth.html",{loader:()=>y(()=>import("./3-3-message-persistence-in-depth.html-DIydcdHg.js"),__vite__mapDeps([89,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>消息持久化是消息队列系统中确保消息可靠性的核心技术之一。在分布式系统中，网络故障、系统崩溃等异常情况时有发生，如何确保消息在这些异常情况下不丢失，是构建可靠消息队列系统的关键挑战。本文将深入探讨消息持久化的设计原理、实现机制、性能优化策略以及在主流消息队列中的实践。</p>
<h2>消息持久化的重要性</h2>
<p>在消息队列系统中，消息持久化的重要性不言而喻。它直接关系到系统的数据可靠性和业务连续性。</p>
<h3>数据可靠性保障</h3>
<p>消息持久化通过将消息存储到非易失性存储介质（如磁盘）中，确保即使在系统崩溃、断电等意外情况下，消息也不会丢失。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 持久化对可靠性的影响示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PersistenceReliabilityExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 未持久化的消息处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> processWithoutPersistence</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 消息仅存储在内存中</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            memoryQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 如果系统崩溃，消息将丢失</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"消息存储在内存中: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessageId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"存储失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 持久化的消息处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> processWithPersistence</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 1. 写入磁盘持久化存储</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> persisted</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> diskStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (persisted) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"消息已持久化到磁盘: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessageId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"消息持久化失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessageId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"持久化过程中发生异常: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.91,words:4472},title:"消息持久化深度解析：确保消息不丢失的关键技术实现与优化策略",type:"article"}}],["/posts/mq/4-1-message-reliability-consistency.html",{loader:()=>y(()=>import("./4-1-message-reliability-consistency.html-DD4i88wb.js"),__vite__mapDeps([90,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在分布式系统中，消息队列作为核心组件，其可靠性和一致性直接关系到整个系统的稳定性和数据完整性。消息可靠性确保消息在传输过程中不丢失、不重复，而一致性则保证消息在不同节点间的状态保持一致。本文将深入探讨消息队列中的三种核心语义：至少一次、至多一次、精确一次，以及消息丢失、重复、乱序等常见问题的解决方案，最后介绍幂等性设计在保障系统一致性中的重要作用。</p>
<h2>消息传递语义</h2>
<h3>至多一次（At Most Once）</h3>
<p>至多一次语义保证消息最多被传递一次，但可能丢失。这是最弱的一致性保证，实现简单但可靠性较低。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 至多一次语义示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtMostOnceProducer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sendMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 发送消息后立即确认，不等待Broker确认</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            networkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 即使Broker未收到消息，也认为发送成功</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 发送失败也不重试</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"消息发送失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.54,words:1962},title:"消息可靠性与一致性：构建可信分布式系统的基石",type:"article"}}],["/posts/mq/4-2-delivery-semantics-details.html",{loader:()=>y(()=>import("./4-2-delivery-semantics-details.html-BaQpllSg.js"),__vite__mapDeps([91,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在分布式系统中，消息传递语义是衡量消息队列可靠性的重要指标。至少一次（At Least Once）、至多一次（At Most Once）和精确一次（Exactly Once）是三种核心的消息传递语义，它们各自提供了不同级别的可靠性保证。理解这三种语义的特点、实现机制和适用场景，对于设计和实现可靠的消息队列系统至关重要。本文将深入剖析这三种语义的内部机制和实践应用。</p>
<h2>消息传递语义概述</h2>
<p>消息传递语义定义了消息在生产者、消息队列系统和消费者之间传递时的可靠性保证级别。不同的语义在实现复杂度、性能和可靠性之间做出了不同的权衡。</p>
<h3>语义对比表</h3>`,readingTime:{minutes:8.49,words:2546},title:"至少一次、至多一次、精确一次语义详解：消息传递的三种保证机制",type:"article"}}],["/posts/mq/4-3-message-loss-duplication-ordering.html",{loader:()=>y(()=>import("./4-3-message-loss-duplication-ordering.html-DhrNpH2c.js"),__vite__mapDeps([92,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>在分布式消息队列系统中，消息丢失、重复和乱序是三个最常见的问题，它们直接影响系统的可靠性和数据一致性。这些问题可能发生在消息传递的各个环节，包括生产者、消息队列系统（Broker）和消费者。深入理解这些问题的成因和解决方案，对于构建高可靠、高一致性的消息队列系统至关重要。本文将详细分析这三个问题的产生原因，并提供相应的解决方案和最佳实践。</p>
<h2>消息丢失问题</h2>
<p>消息丢失是消息队列系统中最严重的可靠性问题之一，可能导致业务数据不一致和业务流程中断。</p>
<h3>丢失问题的产生原因</h3>
<h4>1. 生产者端丢失</h4>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 生产者端丢失问题示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ProducerLossExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 问题代码：发送后不确认</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> problematicSend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 发送消息后立即返回，不等待Broker确认</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            networkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 如果网络中断或Broker故障，消息将丢失</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 异常处理不当，消息丢失</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"发送失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 解决方案：确认机制</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SendResult</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reliableSend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 发送消息并等待确认</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            SendResult</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> networkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sendWithAck</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 5秒超时</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SendFailedException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Broker确认失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getErrorMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"发送失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 记录失败消息，用于重试或人工处理</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            logFailedMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message, e);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SendFailedException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"消息发送失败"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.65,words:2595},title:"消息丢失、重复、乱序问题及解决方案：构建可靠消息队列系统的关键技术",type:"article"}}],["/posts/mq/4-4-idempotency-design.html",{loader:()=>y(()=>import("./4-4-idempotency-design.html-C4KgOrgR.js"),__vite__mapDeps([93,1])),meta:{date:1756512e6,category:["MQ"],tag:["mq"],excerpt:`<p>幂等性（Idempotence）是分布式系统设计中的一个重要概念，指的是一个操作无论执行多少次，其结果都是一样的。在消息队列系统中，幂等性设计是解决消息重复问题的核心技术，确保即使在消息重复投递的情况下，业务逻辑也能正确执行。本文将深入探讨幂等性设计的原理、实现方式、最佳实践以及在消息队列系统中的应用。</p>
<h2>幂等性概念解析</h2>
<h3>幂等性的数学定义</h3>
<p>在数学中，幂等性指的是一个元素在特定运算下，无论执行多少次该运算，结果都不变。例如，对于函数f(x)，如果f(f(x)) = f(x)，则称f为幂等函数。</p>
<h3>分布式系统中的幂等性</h3>
`,readingTime:{minutes:9.51,words:2854},title:"幂等性设计详解：构建可靠分布式系统的必备技术",type:"article"}}],["/posts/mq/",{loader:()=>y(()=>import("./index.html-D-y90OcF.js"),__vite__mapDeps([94,1])),meta:{date:1756740404e3,excerpt:`
<p>本文档索引了《消息队列：从入门到精通》系列文章，方便读者按章节顺序查阅。</p>
<h2>第一部分 基础篇：打好地基</h2>
<h3>第1章 为什么需要消息队列？</h3>
<ol>
<li><a href="/blog-middleware/posts/mq/1-1-why-message-queues.html" target="_blank">为什么需要消息队列？系统间通信的核心技术解析</a></li>
<li><a href="/blog-middleware/posts/mq/1-2-system-communication-comparison.html" target="_blank">系统间通信方式对比：同步调用 vs 异步调用的深度解析</a></li>
<li><a href="/blog-middleware/posts/mq/1-3-mq-benefits-risks.html" target="_blank">MQ的优势与风险：构建可靠分布式系统的双刃剑</a></li>
</ol>`,readingTime:{minutes:1.7,words:511},title:"消息队列：从入门到精通 - 文章索引",type:"article"}}],["/posts/mq/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-Dqj8nnbf.js"),__vite__mapDeps([95,1])),meta:{date:1756738619e3,excerpt:`
<h2><strong>第一部分 基础篇：打好地基</strong></h2>
<ol>
<li>
<p><strong>为什么需要消息队列？</strong></p>
<ul>
<li>系统间通信方式对比（同步调用 vs 异步调用）</li>
<li>解耦、异步、削峰填谷</li>
<li>MQ 的优势与风险</li>
</ul>
</li>
<li>
<p><strong>消息队列的基本概念</strong></p>
<ul>
<li>消息、队列、主题、消费者</li>
<li>点对点模型 vs 发布订阅模型</li>
<li>Push vs Pull 消费模式</li>
</ul>
</li>
<li>
<p><strong>消息队列的核心要素</strong></p>
<ul>
<li>生产者、Broker、消费者</li>
<li>消息持久化</li>
<li>消费确认与重试机制</li>
</ul>
</li>
<li>
<p><strong>消息可靠性与一致性</strong></p>
<ul>
<li>至少一次、至多一次、精确一次</li>
<li>消息丢失、重复、乱序问题</li>
<li>幂等性设计</li>
</ul>
</li>
</ol>`,readingTime:{minutes:3.14,words:941},title:"《消息队列：从入门到精通》目录",type:"article"}}],["/posts/register-center/1-1-1-evolution-from-monolith-to-microservices.html",{loader:()=>y(()=>import("./1-1-1-evolution-from-monolith-to-microservices.html-DvYtl5xj.js"),__vite__mapDeps([96,1])),meta:{date:17567712e5,category:["RegisterCenter"],tag:["register-center","microservices"],excerpt:`<p>在软件架构的发展历程中，从单体架构到微服务架构的演进是一个重要的转折点。理解这一演进过程有助于我们更好地认识为什么需要服务注册与配置中心。本章将深入探讨单体架构的局限性、微服务架构的优势以及架构演进的驱动力。</p>
<h2>单体架构的特点与局限</h2>
<p>单体架构（Monolithic Architecture）是传统的软件架构模式，整个应用程序作为一个单一的单元进行开发、部署和运行。</p>
<h3>单体架构的优势</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 单体架构示例</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MonolithicApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MonolithicApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, args);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 用户管理模块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RestController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"/users"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 用户相关API</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 订单管理模块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RestController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"/orders"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 订单相关API</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 支付管理模块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RestController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"/payments"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PaymentController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 支付相关API</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 库存管理模块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RestController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"/inventory"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> InventoryController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 库存相关API</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.33,words:2500},title:"单体到微服务的演进",type:"article"}}],["/posts/register-center/1-2-1-service-registration-discovery-and-heartbeat.html",{loader:()=>y(()=>import("./1-2-1-service-registration-discovery-and-heartbeat.html-CeDcBEq3.js"),__vite__mapDeps([97,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center","service-discovery","heartbeat"],excerpt:`<p>在微服务架构中，服务注册与发现是实现服务间通信的基础。当服务实例启动时，它们需要向注册中心注册自己的信息；当其他服务需要调用它们时，需要从注册中心获取可用的服务实例列表。同时，为了确保注册信息的准确性，还需要通过心跳机制来检测服务实例的健康状态。本章将深入探讨服务注册、发现和心跳机制的实现原理。</p>
<h2>服务注册机制</h2>
<p>服务注册是微服务架构中的第一步，当服务实例启动时，它需要向注册中心注册自己的元数据信息，包括IP地址、端口号、服务名称、协议类型等。</p>
<h3>注册信息的组成</h3>
<p>一个完整的服务注册信息通常包含以下内容：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 服务实例信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serviceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 服务ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             // 主机地址</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 端口号</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           // 协议类型 (HTTP/HTTPS)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 元数据信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> registerTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       // 注册时间</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 是否启用</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> healthy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 健康状态</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 构造函数、getter和setter方法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serviceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">serviceId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> serviceId;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">host</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> host;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">port</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> port;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "http"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">registerTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">healthy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // ... 其他方法</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.97,words:2991},title:"服务注册、发现与心跳机制详解",type:"article"}}],["/posts/register-center/2-1-minimal-viable-registry.html",{loader:()=>y(()=>import("./2-1-minimal-viable-registry.html-DyGJ5MYy.js"),__vite__mapDeps([98,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在理解了服务注册中心的基本原理后，我们来动手实现一个最小可用的注册中心。通过这个实践项目，我们将深入理解注册中心的核心机制，并为后续学习主流框架打下坚实基础。</p>
<h2>用内存 Map 实现服务注册与发现</h2>
<p>我们将使用内存中的数据结构来存储服务实例信息，这是最简单的实现方式。核心数据结构可以定义如下：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 服务实例信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serviceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 服务ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 主机地址</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 端口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> registerTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   // 注册时间</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getter和setter方法</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 注册中心核心类</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SimpleRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 使用ConcurrentHashMap存储服务实例信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // key: 服务名称, value: 该服务的所有实例列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serviceRegistry </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 注册服务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> register</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serviceName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        serviceRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">computeIfAbsent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(serviceName, k </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(instance);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 发现服务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> discover</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serviceName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> serviceRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getOrDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(serviceName, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 注销服务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> deregister</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serviceName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">instances</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> serviceRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(serviceName);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (instances </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(instance);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.22,words:967},title:"最小可用注册中心",type:"article"}}],["/posts/register-center/2-2-config-center-prototype.html",{loader:()=>y(()=>import("./2-2-config-center-prototype.html-V62kx3Un.js"),__vite__mapDeps([99,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在上一节中，我们实现了一个最小可用的注册中心。现在，我们来构建一个配置中心的雏形，进一步理解配置中心的核心机制。</p>
<h2>JSON/YAML 存储与文件分发</h2>
<p>配置中心需要能够存储和管理各种格式的配置信息。我们将使用JSON和YAML两种常见的配置格式来演示：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 配置信息类</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> configId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 配置ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       // 配置内容</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 配置格式 (JSON/YAML)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 配置版本</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> updateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 更新时间</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getter和setter方法</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 配置中心核心类</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SimpleConfigCenter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 使用ConcurrentHashMap存储配置信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> configStore </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 存储配置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> configId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ConfigInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ConfigInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setConfigId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(configId);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setContent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(content);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setFormat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(format);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUpdateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        configStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(configId, config);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取配置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigInfo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> configId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> configStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(configId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 删除配置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> deleteConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> configId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        configStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(configId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.69,words:1106},title:"配置中心雏形",type:"article"}}],["/posts/register-center/2-3-persistence-and-high-availability-design.html",{loader:()=>y(()=>import("./2-3-persistence-and-high-availability-design.html-B00thb4j.js"),__vite__mapDeps([100,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在前两节中，我们分别实现了最小可用的注册中心和配置中心雏形。然而，这些实现都基于内存存储，存在数据丢失的风险。在生产环境中，我们需要考虑数据的持久化和系统的高可用性。本节将探讨如何为注册与配置中心设计持久化和高可用方案。</p>
<h2>数据持久化到文件/数据库</h2>
<h3>文件持久化</h3>
<p>对于简单的场景，我们可以将数据持久化到文件系统中：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 数据持久化管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PersistenceManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dataDir </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "./data/"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 将注册中心数据持久化到文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> persistRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Path</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Paths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dataDir, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"registry.json"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> json</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Gson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toJson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(registry);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 从文件恢复注册中心数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> restoreRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Path</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Paths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dataDir, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"registry.json"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path)) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> json</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readAllBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Type</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TypeToken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ServiceInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt;(){}.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Gson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fromJson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(json, type);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 将配置中心数据持久化到文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> persistConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConfigInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">configStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Path</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Paths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dataDir, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"config.json"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> json</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Gson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toJson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(configStore);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 从文件恢复配置中心数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> restoreConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Path</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Paths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dataDir, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"config.json"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path)) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> json</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readAllBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Type</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TypeToken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConfigInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(){}.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Gson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fromJson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(json, type);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.8,words:1439},title:"持久化与高可用设计",type:"article"}}],["/posts/register-center/3-1-zookeeper.html",{loader:()=>y(()=>import("./3-1-zookeeper.html-CtxZkahI.js"),__vite__mapDeps([101,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>ZooKeeper是Apache的一个开源项目，它是一个分布式的、开源的协调服务，用于维护配置信息、命名、提供分布式同步和组服务。在微服务架构中，ZooKeeper常被用作服务注册中心。</p>
<h2>数据模型（ZNode）</h2>
<p>ZooKeeper的数据模型基于ZNode（ZooKeeper Node）的概念，这是一种层次化的命名空间，类似于文件系统的目录结构：</p>
<ol>
<li>
<p><strong>ZNode类型</strong>：</p>
<ul>
<li><strong>持久节点（Persistent）</strong>：创建后会一直存在，直到被显式删除</li>
<li><strong>临时节点（Ephemeral）</strong>：与客户端会话绑定，会话结束时自动删除</li>
<li><strong>顺序节点（Sequential）</strong>：创建时会在节点名后自动追加一个单调递增的数字</li>
</ul>
</li>
<li>
<p><strong>ZNode结构</strong>：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>/</span></span>
<span class="line"><span>├── dubbo</span></span>
<span class="line"><span>│   ├── com.example.DemoService</span></span>
<span class="line"><span>│   │   ├── providers</span></span>
<span class="line"><span>│   │   ├── consumers</span></span>
<span class="line"><span>│   │   └── configurators</span></span>
<span class="line"><span>│   └── com.example.AnotherService</span></span>
<span class="line"><span>└── config</span></span>
<span class="line"><span>    └── app1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>ZNode存储</strong>：<br>
每个ZNode可以存储数据（最大1MB），同时维护一些元数据，如版本号、ACL信息等。</p>
</li>
</ol>`,readingTime:{minutes:3.54,words:1062},title:"Zookeeper",type:"article"}}],["/posts/register-center/3-2-eureka.html",{loader:()=>y(()=>import("./3-2-eureka.html-B8WRPulN.js"),__vite__mapDeps([102,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>Eureka是Netflix开源的服务发现组件，是Spring Cloud生态系统中的核心组件之一。它专为微服务架构设计，提供了服务注册与发现的功能。</p>
<h2>Netflix OSS 的设计理念</h2>
<p>Netflix OSS（Open Source Software）是一套构建高可用、可扩展的分布式系统的工具集。Eureka作为其中的重要组件，体现了Netflix的设计理念：</p>
<h3>优先保证可用性</h3>
<p>Eureka遵循AP原则（可用性和分区容忍性），在网络分区或节点故障时，仍能提供服务发现功能。这种设计理念特别适合云环境，因为在云环境中网络问题较为常见。</p>`,readingTime:{minutes:4.21,words:1262},title:"Eureka",type:"article"}}],["/posts/register-center/3-3-consul.html",{loader:()=>y(()=>import("./3-3-consul.html-DEzGzPA4.js"),__vite__mapDeps([103,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>Consul是HashiCorp公司开源的一个服务发现和配置管理工具，它基于Go语言开发，具有跨平台、高可用、分布式的特点。Consul不仅支持服务注册与发现，还提供了健康检查、键值存储、多数据中心等丰富功能。</p>
<h2>架构与 Gossip 协议</h2>
<p>Consul采用分布式架构，由多个节点组成集群，每个节点都可以处理请求。Consul的核心是其使用的Gossip协议，这是一种去中心化的通信协议。</p>
<h3>Consul架构</h3>
<p>Consul集群中的节点分为三种类型：</p>
<ol>
<li><strong>Client节点</strong>：无状态节点，负责转发请求到Server节点，维护服务信息的本地缓存</li>
<li><strong>Server节点</strong>：有状态节点，参与Raft一致性协议，维护集群状态</li>
<li><strong>Leader节点</strong>：从Server节点中选举产生，负责处理写操作</li>
</ol>`,readingTime:{minutes:4.3,words:1291},title:"Consul",type:"article"}}],["/posts/register-center/3-4-nacos.html",{loader:()=>y(()=>import("./3-4-nacos.html-DZ2dQKZ2.js"),__vite__mapDeps([104,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>Nacos（Dynamic Naming and Configuration Service）是阿里巴巴开源的一个易于构建云原生应用的动态服务发现、配置管理和服务管理平台。它集成了服务注册与发现、配置管理、服务管理等功能，是Spring Cloud Alibaba生态中的核心组件。</p>
<h2>同时支持注册中心与配置中心</h2>
<p>Nacos最大的特点之一是同时支持服务注册与配置管理，这使得开发者只需要部署和维护一个组件就能满足微服务架构中的多种需求。</p>
<h3>服务注册与发现</h3>
<p>Nacos的服务注册与发现功能与Eureka类似，但提供了更多的特性和更好的性能：</p>`,readingTime:{minutes:4.46,words:1337},title:"Nacos",type:"article"}}],["/posts/register-center/3-5-1-apollo-namespace-cluster-model.html",{loader:()=>y(()=>import("./3-5-1-apollo-namespace-cluster-model.html-BZIo2bQs.js"),__vite__mapDeps([105,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center","apollo"],excerpt:`<p>Apollo作为携程开源的配置管理中心，其核心特性之一就是灵活的配置管理模型。通过Namespace和Cluster的层次化组织方式，Apollo能够满足复杂企业环境下的配置管理需求。本章将深入探讨Apollo的配置管理模型，包括Namespace的设计理念、Cluster的应用场景以及如何通过它们实现精细化的配置管理。</p>
<h2>Namespace（命名空间）详解</h2>
<p>Namespace是Apollo中配置的逻辑分组，它提供了一种将相关配置项组织在一起的机制。通过Namespace，我们可以实现配置的模块化管理，提高配置的可维护性和可复用性。</p>
<h3>Namespace的类型</h3>`,readingTime:{minutes:7.06,words:2118},title:"Apollo配置管理模型（Namespace、Cluster）",type:"article"}}],["/posts/register-center/3-5-2-apollo-config-publishing-and-gray-release.html",{loader:()=>y(()=>import("./3-5-2-apollo-config-publishing-and-gray-release.html-KSBcHvVm.js"),__vite__mapDeps([106,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center","apollo"],excerpt:`<p>Apollo作为企业级配置管理中心，提供了完善的配置发布流程和灵活的灰度发布机制。这些特性确保了配置变更的安全性和可控性，降低了因配置错误导致的业务风险。本章将深入探讨Apollo的配置发布流程和灰度发布机制，帮助读者掌握如何在生产环境中安全地进行配置管理。</p>
<h2>Apollo配置发布流程详解</h2>
<p>Apollo的配置发布流程设计严谨，包含多个环节以确保配置变更的安全性和准确性。整个流程从配置编辑到最终生效，都提供了完善的控制和审计机制。</p>
<h3>配置发布的核心组件</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 配置发布核心组件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigPublishingSystem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置草稿管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigDraftManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> draftManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置审核管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigReviewManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> reviewManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置发布管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigReleaseManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> releaseManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置推送管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigPushManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> pushManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置审计管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConfigAuditManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> auditManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.34,words:3101},title:"Apollo配置发布流程与灰度发布",type:"article"}}],["/posts/register-center/3-5-3-apollo-client-cache-and-rollback.html",{loader:()=>y(()=>import("./3-5-3-apollo-client-cache-and-rollback.html-DPWtvQxq.js"),__vite__mapDeps([107,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center","apollo"],excerpt:`<p>Apollo作为企业级配置管理中心，其客户端缓存和回滚机制是保障系统高可用性和稳定性的关键特性。通过多层缓存机制，Apollo客户端能够在网络不稳定或配置中心不可用时继续提供配置服务；而完善的回滚机制则确保在配置变更出现问题时能够快速恢复到稳定状态。本章将深入探讨Apollo客户端的缓存策略和回滚机制。</p>
<h2>Apollo客户端缓存机制详解</h2>
<p>Apollo客户端采用了多层缓存机制来确保配置服务的高可用性和性能。这种设计不仅提高了系统的响应速度，还增强了在异常情况下的容错能力。</p>
<h3>三级缓存架构</h3>
<p>Apollo客户端实现了三级缓存架构，分别是内存缓存、文件缓存和远程缓存：</p>`,readingTime:{minutes:11.31,words:3394},title:"Apollo客户端缓存与回滚机制",type:"article"}}],["/posts/register-center/3-5-4-apollo-enterprise-best-practices.html",{loader:()=>y(()=>import("./3-5-4-apollo-enterprise-best-practices.html-CphMb3fL.js"),__vite__mapDeps([108,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center","apollo"],excerpt:`<p>Apollo作为企业级配置管理中心，在实际应用中需要遵循一系列最佳实践，以确保系统的稳定性、安全性和可维护性。本章将深入探讨Apollo在企业环境中的部署策略、权限管理、监控告警、性能优化等方面的最佳实践，帮助读者构建高可用的配置管理体系。</p>
<h2>Apollo部署架构最佳实践</h2>
<p>在企业环境中部署Apollo时，需要根据业务规模和可用性要求设计合理的架构方案。</p>
<h3>高可用部署架构</h3>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Apollo高可用部署架构</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 生产环境推荐的三数据中心部署方案</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 数据中心1 (主数据中心)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">datacenter-1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # Config Service (至少2个实例)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  config-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">config-1.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">config-2.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    load-balancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">lb-config.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # Admin Service (至少2个实例)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  admin-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">admin-1.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8090</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">admin-2.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8090</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    load-balancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">lb-admin.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # Portal (至少2个实例)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  portal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">portal-1.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8070</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">portal-2.dc1.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8070</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    load-balancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">lb-portal.dc1.company.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 数据中心2 (灾备数据中心)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">datacenter-2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  config-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">config-1.dc2.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  admin-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">admin-1.dc2.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8090</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  portal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">portal-1.dc2.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8070</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 数据中心3 (灾备数据中心)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">datacenter-3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  config-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">config-1.dc3.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  admin-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    instances</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">admin-1.dc3.company.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8090</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:13.1,words:3929},title:"Apollo企业级最佳实践",type:"article"}}],["/posts/register-center/4-1-service-discovery-patterns.html",{loader:()=>y(()=>import("./4-1-service-discovery-patterns.html-CiOgpltA.js"),__vite__mapDeps([109,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>服务发现是微服务架构中的核心组件，它解决了服务实例动态变化时如何定位服务的问题。随着技术的发展，服务发现模式也在不断演进，从最初简单的客户端发现到现代的服务网格模式。本章将深入探讨各种服务发现模式的原理、优缺点和适用场景。</p>
<h2>客户端发现 vs 服务端发现</h2>
<p>服务发现模式主要分为客户端发现和服务端发现两种，它们在实现方式和适用场景上有显著差异。</p>
<h3>客户端发现（Client-Side Discovery）</h3>
<p>在客户端发现模式中，客户端负责从服务注册中心获取服务实例列表，并根据负载均衡策略选择一个实例进行调用。</p>
<h4>工作原理</h4>`,readingTime:{minutes:6.57,words:1972},title:"服务发现模式",type:"article"}}],["/posts/register-center/4-2-config-center-advanced-features.html",{loader:()=>y(()=>import("./4-2-config-center-advanced-features.html-Dd909GeE.js"),__vite__mapDeps([110,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>配置中心作为微服务架构中的重要组件，不仅要提供基本的配置存储和分发功能，还需要具备一系列高级特性来满足企业级应用的需求。本章将深入探讨配置中心的高级特性，包括配置加密、灰度发布、多环境隔离、变更审计和回滚等。</p>
<h2>配置加密与安全管控</h2>
<p>在企业级应用中，配置信息往往包含敏感数据，如数据库密码、API密钥等。配置中心需要提供完善的加密和安全管控机制来保护这些敏感信息。</p>
<h3>配置加密</h3>
<p>配置中心通常提供两种加密方式：</p>
<ol>
<li><strong>传输加密</strong>：通过HTTPS等安全协议保护配置在传输过程中的安全</li>
<li><strong>存储加密</strong>：对存储在配置中心的敏感配置进行加密</li>
</ol>`,readingTime:{minutes:5.56,words:1669},title:"配置中心高级特性",type:"article"}}],["/posts/register-center/4-3-consistency-and-high-availability.html",{loader:()=>y(()=>import("./4-3-consistency-and-high-availability.html-Dhs7c8Ca.js"),__vite__mapDeps([111,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在分布式系统中，一致性和高可用性是两个核心挑战。服务注册与配置中心作为微服务架构的关键组件，必须在这两个方面做出合理的权衡和设计。本章将深入探讨Raft/Paxos算法在注册中心中的应用、Leader选举实现以及多副本数据同步等关键技术。</p>
<h2>Raft / Paxos 在注册中心中的应用</h2>
<p>Raft和Paxos是两种著名的分布式一致性算法，它们在注册中心中发挥着重要作用。</p>
<h3>Raft算法</h3>
<p>Raft算法通过将复杂的分布式一致性问题分解为三个相对独立的子问题来简化理解和实现：</p>
<ol>
<li><strong>Leader选举</strong>：选出集群中的领导者节点</li>
<li><strong>日志复制</strong>：领导者将日志条目复制到其他节点</li>
<li><strong>安全性</strong>：确保状态机的安全性</li>
</ol>`,readingTime:{minutes:5.45,words:1635},title:"一致性与高可用",type:"article"}}],["/posts/register-center/4-4-performance-and-scalability-optimization.html",{loader:()=>y(()=>import("./4-4-performance-and-scalability-optimization.html-C6TiaSbQ.js"),__vite__mapDeps([112,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>随着微服务架构的普及，服务注册与配置中心面临着越来越多的服务实例和配置项。如何优化性能和扩展性，成为了注册中心设计和运维中的关键问题。本章将深入探讨长连接与推送优化、大规模服务实例的存储与查询、跨地域多集群部署等关键技术。</p>
<h2>长连接与推送优化</h2>
<p>长连接和推送机制是注册中心实现实时性的关键技术，但不当的设计可能导致性能问题。</p>
<h3>长连接管理</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 长连接管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConnectionManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 使用ConcurrentHashMap存储连接，支持高并发访问</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ClientConnection</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> connections </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 连接统计信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtomicLong</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> totalConnections </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AtomicLong</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtomicLong</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> activeConnections </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AtomicLong</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 添加连接</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> addConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> clientId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ClientConnection</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        connections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(clientId, connection);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        totalConnections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        activeConnections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 设置连接超时监听</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setCloseListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(clientId));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 移除连接</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> clientId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ClientConnection</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> removed</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> connections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(clientId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (removed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            activeConnections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            removed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取连接数统计</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConnectionStats</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getStats</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ConnectionStats</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">totalConnections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">activeConnections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 客户端连接抽象</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> abstract</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ClientConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> clientId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> connectTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CloseListener</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> closeListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> abstract</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> abstract</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setCloseListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CloseListener</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> listener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">closeListener</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> listener;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">FunctionalInterface</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CloseListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onClose</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:7.46,words:2237},title:"性能与扩展性优化",type:"article"}}],["/posts/register-center/5-1-service-registry-and-config-center-in-e-commerce.html",{loader:()=>y(()=>import("./5-1-service-registry-and-config-center-in-e-commerce.html-Dw1nQyFC.js"),__vite__mapDeps([113,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>电商系统作为典型的复杂分布式系统，对服务注册与配置中心有着极高的要求。在高并发、大流量的业务场景下，如何合理应用服务注册与配置中心，成为保障系统稳定性和可扩展性的关键。本章将深入探讨服务注册与配置中心在电商系统中的具体应用。</p>
<h2>商品、订单、支付的调用链设计</h2>
<p>电商系统通常包含商品、订单、支付等多个核心服务，这些服务之间存在复杂的调用关系。</p>
<h3>服务架构设计</h3>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 电商系统服务架构</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 用户请求 -&gt; 网关 -&gt; 商品服务 -&gt; 订单服务 -&gt; 支付服务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 商品服务 (product-service)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">product-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8081</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">inventory-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">price-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">recommendation-service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 订单服务 (order-service)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">order-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8082</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">product-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">user-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">payment-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">inventory-service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 支付服务 (payment-service)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">payment-service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8083</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">order-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">user-service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">third-party-payment-service</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.26,words:1578},title:"服务注册与配置中心在电商系统中的应用",type:"article"}}],["/posts/register-center/5-2-enterprise-best-practices.html",{loader:()=>y(()=>import("./5-2-enterprise-best-practices.html-CMyIE4Fv.js"),__vite__mapDeps([114,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在企业级应用中，服务注册与配置中心的选择和使用需要考虑多个维度的因素，包括技术选型、集成策略、运维管理等。本章将深入探讨如何选择合适的注册/配置中心、与CI/CD和灰度发布集成、以及与Kubernetes的结合等企业级最佳实践。</p>
<h2>如何选择合适的注册/配置中心</h2>
<p>选择合适的注册/配置中心是构建稳定微服务架构的第一步。需要从多个维度进行综合评估。</p>
<h3>功能特性对比</h3>
<table>
<thead>
<tr>
<th>特性</th>
<th>ZooKeeper</th>
<th>Eureka</th>
<th>Consul</th>
<th>Nacos</th>
<th>Apollo</th>
</tr>
</thead>
<tbody>
<tr>
<td>服务发现</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
<td>✗</td>
</tr>
<tr>
<td>配置管理</td>
<td>基础</td>
<td>✗</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>健康检查</td>
<td>客户端</td>
<td>心跳</td>
<td>多种方式</td>
<td>心跳</td>
<td>心跳</td>
</tr>
<tr>
<td>一致性</td>
<td>CP</td>
<td>AP</td>
<td>CP/CA</td>
<td>CP/AP</td>
<td>CP</td>
</tr>
<tr>
<td>多语言支持</td>
<td>客户端限制</td>
<td>多语言</td>
<td>多语言</td>
<td>多语言</td>
<td>Java为主</td>
</tr>
<tr>
<td>运维复杂度</td>
<td>高</td>
<td>低</td>
<td>中</td>
<td>中</td>
<td>中</td>
</tr>
<tr>
<td>社区活跃度</td>
<td>高</td>
<td>中</td>
<td>高</td>
<td>高</td>
<td>高</td>
</tr>
</tbody>
</table>`,readingTime:{minutes:8.25,words:2475},title:"企业级最佳实践",type:"article"}}],["/posts/register-center/5-3-monitoring-and-operations.html",{loader:()=>y(()=>import("./5-3-monitoring-and-operations.html-CFnigYiA.js"),__vite__mapDeps([115,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在生产环境中，服务注册与配置中心的稳定运行至关重要。建立完善的监控体系和运维工具链，能够及时发现和处理问题，保障系统的高可用性。本章将深入探讨指标采集、日志管理、告警机制以及自动化运维工具链等监控与运维关键技术。</p>
<h2>指标采集（QPS、延迟、可用率）</h2>
<p>指标采集是监控体系的基础，通过收集关键性能指标，可以全面了解注册中心的运行状态。</p>
<h3>核心指标定义</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 注册中心核心指标</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RegistryMetrics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 服务注册相关指标</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERVICE_REGISTER_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.service.register.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERVICE_REGISTER_LATENCY </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.service.register.latency"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERVICE_REGISTER_ERROR_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.service.register.error.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 服务发现相关指标</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERVICE_DISCOVERY_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.service.discovery.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERVICE_DISCOVERY_LATENCY </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.service.discovery.latency"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERVICE_DISCOVERY_ERROR_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.service.discovery.error.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 配置管理相关指标</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> CONFIG_PUBLISH_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.config.publish.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> CONFIG_PUBLISH_LATENCY </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.config.publish.latency"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> CONFIG_QUERY_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.config.query.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> CONFIG_QUERY_LATENCY </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.config.query.latency"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 系统健康相关指标</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SYSTEM_CPU_USAGE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.system.cpu.usage"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SYSTEM_MEMORY_USAGE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.system.memory.usage"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SYSTEM_DISK_USAGE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.system.disk.usage"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SYSTEM_GC_COUNT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.system.gc.count"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SYSTEM_GC_TIME </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "registry.system.gc.time"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.12,words:3037},title:"监控与运维",type:"article"}}],["/posts/register-center/6-1-cloud-native-and-service-mesh.html",{loader:()=>y(()=>import("./6-1-cloud-native-and-service-mesh.html-CZFnaPki.js"),__vite__mapDeps([116,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>随着云原生技术的快速发展，微服务架构正在经历深刻的变革。Service Mesh作为新一代微服务架构的重要组成部分，正在重新定义服务间通信和服务治理的方式。本章将深入探讨Service Mesh如何弱化传统注册中心的作用，Istio/Envoy的服务发现机制，以及配置下沉到Sidecar等前沿技术趋势。</p>
<h2>为什么 Service Mesh 弱化了注册中心？</h2>
<p>Service Mesh的出现标志着微服务架构演进的一个重要转折点。它通过将服务治理能力从应用层下沉到基础设施层，改变了我们对传统注册中心的依赖。</p>
<h3>传统微服务架构的挑战</h3>
<p>在传统的微服务架构中，服务注册与发现通常依赖于独立的注册中心组件：</p>`,readingTime:{minutes:8.28,words:2485},title:"云原生与 Service Mesh",type:"article"}}],["/posts/register-center/6-2-configuration-as-code.html",{loader:()=>y(()=>import("./6-2-configuration-as-code.html-DCivZhJc.js"),__vite__mapDeps([117,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>在现代软件开发和运维实践中，"配置即代码"（Configuration as Code，简称CaC）已经成为一种重要的方法论。它将配置管理提升到了与应用程序代码同等重要的地位，通过版本控制、自动化和声明式管理来提高系统的可靠性、可重复性和可维护性。本章将深入探讨GitOps与配置中心的结合，以及声明式配置管理等前沿实践。</p>
<h2>GitOps 与配置中心结合</h2>
<p>GitOps是一种运维框架，它将Git作为基础设施和应用程序配置的单一事实来源。当与配置中心结合时，可以实现更加健壮和自动化的配置管理流程。</p>
<h3>GitOps核心理念</h3>
<p>GitOps基于以下核心原则：</p>`,readingTime:{minutes:7.99,words:2396},title:"配置即代码（Configuration as Code）",type:"article"}}],["/posts/register-center/6-3-summary-and-learning-path.html",{loader:()=>y(()=>import("./6-3-summary-and-learning-path.html-CgsUkSBE.js"),__vite__mapDeps([118,1])),meta:{date:17566848e5,category:["RegisterCenter"],tag:["register-center"],excerpt:`<p>经过前面章节的深入探讨，我们全面了解了服务注册与配置中心从基础概念到高级特性的完整知识体系。本章将对全书内容进行总结，并为读者提供一条清晰的学习路径，帮助大家从初学者成长为架构师。</p>
<h2>从入门到精通的进阶路线</h2>
<p>学习服务注册与配置中心需要循序渐进，按照以下路线逐步深入：</p>
<h3>第一阶段：基础概念掌握</h3>
<p><strong>目标</strong>：理解服务注册与配置中心的基本概念和工作原理</p>
<p><strong>学习内容</strong>：</p>
<ol>
<li>微服务架构演进历程</li>
<li>服务注册中心的基本原理（服务注册、发现、心跳机制）</li>
<li>配置中心的基本原理（配置存储、推送、热更新）</li>
<li>CAP理论在注册与配置中心中的应用</li>
</ol>`,readingTime:{minutes:8.49,words:2547},title:"总结与学习路径",type:"article"}}],["/posts/register-center/",{loader:()=>y(()=>import("./index.html-CBCL5PZ8.js"),__vite__mapDeps([119,1])),meta:{date:1756740404e3,excerpt:`
<p>这是一本关于服务注册与配置中心的完整技术书籍，涵盖了从基础概念到高级特性的全面内容。</p>
<h2>目录</h2>
<h3>第一部分 基础篇：打好地基</h3>
<ol>
<li><a href="/blog-middleware/posts/register-center/1-1-1-evolution-from-monolith-to-microservices.html" target="_blank">单体到微服务的演进</a></li>
<li><a href="/blog-middleware/posts/register-center/1-2-service-registry-basic-principles.html" target="_blank">服务注册中心的基本原理</a></li>
<li><a href="/blog-middleware/posts/register-center/1-3-config-center-basic-principles.html" target="_blank">配置中心的基本原理</a></li>
<li><a href="/blog-middleware/posts/register-center/1-4-cap-theory-and-consistency-model.html" target="_blank">CAP 理论与一致性模型</a></li>
</ol>`,readingTime:{minutes:1.99,words:597},title:"服务注册与配置中心：从入门到精通",type:"article"}}],["/posts/register-center/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-DYwsBftR.js"),__vite__mapDeps([120,1])),meta:{date:1756738619e3,excerpt:`<p>👌 很棒的选题！<br>
<strong>服务注册与配置中心</strong> 是微服务的 <strong>大脑</strong>：注册中心负责“服务发现”，配置中心负责“动态配置”。要写一本从入门到精通的书，可以分成 <strong>基础概念 → 原理实现 → 主流框架 → 高级特性 → 落地实践 → 未来趋势</strong> 六大块。</p>
<p>下面是详细的书籍目录：</p>
<hr>
<h1><strong>《服务注册与配置中心：从入门到精通》目录</strong></h1>
<h2><strong>第一部分 基础篇：打好地基</strong></h2>
<ol>
<li>
<p><strong>为什么需要注册与配置中心？</strong></p>
<ul>
<li>单体到微服务的演进</li>
<li>IP/端口硬编码的问题</li>
<li>配置中心 vs 注册中心的区别与联系</li>
<li>手工维护配置/服务列表的痛点</li>
</ul>
</li>
<li>
<p><strong>服务注册中心的基本原理</strong></p>
<ul>
<li>服务注册、服务发现、心跳机制</li>
<li>临时节点 vs 永久节点</li>
<li>客户端缓存与订阅模型</li>
</ul>
</li>
<li>
<p><strong>配置中心的基本原理</strong></p>
<ul>
<li>配置存储与推送</li>
<li>本地缓存与热更新</li>
<li>配置生效方式（推/拉模型）</li>
</ul>
</li>
<li>
<p><strong>CAP 理论与一致性模型</strong></p>
<ul>
<li>CAP 定理与微服务系统的取舍</li>
<li>一致性、可用性、分区容忍性</li>
<li>注册中心和配置中心的 CAP 选择</li>
</ul>
</li>
</ol>`,readingTime:{minutes:3.86,words:1157},title:"《服务注册与配置中心：从入门到精通》目录",type:"article"}}],["/posts/rpc/1-1-what-is-rpc.html",{loader:()=>y(()=>import("./1-1-what-is-rpc.html-Dj2q_0x_.js"),__vite__mapDeps([121,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在分布式系统日益普及的今天，远程过程调用（RPC）已成为构建现代应用程序不可或缺的技术。RPC 允许程序调用另一个地址空间（通常是网络上的另一台机器）的过程或函数，就像调用本地函数一样简单。这种透明性极大地简化了分布式系统的开发复杂性。</p>
<h2>RPC 的定义与作用</h2>
<p>RPC（Remote Procedure Call）即远程过程调用，是一种计算机通信协议。它允许运行在一个计算机上的程序调用另一个地址空间（通常是在网络上的另一台计算机上）的过程或函数，而程序员无需过多关注底层网络通信的细节。</p>
<p>RPC 的核心思想是让远程服务调用看起来像本地函数调用一样简单。开发者可以像调用本地方法一样调用远程服务，而不需要关心网络传输、数据序列化等复杂问题。</p>`,readingTime:{minutes:4.92,words:1475},title:"什么是 RPC？",type:"article"}}],["/posts/rpc/1-2-rpc-vs-local-call.html",{loader:()=>y(()=>import("./1-2-rpc-vs-local-call.html-DCvnH9O_.js"),__vite__mapDeps([122,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在软件开发中，理解 RPC（远程过程调用）与本地调用之间的差异对于构建高效、可靠的分布式系统至关重要。虽然两者在编程接口上看起来相似，但在实现机制、性能特征和可靠性方面存在显著差异。</p>
<h2>执行环境的根本差异</h2>
<h3>内存模型差异</h3>
<p>本地调用发生在同一进程内，所有数据共享同一块内存空间。函数调用直接通过栈指针操作，参数传递通过栈或寄存器完成，速度极快。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 本地调用示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Processed: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> input;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 调用</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> service </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LocalService</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"data"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.11,words:1534},title:"RPC 与本地调用的区别",type:"article"}}],["/posts/rpc/1-3-rpc-vs-rest-vs-grpc.html",{loader:()=>y(()=>import("./1-3-rpc-vs-rest-vs-grpc.html-Bn8SAbJ3.js"),__vite__mapDeps([123,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在现代分布式系统中，选择合适的通信协议对于系统性能、可维护性和开发效率至关重要。RPC、REST 和 gRPC 是三种主流的通信方式，每种都有其独特的优势和适用场景。本文将深入对比这三种技术，帮助开发者在实际项目中做出明智的选择。</p>
<h2>RPC（Remote Procedure Call）</h2>
<h3>定义与特点</h3>
<p>RPC 是一种协议，允许程序调用另一个地址空间（通常是网络上的另一台机器）的过程或函数，就像调用本地函数一样。RPC 的核心思想是隐藏网络通信的复杂性，让远程调用看起来像本地调用。</p>
<h3>优势</h3>
<ol>
<li><strong>透明性</strong>：开发者可以像调用本地方法一样调用远程服务</li>
<li><strong>性能</strong>：通常比 REST 更高效，特别是使用二进制协议时</li>
<li><strong>强类型接口</strong>：通过 IDL（接口定义语言）定义明确的接口</li>
<li><strong>丰富的生态系统</strong>：有成熟的框架如 Dubbo、Thrift 等</li>
</ol>`,readingTime:{minutes:6.64,words:1992},title:"RPC vs REST vs gRPC 对比",type:"article"}}],["/posts/rpc/1-4-why-microservices-need-rpc.html",{loader:()=>y(()=>import("./1-4-why-microservices-need-rpc.html-D2KABtGY.js"),__vite__mapDeps([124,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>微服务架构已成为现代软件开发的主流趋势，它将大型单体应用拆分为多个小型、独立的服务，每个服务专注于特定的业务功能。然而，这种架构模式也带来了新的挑战，其中最重要的就是服务间的通信问题。RPC（Remote Procedure Call）作为解决这一问题的关键技术，在微服务架构中扮演着不可或缺的角色。</p>
<h2>微服务架构的核心特征</h2>
<h3>服务拆分与独立部署</h3>
<p>微服务架构将应用按照业务领域拆分为多个独立的服务，每个服务可以独立开发、测试、部署和扩展。这种拆分方式带来了显著的优势：</p>
<ol>
<li><strong>技术栈多样性</strong>：不同服务可以使用最适合的技术栈</li>
<li><strong>团队自治</strong>：每个团队可以独立负责一个或多个服务</li>
<li><strong>故障隔离</strong>：单个服务的故障不会影响整个系统</li>
<li><strong>独立扩展</strong>：可以根据业务需求独立扩展特定服务</li>
</ol>`,readingTime:{minutes:9.02,words:2707},title:"为什么微服务必须依赖 RPC",type:"article"}}],["/posts/rpc/2-1-rpc-core-components.html",{loader:()=>y(()=>import("./2-1-rpc-core-components.html-B7hJey7X.js"),__vite__mapDeps([125,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在深入理解 RPC（Remote Procedure Call）的概念之后，我们有必要详细了解其核心组成部分。RPC 系统的架构设计直接影响着其性能、可靠性以及易用性。本章将深入探讨 RPC 的核心组件，包括客户端与服务端模型、序列化与反序列化、网络通信协议以及服务发现与负载均衡等关键要素。</p>
<h2>RPC 系统架构概览</h2>
<p>一个典型的 RPC 系统由以下几个核心组件构成：</p>
<ol>
<li><strong>客户端（Client）</strong>：发起远程调用的应用程序</li>
<li><strong>客户端存根（Client Stub）</strong>：负责参数序列化和请求发送</li>
<li><strong>服务端存根（Server Stub）</strong>：负责接收请求、参数反序列化和结果返回</li>
<li><strong>服务端（Server）</strong>：实际提供服务的应用程序</li>
<li><strong>网络传输层</strong>：负责在网络中传输数据</li>
<li><strong>服务注册与发现中心</strong>：管理服务实例的注册和发现</li>
</ol>`,readingTime:{minutes:8.19,words:2456},title:"RPC 的核心组成",type:"article"}}],["/posts/rpc/2-2-client-server-model.html",{loader:()=>y(()=>import("./2-2-client-server-model.html-Bdg2_988.js"),__vite__mapDeps([126,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在 RPC（Remote Procedure Call）系统中，客户端与服务端模型是整个架构的基础。理解这两个核心组件的工作原理和交互方式，对于设计和实现高效的 RPC 系统至关重要。本章将深入探讨客户端与服务端模型的设计原理、实现机制以及最佳实践。</p>
<h2>RPC 客户端模型</h2>
<h3>客户端的核心职责</h3>
<p>RPC 客户端是远程服务调用的发起方，其核心职责包括：</p>
<ol>
<li><strong>接口代理生成</strong>：为远程服务生成本地代理对象</li>
<li><strong>参数序列化</strong>：将本地方法参数转换为可传输的格式</li>
<li><strong>请求封装</strong>：将调用信息封装成网络请求</li>
<li><strong>网络传输</strong>：通过网络将请求发送到服务端</li>
<li><strong>结果反序列化</strong>：将服务端返回的数据转换为本地对象</li>
<li><strong>异常处理</strong>：处理网络异常和服务端异常</li>
</ol>`,readingTime:{minutes:8.98,words:2694},title:"客户端与服务端模型",type:"article"}}],["/posts/rpc/2-3-serialization-deserialization.html",{loader:()=>y(()=>import("./2-3-serialization-deserialization.html-CXFaYThT.js"),__vite__mapDeps([127,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在 RPC（Remote Procedure Call）系统中，序列化与反序列化是实现网络通信的关键技术。它们负责将内存中的对象转换为可传输的字节流，以及将接收到的字节流还原为内存对象。本章将深入探讨序列化与反序列化的原理、常见实现方式以及在 RPC 系统中的应用。</p>
<h2>序列化与反序列化的基本概念</h2>
<h3>什么是序列化</h3>
<p>序列化是将对象的状态信息转换为可以存储或传输的形式的过程。在 RPC 系统中，序列化主要用于：</p>
<ol>
<li><strong>网络传输</strong>：将对象转换为字节流以便通过网络传输</li>
<li><strong>数据存储</strong>：将对象状态持久化到文件或数据库</li>
<li><strong>缓存存储</strong>：将对象存储到缓存系统中</li>
</ol>`,readingTime:{minutes:9.68,words:2905},title:"序列化与反序列化",type:"article"}}],["/posts/rpc/2-4-network-protocols.html",{loader:()=>y(()=>import("./2-4-network-protocols.html-DqWSrOVs.js"),__vite__mapDeps([128,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在 RPC（Remote Procedure Call）系统中，网络通信协议是实现服务间数据传输的基础。不同的协议在性能、可靠性、兼容性等方面各有特点，选择合适的网络通信协议对于构建高效的 RPC 系统至关重要。本章将深入探讨 RPC 系统中常用的网络通信协议及其应用。</p>
<h2>网络通信协议基础</h2>
<h3>协议分层模型</h3>
<p>网络通信协议通常遵循 OSI 七层模型或 TCP/IP 四层模型：</p>
<ol>
<li><strong>应用层</strong>：HTTP、HTTPS、gRPC 等</li>
<li><strong>传输层</strong>：TCP、UDP 等</li>
<li><strong>网络层</strong>：IP 协议</li>
<li><strong>链路层</strong>：以太网、Wi-Fi 等</li>
</ol>`,readingTime:{minutes:11.12,words:3336},title:"网络通信协议",type:"article"}}],["/posts/rpc/2-5-service-discovery-load-balancing.html",{loader:()=>y(()=>import("./2-5-service-discovery-load-balancing.html-DezAJ8z9.js"),__vite__mapDeps([129,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在现代分布式系统和微服务架构中，服务发现与负载均衡是两个至关重要的组件。随着服务数量的增加和动态变化，如何有效地发现和路由到可用的服务实例成为了一个关键挑战。本章将深入探讨服务发现与负载均衡的原理、实现方式以及在 RPC 系统中的应用。</p>
<h2>服务发现机制</h2>
<h3>什么是服务发现</h3>
<p>服务发现是指在分布式系统中，客户端能够自动发现和定位可用服务实例的过程。在微服务架构中，服务实例的数量和位置可能会动态变化，服务发现机制使得客户端无需硬编码服务地址，而是通过注册中心动态获取服务信息。</p>
<h3>服务发现的核心组件</h3>
<p>服务发现系统通常包含以下核心组件：</p>`,readingTime:{minutes:12.32,words:3696},title:"服务发现与负载均衡",type:"article"}}],["/posts/rpc/3-1-rpc-applications.html",{loader:()=>y(()=>import("./3-1-rpc-applications.html-BkPKCVi3.js"),__vite__mapDeps([130,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在现代软件架构中，RPC（Remote Procedure Call）作为一种重要的分布式通信技术，已经广泛应用于各种场景。理解 RPC 的应用场景不仅有助于我们更好地选择和使用 RPC 技术，还能帮助我们在系统设计时做出更合理的架构决策。本章将深入探讨 RPC 在不同场景下的应用，分析其适用性和优势。</p>
<h2>分布式系统中的位置</h2>
<h3>微服务架构的核心组件</h3>
<p>在微服务架构中，RPC 扮演着至关重要的角色。微服务将大型单体应用拆分为多个小型、独立的服务，这些服务需要通过网络进行通信。RPC 作为服务间通信的主要方式，具有以下优势：</p>
<ol>
<li><strong>透明性</strong>：隐藏了网络通信的复杂性，使远程调用看起来像本地调用</li>
<li><strong>性能</strong>：相比 REST API，RPC 通常具有更好的性能表现</li>
<li><strong>类型安全</strong>：通过接口定义提供强类型支持</li>
<li><strong>服务治理</strong>：现代 RPC 框架提供了丰富的服务治理功能</li>
</ol>`,readingTime:{minutes:11.06,words:3318},title:"RPC 的应用场景",type:"article"}}],["/posts/rpc/3-2-distributed-system-position.html",{loader:()=>y(()=>import("./3-2-distributed-system-position.html-2ESrwZm1.js"),__vite__mapDeps([131,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在现代软件架构中，分布式系统已成为构建大规模、高可用应用的主流方式。RPC（Remote Procedure Call）作为分布式系统中服务间通信的核心技术，在整个系统架构中占据着至关重要的位置。本章将深入探讨 RPC 在分布式系统中的位置、作用以及与其他组件的关系。</p>
<h2>分布式系统架构概述</h2>
<h3>什么是分布式系统</h3>
<p>分布式系统是由多个独立的计算机组成的系统，这些计算机通过网络连接并协同工作，对外表现为一个统一的系统。分布式系统具有以下特征：</p>
<ol>
<li><strong>分布性</strong>：系统的组件分布在不同的物理位置</li>
<li><strong>并发性</strong>：多个组件可以同时执行</li>
<li><strong>独立性</strong>：每个组件都是独立的处理单元</li>
<li><strong>透明性</strong>：对用户隐藏系统的分布性</li>
<li><strong>容错性</strong>：系统能够在部分组件失效时继续运行</li>
</ol>`,readingTime:{minutes:8.85,words:2655},title:"分布式系统中的位置",type:"article"}}],["/posts/rpc/3-3-ecommerce-payment-log-recommendation-practices.html",{loader:()=>y(()=>import("./3-3-ecommerce-payment-log-recommendation-practices.html-2m_yoNel.js"),__vite__mapDeps([132,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在现代互联网应用中，电商、支付、日志和推荐系统是四个核心业务领域，它们对系统的性能、可靠性、可扩展性都有着极高的要求。RPC（Remote Procedure Call）作为这些系统中服务间通信的重要技术，在实践中发挥着关键作用。本章将深入探讨 RPC 在这四个领域中的具体应用和最佳实践。</p>
<h2>电商系统中的 RPC 实践</h2>
<h3>核心服务架构</h3>
<p>电商系统通常包含多个核心服务，如用户服务、商品服务、订单服务、库存服务、购物车服务等。这些服务通过 RPC 进行通信：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 电商系统核心服务架构示例</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> EcommerceServiceConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 用户服务</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcService</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserService</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> userService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> UserServiceImpl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 商品服务</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcService</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ProductService</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> productService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ProductServiceImpl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 订单服务</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcService</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderService</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> orderService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> OrderServiceImpl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 库存服务</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcService</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> InventoryService</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> InventoryServiceImpl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 订单服务实现</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcService</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderServiceImpl</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcReference</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcReference</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ProductService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> productService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcReference</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> InventoryService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RpcReference</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PaymentService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> paymentService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Transactional</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> createOrder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CreateOrderRequest</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 1. 验证用户</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (user </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"User not found"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 2. 验证商品和库存</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Product</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> product</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> productService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (product </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Product not found"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            InventoryCheckResult</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inventoryResult</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">checkInventory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">inventoryResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isAvailable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Insufficient inventory"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 3. 创建订单</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Order</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> order</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> buildOrder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(request, user, product);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            order </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> orderRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(order);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 4. 锁定库存</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lockInventory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 5. 处理支付</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            PaymentResult</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> paymentResult</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> processPayment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(order, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPaymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">paymentResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 支付失败，释放库存</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">releaseInventory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Payment failed: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> paymentResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 6. 更新订单状态</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">OrderStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">PAID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            orderRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(order);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 7. 扣减库存</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            inventoryService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">reduceInventory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Order creation failed"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> OrderResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Order creation failed: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Order</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> buildOrder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CreateOrderRequest</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Product</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> product</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Order</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> order</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUnitPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">product</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTotalAmount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">product</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQuantity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">OrderStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CREATED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setCreateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> order;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PaymentResult</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> processPayment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Order</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">PaymentInfo</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> paymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        PaymentRequest</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> paymentRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> PaymentRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">orderId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">amount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">order</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTotalAmount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">paymentMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">paymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPaymentMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cardInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">paymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getCardInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> paymentService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">processPayment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(paymentRequest);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.72,words:3216},title:"电商、支付、日志、推荐中的实践",type:"article"}}],["/posts/rpc/3-4-when-to-use-rpc-mq-rest.html",{loader:()=>y(()=>import("./3-4-when-to-use-rpc-mq-rest.html-fMlVJZtl.js"),__vite__mapDeps([133,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在构建现代分布式系统时，开发者面临着多种通信方式的选择：RPC（Remote Procedure Call）、MQ（Message Queue）和 REST（Representational State Transfer）。每种方式都有其独特的优势和适用场景。理解它们之间的差异和适用场景，对于设计高效、可靠的系统架构至关重要。本章将深入探讨这三种通信方式的特点、适用场景以及选择策略。</p>
<h2>RPC、MQ 和 REST 的核心特性对比</h2>
<h3>RPC（Remote Procedure Call）</h3>
<p>RPC 是一种协议，允许程序调用另一个地址空间（通常是网络上的另一台机器）的过程或函数，就像调用本地函数一样。</p>`,readingTime:{minutes:9.61,words:2882},title:"什么时候适合用 RPC，什么时候用 MQ 或 REST",type:"article"}}],["/posts/rpc/4-1-rpc-implementation-foundations.html",{loader:()=>y(()=>import("./4-1-rpc-implementation-foundations.html-Dar6E0tL.js"),__vite__mapDeps([134,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在深入学习 RPC（Remote Procedure Call）框架之前，理解其底层实现原理和基础技术是至关重要的。RPC 作为一种分布式通信技术，涉及网络编程、序列化、代理模式、反射机制等多个计算机科学领域的核心概念。本章将从基础开始，逐步深入探讨 RPC 实现所需的核心技术，为后续章节中从零实现 RPC 框架奠定坚实的理论基础。</p>
<h2>RPC 的基本工作原理</h2>
<h3>什么是 RPC</h3>
<p>RPC 是一种进程间通信方式，它允许程序调用另一个地址空间（通常是网络上的另一台机器）的过程或函数，就像调用本地函数一样。这种透明性极大地简化了分布式系统的开发复杂性。</p>`,readingTime:{minutes:10.37,words:3112},title:"RPC 实现基础",type:"article"}}],["/posts/rpc/4-2-socket-programming-for-remote-calls.html",{loader:()=>y(()=>import("./4-2-socket-programming-for-remote-calls.html-hMLagkAp.js"),__vite__mapDeps([135,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>Socket 编程是实现 RPC（Remote Procedure Call）框架的基础技术之一。通过 Socket，我们可以在网络上的不同进程之间建立连接并传输数据，从而实现远程方法调用。本章将深入探讨如何使用 Socket 编程实现基本的远程调用功能，为后续实现完整的 RPC 框架奠定基础。</p>
<h2>Socket 编程基础</h2>
<h3>什么是 Socket</h3>
<p>Socket 是网络编程中的一个抽象概念，它是应用层与 TCP/IP 协议族通信的中间软件抽象层。Socket 提供了一组接口，使得应用程序可以通过网络与其他应用程序进行通信。</p>
<h3>Socket 的类型</h3>`,readingTime:{minutes:10.08,words:3023},title:"Socket 编程实现远程调用",type:"article"}}],["/posts/rpc/4-3-blocking-io-nio-netty-basics.html",{loader:()=>y(()=>import("./4-3-blocking-io-nio-netty-basics.html-BkK_E3Ux.js"),__vite__mapDeps([136,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在网络编程领域，IO（Input/Output）模型的选择对系统的性能和可扩展性有着至关重要的影响。从传统的阻塞IO到现代的NIO（Non-blocking IO），再到功能强大的Netty框架，每种技术都有其独特的优势和适用场景。本章将深入探讨这三种IO模型的基础知识，为构建高性能的RPC框架奠定理论基础。</p>
<h2>阻塞 IO（BIO）</h2>
<h3>什么是阻塞 IO</h3>
<p>阻塞IO是最传统的IO模型，也是最容易理解和实现的。在阻塞IO模型中，当应用程序发起IO请求时，线程会被阻塞，直到IO操作完成。</p>
<h3>阻塞 IO 的特点</h3>
<ol>
<li><strong>同步阻塞</strong>：线程在等待IO操作完成期间完全阻塞</li>
<li><strong>一对一连接</strong>：每个连接需要一个独立的线程处理</li>
<li><strong>资源消耗大</strong>：大量并发连接会消耗大量线程资源</li>
<li><strong>实现简单</strong>：代码逻辑直观，易于理解和维护</li>
</ol>`,readingTime:{minutes:10.74,words:3223},title:"阻塞 IO / NIO / Netty 基础",type:"article"}}],["/posts/rpc/4-4-netty-request-response-encapsulation.html",{loader:()=>y(()=>import("./4-4-netty-request-response-encapsulation.html-gGy2iz_l.js"),__vite__mapDeps([137,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在构建高性能的 RPC 框架时，如何高效地封装和处理请求与响应是核心问题之一。Netty 作为一个强大的异步事件驱动的网络应用框架，提供了丰富的编解码器和处理器机制，能够帮助我们轻松实现自定义的 RPC 协议。本章将深入探讨如何使用 Netty 来封装 RPC 请求和响应，为构建完整的 RPC 框架奠定基础。</p>
<h2>RPC 协议设计</h2>
<h3>自定义 RPC 协议格式</h3>
<p>在实现 RPC 框架之前，我们需要设计一个自定义的协议格式来传输请求和响应数据。一个典型的 RPC 协议包含以下几个部分：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// RPC 协议格式设计</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// +--------+--------+--------+--------+--------+--------+--------+--------+</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// |  魔数  | 主版本 | 次版本 |  操作  |        序列化方式        |  数据长度  |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// +--------+--------+--------+--------+--------+--------+--------+--------+</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// |                              数据内容                               |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// +--------+--------+--------+--------+--------+--------+--------+--------+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RpcProtocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 协议常量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> MAGIC_NUMBER </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x12345678</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> VERSION_MAJOR </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> VERSION_MINOR </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 操作类型</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> OPERATION_REQUEST </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> OPERATION_RESPONSE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 序列化方式</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERIALIZATION_JAVA </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERIALIZATION_JSON </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> SERIALIZATION_PROTOBUF </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 协议字段</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> magicNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 魔数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> versionMajor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 主版本号</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> versionMinor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 次版本号</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       // 操作类型</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   // 序列化方式</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dataLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       // 数据长度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">          // 数据内容</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 构造函数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RpcProtocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RpcProtocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">magicNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MAGIC_NUMBER;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">versionMajor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> VERSION_MAJOR;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">versionMinor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> VERSION_MINOR;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> operation;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">serialization</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> serialization;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">dataLength</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> data;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getter 和 setter 方法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getMagicNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> magicNumber; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setMagicNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> magicNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">magicNumber</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> magicNumber; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getVersionMajor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> versionMajor; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setVersionMajor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> versionMajor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">versionMajor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> versionMajor; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getVersionMinor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> versionMinor; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setVersionMinor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> versionMinor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">versionMinor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> versionMinor; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getOperation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> operation; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setOperation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> operation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">operation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> operation; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getSerialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> serialization; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setSerialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> serialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">serialization</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> serialization; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getDataLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dataLength; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setDataLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dataLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">dataLength</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dataLength; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> data; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> data; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "RpcProtocol{"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                "magicNumber="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> magicNumber </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                ", versionMajor="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> versionMajor </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                ", versionMinor="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> versionMinor </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                ", operation="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> operation </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                ", serialization="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> serialization </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                ", dataLength="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dataLength </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                ", data="</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> " bytes"</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "null"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                '}'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.16,words:3049},title:"使用 Netty 封装请求和响应",type:"article"}}],["/posts/rpc/4-5-dynamic-proxy-service-invocation.html",{loader:()=>y(()=>import("./4-5-dynamic-proxy-service-invocation.html-DI6zAX7O.js"),__vite__mapDeps([138,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在 RPC（Remote Procedure Call）框架中，动态代理是实现透明远程调用的关键技术。通过动态代理，客户端可以像调用本地方法一样调用远程服务，而无需关心底层的网络通信细节。本章将深入探讨动态代理的实现原理，以及如何将其应用于 RPC 框架中的服务调用。</p>
<h2>动态代理基础</h2>
<h3>什么是动态代理</h3>
<p>动态代理是一种在运行时动态生成代理对象的技术。与静态代理需要手动编写代理类不同，动态代理可以在程序运行时根据接口定义自动生成代理对象。</p>
<h3>JDK 动态代理</h3>
<p>JDK 动态代理是 Java 标准库提供的动态代理实现，它基于接口实现。</p>`,readingTime:{minutes:11.13,words:3340},title:"动态代理与服务调用",type:"article"}}],["/posts/rpc/5-1-service-registration-discovery.html",{loader:()=>y(()=>import("./5-1-service-registration-discovery.html--xwLR0YI.js"),__vite__mapDeps([139,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在现代分布式系统和微服务架构中，服务注册与发现是实现服务治理的核心组件之一。随着系统规模的不断扩大，服务实例的数量也在动态变化，如何有效地管理这些服务实例的位置信息，使得服务消费者能够准确地找到并调用所需的服务，成为了一个关键挑战。本章将深入探讨服务注册与发现的原理、实现方式以及在 RPC 框架中的应用。</p>
<h2>服务注册与发现概述</h2>
<h3>什么是服务注册与发现</h3>
<p>服务注册与发现是一种用于管理分布式系统中服务实例位置信息的机制。它包含两个核心概念：</p>
<ol>
<li><strong>服务注册（Service Registration）</strong>：服务提供者在启动时向注册中心注册自己的网络位置信息</li>
<li><strong>服务发现（Service Discovery）</strong>：服务消费者从注册中心获取所需服务的网络位置信息</li>
</ol>`,readingTime:{minutes:11.62,words:3486},title:"服务注册与发现",type:"article"}}],["/posts/rpc/5-2-zookeeper-service-registration.html",{loader:()=>y(()=>import("./5-2-zookeeper-service-registration.html-9vHhbwSX.js"),__vite__mapDeps([140,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>Apache ZooKeeper 是一个开源的分布式协调服务，广泛用于分布式系统中的配置管理、命名服务、分布式同步和组服务等场景。在 RPC 框架中，ZooKeeper 常被用作服务注册中心，提供高可用、一致性的服务注册与发现功能。本章将深入探讨如何使用 ZooKeeper 实现服务注册功能。</p>
<h2>ZooKeeper 基础知识</h2>
<h3>什么是 ZooKeeper</h3>
<p>ZooKeeper 是一个分布式的、开源的协调服务，由 Apache 软件基金会维护。它提供了简单的原语集，分布式应用程序可以基于这些原语实现更高级别的服务，如配置管理、命名服务、分布式同步等。</p>`,readingTime:{minutes:10.47,words:3140},title:"Zookeeper 实现服务注册",type:"article"}}],["/posts/rpc/5-3-nacos-consul-eureka-service-discovery.html",{loader:()=>y(()=>import("./5-3-nacos-consul-eureka-service-discovery.html-BWoVPVSJ.js"),__vite__mapDeps([141,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在微服务架构中，服务发现是实现服务治理的核心组件之一。除了 ZooKeeper 之外，Nacos、Consul 和 Eureka 也是业界广泛使用的服务发现解决方案。每种方案都有其独特的特性和优势，适用于不同的应用场景。本章将深入探讨这三种服务发现组件的实现原理和使用方法。</p>
<h2>服务发现组件对比</h2>
<h3>核心特性对比</h3>
<table>
<thead>
<tr>
<th>特性</th>
<th>Nacos</th>
<th>Consul</th>
<th>Eureka</th>
</tr>
</thead>
<tbody>
<tr>
<td>开发商</td>
<td>阿里巴巴</td>
<td>HashiCorp</td>
<td>Netflix</td>
</tr>
<tr>
<td>语言</td>
<td>Java</td>
<td>Go</td>
<td>Java</td>
</tr>
<tr>
<td>数据一致性</td>
<td>Raft</td>
<td>Raft</td>
<td>AP</td>
</tr>
<tr>
<td>健康检查</td>
<td>TCP/HTTP/MySQL/Redis</td>
<td>TCP/HTTP/Docker</td>
<td>Client Beat</td>
</tr>
<tr>
<td>负载均衡</td>
<td>权重/metadata</td>
<td>权重</td>
<td>Ribbon</td>
</tr>
<tr>
<td>配置管理</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>多数据中心</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>跨语言支持</td>
<td>支持</td>
<td>支持</td>
<td>有限</td>
</tr>
<tr>
<td>CAP理论</td>
<td>CP+AP</td>
<td>CP</td>
<td>AP</td>
</tr>
</tbody>
</table>`,readingTime:{minutes:9.91,words:2972},title:"Nacos/Consul/Eureka 实现服务发现",type:"article"}}],["/posts/rpc/6-1-timeout-retry-mechanism.html",{loader:()=>y(()=>import("./6-1-timeout-retry-mechanism.html-Dj40pOMT.js"),__vite__mapDeps([142,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在分布式系统中，网络延迟、服务不可用、资源争用等问题是常态而非例外。为了构建高可用的 RPC 系统，我们必须设计合理的容错机制，其中超时控制和重试机制是两个核心组件。它们不仅能够提高系统的稳定性，还能在面对瞬时故障时自动恢复，从而提升用户体验。</p>
<h2>超时控制的重要性</h2>
<h3>为什么需要超时控制？</h3>
<p>在 RPC 调用中，如果没有合理的超时控制，可能会出现以下问题：</p>
<ol>
<li><strong>资源耗尽</strong>：长时间等待无响应的请求会占用大量线程和连接资源</li>
<li><strong>雪崩效应</strong>：一个服务的延迟可能导致整个调用链的阻塞</li>
<li><strong>用户体验差</strong>：用户需要等待很长时间才能得到响应或错误信息</li>
</ol>`,readingTime:{minutes:6.52,words:1957},title:"超时控制、重试机制",type:"article"}}],["/posts/rpc/6-2-circuit-breaker-degradation.html",{loader:()=>y(()=>import("./6-2-circuit-breaker-degradation.html-C9dUW-z_.js"),__vite__mapDeps([143,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在分布式系统中，服务之间的依赖关系错综复杂，一个服务的故障可能会导致整个系统的级联失败。熔断器模式和降级机制是应对这类问题的重要手段，它们能够防止故障扩散，提高系统的稳定性和可用性。本章将深入探讨熔断与降级的原理、实现以及在主流框架中的应用。</p>
<h2>熔断器模式原理</h2>
<h3>什么是熔断器模式？</h3>
<p>熔断器模式（Circuit Breaker Pattern）源自电子工程中的熔断器概念。当电流过载时，熔断器会自动熔断以保护电路。在软件系统中，熔断器用于检测服务调用的失败情况，当失败次数达到阈值时，熔断器会"熔断"，阻止后续请求发送到故障服务，从而保护系统免受级联故障的影响。</p>`,readingTime:{minutes:9.6,words:2880},title:"熔断与降级（参考 Hystrix、Resilience4j）",type:"article"}}],["/posts/rpc/6-3-service-rate-limiting.html",{loader:()=>y(()=>import("./6-3-service-rate-limiting.html-BlDtf7Bl.js"),__vite__mapDeps([144,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>在高并发的分布式系统中，服务限流是保护系统稳定性的关键机制之一。当系统面临突发流量或恶意攻击时，限流可以防止系统过载，确保核心服务的正常运行。本章将深入探讨服务限流的原理、算法实现以及在实际应用中的最佳实践。</p>
<h2>限流的重要性</h2>
<h3>为什么需要服务限流？</h3>
<p>在分布式系统中，服务限流具有以下重要意义：</p>
<ol>
<li><strong>保护系统稳定性</strong>：防止突发流量导致系统过载和崩溃</li>
<li><strong>保障服务质量</strong>：确保核心服务在高负载下仍能正常响应</li>
<li><strong>资源合理分配</strong>：避免某些服务占用过多系统资源</li>
<li><strong>防止恶意攻击</strong>：抵御DDoS等恶意流量攻击</li>
<li><strong>成本控制</strong>：避免因流量激增导致的资源成本大幅增加</li>
</ol>`,readingTime:{minutes:8.92,words:2676},title:"服务限流",type:"article"}}],["/posts/rpc/7-1-dubbo-architecture-core-modules.html",{loader:()=>y(()=>import("./7-1-dubbo-architecture-core-modules.html-DLkW3ao1.js"),__vite__mapDeps([145,1])),meta:{date:1756512e6,category:["rpc"],tag:["rpc"],excerpt:`<p>Apache Dubbo 是阿里巴巴开源的高性能 Java RPC 框架，广泛应用于构建分布式服务架构。Dubbo 提供了完整的 RPC 通信、服务治理、负载均衡、容错处理等功能，是构建微服务系统的理想选择。本章将深入探讨 Dubbo 的架构设计和核心模块，帮助读者理解其内部工作机制。</p>
<h2>Dubbo 架构概览</h2>
<h3>整体架构</h3>
<p>Dubbo 采用分层架构设计，各层之间职责清晰、相互解耦。整体架构可以分为以下几层：</p>
<ol>
<li><strong>Business Layer（业务层）</strong>：实际的业务逻辑实现</li>
<li><strong>Service Layer（服务层）</strong>：暴露和引用远程服务的接口层</li>
<li><strong>Configuration Layer（配置层）</strong>：配置管理，包括应用配置、服务配置等</li>
<li><strong>Proxy Layer（代理层）</strong>：服务代理，生成服务消费者和服务提供者的代理对象</li>
<li><strong>Registry Layer（注册层）</strong>：服务注册与发现</li>
<li><strong>Cluster Layer（集群层）</strong>：服务路由、负载均衡、容错处理</li>
<li><strong>Monitor Layer（监控层）</strong>：监控服务调用统计</li>
<li><strong>Protocol Layer（协议层）</strong>：RPC 协议实现</li>
<li><strong>Exchange Layer（信息交换层）</strong>：封装请求响应模式</li>
<li><strong>Transport Layer（网络传输层）</strong>：网络传输实现</li>
<li><strong>Serialize Layer（序列化层）</strong>：数据序列化</li>
</ol>`,readingTime:{minutes:8.71,words:2612},title:"Dubbo 架构设计与核心模块",type:"article"}}],["/posts/rpc/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-djyGK4Ge.js"),__vite__mapDeps([146,1])),meta:{date:1756738619e3,excerpt:`<p>如果专门写一本 <strong>《RPC 框架：从入门到精通》</strong> 的书，可以分为 <strong>基础概念 → 手写实现 → 常见框架 → 高级特性 → 实践案例 → 未来发展</strong> 六个大模块。下面给你一个详细的章节目录：</p>
<hr>
<h1><strong>《RPC 框架：从入门到精通》目录</strong></h1>
<h2><strong>第一部分 基础篇：走进 RPC</strong></h2>
<ol>
<li>
<p><strong>什么是 RPC？</strong></p>
<ul>
<li>RPC 的定义与作用</li>
<li>与本地调用的区别</li>
<li>RPC vs REST vs gRPC 对比</li>
<li>为什么微服务必须依赖 RPC</li>
</ul>
</li>
<li>
<p><strong>RPC 的核心组成</strong></p>
<ul>
<li>客户端与服务端模型</li>
<li>序列化与反序列化</li>
<li>网络通信协议</li>
<li>服务发现与负载均衡</li>
</ul>
</li>
<li>
<p><strong>RPC 的应用场景</strong></p>
<ul>
<li>分布式系统中的位置</li>
<li>电商、支付、日志、推荐中的实践</li>
<li>什么时候适合用 RPC，什么时候用 MQ 或 REST</li>
</ul>
</li>
</ol>`,readingTime:{minutes:3.16,words:949},title:"《RPC 框架：从入门到精通》目录",type:"article"}}],["/posts/schedule/1-1-1-why-distributed-scheduling.html",{loader:()=>y(()=>import("./1-1-1-why-distributed-scheduling.html-Cz2EgFwg.js"),__vite__mapDeps([147,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在现代软件架构中，任务调度已成为系统设计中不可或缺的一环。随着业务规模的不断扩大，单机环境下的任务调度已无法满足复杂场景的需求。本文将深入探讨为什么我们需要分布式任务调度，以及它如何解决单机调度的局限性。</p>
<h2>单机 Cron 的局限</h2>
<p>传统的任务调度往往依赖于操作系统提供的 Cron 工具。Cron 是一个强大的时间驱动任务调度器，它允许用户在指定的时间点执行预定义的命令或脚本。然而，当业务发展到一定规模时，单机 Cron 的局限性便显现出来。</p>
<h3>资源限制</h3>
<p>单台服务器的计算资源是有限的。当任务数量增加，或者单个任务的计算复杂度提高时，单机环境很容易成为性能瓶颈。例如，一个电商系统可能需要在每天凌晨处理大量的订单结算任务，这些任务可能涉及复杂的计算和数据库操作。在单机环境下，这些任务的执行会占用大量 CPU 和内存资源，影响服务器上其他服务的正常运行。</p>`,readingTime:{minutes:5.42,words:1627},title:"为什么需要分布式任务调度？",type:"article"}}],["/posts/schedule/1-1-2-core-concepts-of-scheduling.html",{loader:()=>y(()=>import("./1-1-2-core-concepts-of-scheduling.html-NTw5FR84.js"),__vite__mapDeps([148,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>任务调度是分布式系统中的核心组件之一，理解其核心概念对于设计和实现高效的调度系统至关重要。本文将深入探讨任务调度中的关键概念，包括任务、调度器、执行器等基本元素，以及时间表达式、执行模式等重要机制。</p>
<h2>任务、调度器、执行器</h2>
<p>在任务调度系统中，有三个核心组件构成了整个系统的基础架构。</p>
<h3>任务（Job）</h3>
<p>任务是调度系统中的基本执行单元，它定义了需要执行的具体操作。一个任务通常包含以下属性：</p>
<ul>
<li><strong>任务名称</strong>：唯一标识一个任务的字符串</li>
<li><strong>任务描述</strong>：对任务功能的简要说明</li>
<li><strong>执行逻辑</strong>：任务需要执行的具体代码或脚本</li>
<li><strong>调度策略</strong>：任务的执行时间规则</li>
<li><strong>参数配置</strong>：任务执行时需要的参数信息</li>
</ul>`,readingTime:{minutes:5.65,words:1695},title:"任务调度的核心概念",type:"article"}}],["/posts/schedule/1-1-3-basic-model-of-distributed-scheduling.html",{loader:()=>y(()=>import("./1-1-3-basic-model-of-distributed-scheduling.html-ZsfqGn_j.js"),__vite__mapDeps([149,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>分布式任务调度系统是现代大规模应用架构中的关键组件。与单机调度不同，分布式调度需要解决节点间协调、状态一致性、故障恢复等一系列复杂问题。本文将深入探讨分布式调度的基本模型，包括 Master/Worker 架构、调度中心与执行节点的分工，以及状态存储与一致性保障机制。</p>
<h2>Master/Worker 架构</h2>
<p>Master/Worker 架构是分布式调度系统中最常见的设计模式。这种架构通过将控制逻辑与执行逻辑分离，实现了系统的可扩展性和高可用性。</p>
<h3>Master 节点的职责</h3>
<p>Master 节点作为系统的控制中心，承担着核心的调度职责：</p>`,readingTime:{minutes:8.5,words:2551},title:"分布式调度的基本模型",type:"article"}}],["/posts/schedule/1-2-1-minimal-viable-scheduler.html",{loader:()=>y(()=>import("./1-2-1-minimal-viable-scheduler.html-CqkD9eeO.js"),__vite__mapDeps([150,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在分布式任务调度的学习过程中，理论知识固然重要，但动手实践更能加深理解。本文将带领读者从零开始，构建一个最小可用的调度器，通过实际代码演示调度器的核心工作机制。这个简单的调度器虽然功能有限，但它包含了任务调度的基本要素，为进一步学习复杂的分布式调度系统奠定基础。</p>
<h2>基于 Java Timer/ScheduledExecutorService</h2>
<p>Java 提供了内置的任务调度工具，我们可以基于这些工具快速构建一个简单的调度器。</p>
<h3>Timer 的基本使用</h3>
<p>Java 的 [Timer](file:///d:/dev/java/jdk1.8.0_201/src.zip!/java/util/Timer.java#L53-L576) 类是最早的调度工具之一，它允许我们安排任务在将来的某个时间点执行或定期执行。</p>`,readingTime:{minutes:6.97,words:2090},title:"最小可用调度器",type:"article"}}],["/posts/schedule/1-2-2-distributed-scheduling-prototype.html",{loader:()=>y(()=>import("./1-2-2-distributed-scheduling-prototype.html-CgxfjPX7.js"),__vite__mapDeps([151,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在上一章中，我们实现了一个最小可用的单机调度器。虽然它能够满足基本的定时任务需求，但在实际的生产环境中，单机调度器存在诸多局限性。本文将带领读者构建一个分布式调度系统的雏形，通过引入数据库存储、分布式锁和任务状态管理等机制，实现一个具备基本分布式特性的调度系统。</p>
<h2>使用数据库存储任务</h2>
<p>在分布式环境中，任务信息需要存储在共享的存储系统中，以便多个调度节点能够访问和管理任务。我们将使用数据库作为任务存储的后端。</p>
<h3>数据库表设计</h3>
<p>首先，我们需要设计任务相关的数据库表结构：</p>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 任务表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> scheduler_jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务ID'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">128</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务名称'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    description</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> TEXT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务描述'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    cron_expression </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Cron表达式'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    job_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">256</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务执行类'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    params </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TEXT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务参数'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">DEFAULT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ACTIVE'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务状态'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> DEFAULT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'创建时间'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    update_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> DEFAULT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">ON UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'更新时间'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 任务执行日志表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> job_execution_logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">BIGINT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> AUTO_INCREMENT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'日志ID'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    job_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'任务ID'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    trigger_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'触发时间'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    start_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'开始执行时间'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    end_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'执行完成时间'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'执行状态'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    error_message </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TEXT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'错误信息'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    execution_result </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TEXT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'执行结果'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> DEFAULT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'创建时间'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 调度节点表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> scheduler_nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'节点ID'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    host </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">128</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'主机地址'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    port </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'端口'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'节点状态'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    last_heartbeat </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'最后心跳时间'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> DEFAULT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'创建时间'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    update_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TIMESTAMP</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> DEFAULT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">ON UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> CURRENT_TIMESTAMP COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'更新时间'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.39,words:3117},title:"分布式调度雏形",type:"article"}}],["/posts/schedule/1-2-3-high-availability-and-scalability.html",{loader:()=>y(()=>import("./1-2-3-high-availability-and-scalability.html-DKct9Rzr.js"),__vite__mapDeps([152,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在前两章中，我们分别实现了最小可用调度器和分布式调度雏形。虽然这些实现能够满足基本的任务调度需求，但在生产环境中，我们还需要考虑系统的高可用性和扩展性。本文将深入探讨如何通过 Leader 选举、多节点容错与 Failover、动态扩缩容等机制，构建一个高可用、可扩展的分布式调度系统。</p>
<h2>Leader 选举（Zookeeper/Etcd 实现）</h2>
<p>在分布式调度系统中，通常需要一个主节点（Leader）来协调各个工作节点（Worker）的工作。Leader 负责任务分配、状态监控、故障处理等核心功能。为了确保系统的高可用性，我们需要实现 Leader 选举机制，当主节点发生故障时，能够自动选举出新的主节点。</p>`,readingTime:{minutes:9.25,words:2776},title:"高可用与扩展性设计",type:"article"}}],["/posts/schedule/1-3-1-quartz-framework.html",{loader:()=>y(()=>import("./1-3-1-quartz-framework.html-u0Lm8HLU.js"),__vite__mapDeps([153,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>Quartz 是一个功能丰富且广泛使用的开源作业调度库，它几乎可以集成到任何 Java 应用程序中。从简单的定时任务到复杂的分布式调度需求，Quartz 都能提供强大的支持。本文将深入探讨 Quartz 的架构设计、核心组件、集群模式以及在实际应用中的优缺点。</p>
<h2>Quartz 架构与核心组件</h2>
<p>Quartz 的架构设计清晰且模块化，主要由以下几个核心组件构成：</p>
<h3>Scheduler（调度器）</h3>
<p>Scheduler 是 Quartz 的核心接口，负责管理 Job 和 Trigger 的注册、调度和执行。它是应用程序与 Quartz 交互的主要入口点。</p>`,readingTime:{minutes:5.95,words:1786},title:"Quartz 框架详解",type:"article"}}],["/posts/schedule/1-3-2-elastic-job-framework.html",{loader:()=>y(()=>import("./1-3-2-elastic-job-framework.html-DB8rFDdx.js"),__vite__mapDeps([154,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>Elastic-Job 是当当网开源的一个分布式调度解决方案，它基于 Quartz 开发，提供了分布式调度、分片处理、弹性扩容等企业级特性。与传统的调度框架相比，Elastic-Job 在分布式环境下的任务处理能力更为出色。本文将深入探讨 Elastic-Job 的核心概念、架构设计、分片任务机制以及在实际应用中的优势。</p>
<h2>Elastic-Job 简介</h2>
<p>Elastic-Job 最初由当当网开发并开源，旨在解决分布式环境下任务调度的复杂性问题。它提供了两种类型的任务：</p>
<ol>
<li><strong>ElasticJob-Lite</strong>：轻量级无中心化解决方案，适用于简单场景</li>
<li><strong>ElasticJob-Cloud</strong>：重量级有中心化解决方案，适用于复杂场景</li>
</ol>`,readingTime:{minutes:6.45,words:1935},title:"Elastic-Job 框架详解",type:"article"}}],["/posts/schedule/1-3-3-xxl-job-framework.html",{loader:()=>y(()=>import("./1-3-3-xxl-job-framework.html-CkBbKmeR.js"),__vite__mapDeps([155,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>XXL-JOB 是一个轻量级的分布式任务调度平台，由国内开发者徐晓龙开源。它以其简洁的设计、易用的界面和强大的功能在开发者社区中广受欢迎。与 Quartz 和 Elastic-Job 相比，XXL-JOB 在易用性和运维友好性方面具有明显优势。本文将深入探讨 XXL-JOB 的架构设计、核心组件、使用方法以及在实际应用中的优势。</p>
<h2>XXL-JOB 简介</h2>
<p>XXL-JOB 是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。它主要包括调度服务器（XXL-JOB-Admin）和执行器（XXL-JOB-Executor）两个核心组件。</p>`,readingTime:{minutes:8.81,words:2644},title:"XXL-JOB 框架详解",type:"article"}}],["/posts/schedule/1-3-4-other-scheduling-systems.html",{loader:()=>y(()=>import("./1-3-4-other-scheduling-systems.html-Dzd6R45C.js"),__vite__mapDeps([156,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在分布式任务调度领域，除了我们前面详细介绍的 Quartz、Elastic-Job 和 XXL-JOB 之外，还有许多其他优秀的调度系统。这些系统各有特色，适用于不同的应用场景。本文将简要介绍 TBSchedule、Saturn 和 Kubernetes CronJob 等调度系统，帮助读者全面了解分布式调度领域的技术生态。</p>
<h2>TBSchedule</h2>
<p>TBSchedule 是淘宝开源的一个分布式调度系统，主要用于解决大规模分布式环境下的任务调度问题。它最初是为了满足淘宝内部复杂的业务调度需求而开发的。</p>
<h3>核心特性</h3>
<ol>
<li><strong>高可用性</strong>：支持集群部署，具备故障自动恢复能力</li>
<li><strong>动态调度</strong>：支持动态添加、删除和修改调度任务</li>
<li><strong>负载均衡</strong>：通过智能的负载均衡算法分配任务</li>
<li><strong>任务分片</strong>：支持任务分片处理，提高执行效率</li>
</ol>`,readingTime:{minutes:5.94,words:1782},title:"其他调度系统简析",type:"article"}}],["/posts/schedule/1-4-1-distributed-coordination-mechanisms.html",{loader:()=>y(()=>import("./1-4-1-distributed-coordination-mechanisms.html-BclflWXW.js"),__vite__mapDeps([157,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在分布式任务调度系统中，协调机制是确保系统正确性和一致性的核心组件。多个节点之间需要通过协调机制来共享状态、选举主节点、分配任务以及处理故障。本文将深入探讨分布式锁实现、心跳与任务抢占、一致性协议在调度中的应用等关键技术。</p>
<h2>分布式锁实现（Zookeeper/Redis）</h2>
<p>分布式锁是分布式系统中实现互斥访问共享资源的重要机制。在任务调度系统中，分布式锁用于确保同一时间只有一个节点执行特定任务，防止任务重复执行。</p>
<h3>基于 Zookeeper 的分布式锁</h3>
<p>Zookeeper 是实现分布式锁的常用方案之一，它通过临时顺序节点和 Watcher 机制来实现锁的获取和释放。</p>`,readingTime:{minutes:9.49,words:2848},title:"分布式协调机制",type:"article"}}],["/posts/schedule/1-4-2-task-dependency-and-workflow-scheduling.html",{loader:()=>y(()=>import("./1-4-2-task-dependency-and-workflow-scheduling.html-DqRkbN60.js"),__vite__mapDeps([158,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在复杂的业务场景中，任务之间往往存在复杂的依赖关系。一个任务的执行可能需要等待其他任务的完成，或者多个任务需要按照特定的顺序执行。这就需要我们引入任务依赖和工作流调度的概念。本文将深入探讨 DAG（有向无环图）模型、上下游依赖处理以及主流工作流引擎的实现原理。</p>
<h2>DAG（有向无环图）模型</h2>
<p>DAG（Directed Acyclic Graph，有向无环图）是表示任务依赖关系的数学模型。在 DAG 中，节点代表任务，有向边代表任务间的依赖关系，无环特性确保了任务执行不会出现死循环。</p>
<h3>DAG 基本概念</h3>
<p>在 DAG 模型中：</p>
`,readingTime:{minutes:9.72,words:2916},title:"任务依赖与工作流调度",type:"article"}}],["/posts/schedule/1-4-3-task-execution-and-fault-tolerance.html",{loader:()=>y(()=>import("./1-4-3-task-execution-and-fault-tolerance.html-DN31VzLm.js"),__vite__mapDeps([159,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在分布式任务调度系统中，任务执行的可靠性和容错能力是确保系统稳定运行的关键。由于网络波动、节点故障、资源不足等各种因素，任务执行过程中可能会出现失败。为了提高系统的可用性和数据一致性，我们需要实现完善的容错机制，包括重试机制、超时控制和幂等性保障等。本文将深入探讨这些关键技术的实现原理和最佳实践。</p>
<h2>重试机制与补偿任务</h2>
<p>重试机制是处理临时性故障的有效手段，通过自动重试可以解决网络抖动、资源暂时不可用等问题。补偿任务则用于处理事务性操作的回滚需求。</p>
<h3>重试机制实现</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.time.Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.ScheduledExecutorService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.ScheduledFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.function.Supplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 重试策略枚举</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    FIXED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 固定间隔重试</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    EXPONENTIAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 指数退避重试</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    FIBONACCI</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 斐波那契退避重试</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 重试配置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> maxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           // 最大重试次数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> initialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 初始延迟</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> maxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 最大延迟</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryStrategy</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 重试策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> multiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 倍数因子（用于指数退避）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RetryConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">maxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">initialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ofSeconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">maxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ofMinutes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> RetryStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">EXPONENTIAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">multiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // builders</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RetryConfigBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getMaxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> maxAttempts; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> initialDelay; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getMaxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> maxDelay; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryStrategy</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> strategy; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> double</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getMultiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> multiplier; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // setters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setMaxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">maxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> maxAttempts; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> initialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">initialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> initialDelay; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setMaxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">maxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> maxDelay; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">RetryStrategy</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> strategy; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setMultiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">double</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> multiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">multiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> multiplier; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 重试配置构建器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfig</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> config </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RetryConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> maxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setMaxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(maxAttempts);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> initialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(initialDelay);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> maxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> maxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setMaxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(maxDelay);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">RetryStrategy</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(strategy);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfigBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> multiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">double</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> multiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setMultiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(multiplier);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryConfig</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> config;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 重试执行器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RetryableTaskExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ScheduledExecutorService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> scheduler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RetryableTaskExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ScheduledExecutorService</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> scheduler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">scheduler</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> scheduler;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 执行可重试的任务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> executeWithRetry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Supplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            RetryConfig</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">util</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Predicate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">retryCondition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        CompletableFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">future</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        executeWithRetryInternal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(task, config, retryCondition, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, future);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> future;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> executeWithRetryInternal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Supplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            RetryConfig</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">util</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Predicate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">retryCondition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> attempt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            T</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">complete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(result);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMaxAttempts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">retryCondition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">completeExceptionally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 计算下次重试的延迟时间</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Duration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> delay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(config, attempt);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 安排下次重试</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            scheduler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">schedule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                executeWithRetryInternal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(task, config, retryCondition, attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, future);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">delay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MILLISECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 计算重试延迟时间</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">RetryConfig</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> attempt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Duration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> delay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> FIXED</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                delay </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> EXPONENTIAL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> exponentialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">long</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                                              Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMultiplier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                delay </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ofMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(exponentialDelay, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMaxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> FIBONACCI</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                delay </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateFibonacciDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(config, attempt);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            default:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                delay </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> delay;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 计算斐波那契退避延迟</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateFibonacciDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">RetryConfig</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> attempt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> fib1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, fib2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> attempt; i++) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> temp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fib2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            fib2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fib1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fib2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            fib1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> temp;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> delayMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(fib2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInitialDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                                   config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMaxDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ofMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(delayMillis);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.18,words:3054},title:"任务执行与容错机制",type:"article"}}],["/posts/schedule/1-4-4-scheduling-performance-optimization.html",{loader:()=>y(()=>import("./1-4-4-scheduling-performance-optimization.html-ZRV9EkTq.js"),__vite__mapDeps([160,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在大规模分布式任务调度系统中，性能优化是确保系统高效运行的关键因素。随着任务数量的增加和业务复杂度的提升，调度系统面临着并发调度、资源利用、延迟控制等多方面的挑战。本文将深入探讨大规模任务并发调度、数据分片与批处理优化、调度延迟与准确性等关键技术，帮助构建高性能的调度系统。</p>
<h2>大规模任务并发调度</h2>
<p>当系统需要处理成千上万的任务时，如何高效地进行并发调度成为了一个重要问题。合理的并发控制和资源分配策略能够显著提升系统的吞吐量和响应速度。</p>
<h3>任务分发策略</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.atomic.AtomicInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 任务分发器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskDispatcher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ExecutorService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> executorService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskQueueManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> queueManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LoadBalancer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> loadBalancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dispatchedCount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> TaskDispatcher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutorService</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> executorService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                         TaskQueueManager</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> queueManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                         LoadBalancer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> loadBalancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">executorService</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> executorService;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">queueManager</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> queueManager;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">loadBalancer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> loadBalancer;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 并发分发任务列表</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dispatchTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">tasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> concurrencyLevel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        CompletableFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">future</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CompletableFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dispatchFutures</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 将任务分组以控制并发度</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">taskGroups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> partitionTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(tasks, concurrencyLevel);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">taskGroup</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskGroups) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            CompletableFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">supplyAsync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dispatchTaskGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskGroup), executorService);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            dispatchFutures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(groupFuture);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 等待所有分组完成</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">dispatchFutures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toArray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">whenComplete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((voidResult, throwable) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (throwable </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">completeExceptionally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(throwable);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">results</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CompletableFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dispatchFuture</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dispatchFutures) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">dispatchFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TaskDispatchResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Group dispatch failed"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">complete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(results);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> future;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 分发任务组</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskDispatchResult</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dispatchTaskGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">tasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskDispatchInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dispatchInfos</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> successCount</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">errors</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> task</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tasks) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                TaskDispatchInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dispatchInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dispatchSingleTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(task);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                dispatchInfos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dispatchInfo);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">dispatchInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    successCount++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                errors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> TaskDispatchResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dispatchInfos, successCount, errors);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 分发单个任务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskDispatchInfo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dispatchSingleTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 选择合适的执行节点</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ExecutionNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> loadBalancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(task);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (node </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> TaskDispatchInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"No available execution node"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 将任务放入节点队列</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dispatched</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> queueManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enqueueTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), task);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        dispatchedCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dispatched) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> TaskDispatchInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> TaskDispatchInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">failure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Failed to enqueue task"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 将任务列表分组</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> partitionTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">tasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> groupSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> tasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> groupSize) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> groupSize, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">tasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            groups</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">tasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">subList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i, end)));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> groups;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getDispatchedCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> dispatchedCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 可调度任务接口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    TaskPriority</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getPriority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    long</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getEstimatedExecutionTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getRequiredResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 任务优先级枚举</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskPriority</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    LOW</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> MEDIUM</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> HIGH</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> CRITICAL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    TaskPriority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 执行节点</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> capacity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> currentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> availableResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> capacity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> address;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">capacity</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> capacity;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">currentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">availableResources</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> canAcceptTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> currentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> capacity </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">               availableResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">containsAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getRequiredResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> acceptTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> currentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> capacity;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> releaseTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        currentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> address; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCapacity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> capacity; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCurrentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> currentLoad</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getAvailableResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> availableResources; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 负载均衡器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LoadBalancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LoadBalancingStrategy</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LoadBalancer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LoadBalancingStrategy</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CopyOnWriteArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(nodes);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> strategy;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ExecutionNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> selectNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nodes, task);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> addNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(node);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> nodeId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">removeIf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(node </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nodeId));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 负载均衡策略接口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LoadBalancingStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ExecutionNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> selectNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 最少负载策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LeastLoadStrategy</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LoadBalancingStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ExecutionNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> selectNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(node </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">canAcceptTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(task))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Comparator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">comparingInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ExecutionNode</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">getCurrentLoad))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">orElse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 加权轮询策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> WeightedRoundRobinStrategy</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LoadBalancingStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> counter </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ExecutionNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> selectNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SchedulableTask</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionNode</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">availableNodes</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(node </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">canAcceptTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(task))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ArrayList</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, ArrayList</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">add, ArrayList</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">addAll);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">availableNodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> counter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getAndIncrement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> availableNodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> availableNodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(index);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.46,words:4338},title:"调度性能优化",type:"article"}}],["/posts/schedule/1-4-5-security-and-multi-tenancy.html",{loader:()=>y(()=>import("./1-4-5-security-and-multi-tenancy.html-CKbTwC_L.js"),__vite__mapDeps([161,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在企业级分布式任务调度系统中，安全性和多租户支持是两个至关重要的方面。随着系统规模的扩大和用户群体的多样化，如何确保任务数据的安全性、实现有效的权限控制以及支持多租户架构成为系统设计的关键挑战。本文将深入探讨任务隔离与权限控制、任务数据加密与审计、多租户架构设计等核心技术，帮助构建安全可靠的调度系统。</p>
<h2>任务隔离与权限控制</h2>
<p>任务隔离和权限控制是确保系统安全的基础。通过合理的隔离机制和细粒度的权限控制，可以防止未授权访问和恶意操作。</p>
<h3>任务隔离机制</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> java.util.concurrent.locks.ReentrantReadWriteLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 任务隔离策略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskIsolationStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    TENANT_BASED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 基于租户隔离</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    USER_BASED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 基于用户隔离</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    ROLE_BASED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 基于角色隔离</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PROJECT_BASED</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 基于项目隔离</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 任务隔离管理器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskIsolationManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tenantTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> roleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ReentrantReadWriteLock</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> TaskIsolationManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">tenantTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">userTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">roleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ReentrantReadWriteLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 注册任务到租户</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> registerTaskToTenant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            tenantTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">computeIfAbsent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(tenantId, k </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 注册任务到用户</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> registerTaskToUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            userTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">computeIfAbsent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, k </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 注册任务到角色</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> registerTaskToRole</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> roleId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            roleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">computeIfAbsent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(roleId, k </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 检查用户是否有权访问任务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> canUserAccessTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">userRoles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查直接用户权限</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">userTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (userTaskSet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查角色权限</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> roleId</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> userRoles) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roleTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> roleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(roleId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (roleTaskSet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> roleTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查租户权限</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tenantTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> tenantTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(tenantId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (tenantTaskSet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> tenantTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 获取用户可访问的任务列表</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getUserAccessibleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">userRoles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">accessibleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 添加用户直接拥有的任务</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">userTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (userTaskSet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                accessibleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userTaskSet);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 添加用户角色拥有的任务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> roleId</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> userRoles) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roleTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> roleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(roleId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (roleTaskSet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    accessibleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(roleTaskSet);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 添加租户拥有的任务</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tenantTaskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> tenantTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(tenantId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (tenantTaskSet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                accessibleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(tenantTaskSet);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> accessibleTasks;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 移除任务的所有关联</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeTaskAssociations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 从所有用户中移除</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">taskSet</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                taskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 从所有角色中移除</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">taskSet</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> roleTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                taskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 从所有租户中移除</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">taskSet</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> tenantTasks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                taskSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 安全任务执行器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SecureTaskExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskIsolationManager</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> isolationManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PermissionChecker</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> permissionChecker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AuditLogger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecureTaskExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskIsolationManager</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> isolationManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                             PermissionChecker</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> permissionChecker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                             AuditLogger</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">isolationManager</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> isolationManager;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">permissionChecker</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> permissionChecker;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auditLogger;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 安全执行任务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskExecutionResult</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> executeTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">userRoles</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserRoles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 记录审计日志</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">logTaskAccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"EXECUTE_ATTEMPT"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, tenantId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 检查权限</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">isolationManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">canUserAccessTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, userRoles, tenantId)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">logTaskAccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"EXECUTE_DENIED"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, tenantId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecurityException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"用户无权执行任务: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 检查执行权限</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">permissionChecker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hasExecutePermission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, userRoles)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">logTaskAccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"EXECUTE_PERMISSION_DENIED"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, tenantId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecurityException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"用户无执行权限: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 执行任务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">logTaskAccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"EXECUTE_STARTED"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, tenantId);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            TaskExecutionResult</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> doExecuteTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId, context);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">logTaskAccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"EXECUTE_SUCCESS"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, tenantId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            auditLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">logTaskAccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId, taskId, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"EXECUTE_FAILED"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, tenantId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"任务执行失败"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 实际执行任务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskExecutionResult</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> doExecuteTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ExecutionContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 这里应该调用实际的任务执行逻辑</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"执行任务: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "，用户: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> TaskExecutionResult</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"任务执行成功"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 权限检查器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PermissionChecker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> taskPermissions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ReentrantReadWriteLock</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> PermissionChecker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">taskPermissions</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ReentrantReadWriteLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 授予权限</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> grantPermission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> permission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> grantee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> permissionKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ":"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> permission;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            taskPermissions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">computeIfAbsent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(permissionKey, k </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grantee);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 撤销权限</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> revokePermission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> permission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> grantee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> permissionKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ":"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> permission;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> taskPermissions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(permissionKey);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (grantees </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(grantee);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 检查是否有执行权限</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> hasExecutePermission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">userRoles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> permissionKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ":EXECUTE"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> taskPermissions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(permissionKey);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (grantees </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查直接授权</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查角色授权</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> roleId</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> userRoles) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ROLE:"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> roleId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 检查是否有管理权限</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> hasManagePermission</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">userRoles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> permissionKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ":MANAGE"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> taskPermissions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(permissionKey);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (grantees </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查直接授权</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 检查角色授权</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> roleId</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> userRoles) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">grantees</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ROLE:"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> roleId)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:16.22,words:4866},title:"安全与多租户",type:"article"}}],["/posts/schedule/1-5-1-scheduling-platform-enterprise-practices.html",{loader:()=>y(()=>import("./1-5-1-scheduling-platform-enterprise-practices.html-CNPHkHtd.js"),__vite__mapDeps([162,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在企业级应用中，任务调度平台扮演着至关重要的角色。从电商系统的订单处理到金融行业的风险控制，从大数据处理到系统运维，调度平台无处不在。本文将深入探讨调度平台在企业中的典型应用场景，包括电商订单定时关闭、大数据ETL与批量计算、金融风控定时校验等，帮助读者理解如何在实际业务中有效应用调度技术。</p>
<h2>电商订单定时关闭</h2>
<p>在电商系统中，订单定时关闭是一个典型且重要的调度任务。用户下单后，如果在规定时间内未完成支付，系统需要自动关闭订单并释放相关资源。</p>
<h3>业务场景分析</h3>
<p>电商订单定时关闭涉及多个业务环节：</p>
<ol>
<li><strong>订单创建</strong>：用户下单后生成待支付订单</li>
<li><strong>支付超时监控</strong>：监控订单支付状态，在超时后自动关闭</li>
<li><strong>资源释放</strong>：释放库存、优惠券等资源</li>
<li><strong>通知处理</strong>：发送订单关闭通知给用户</li>
</ol>`,readingTime:{minutes:18.84,words:5653},title:"调度平台的企业实践",type:"article"}}],["/posts/schedule/1-5-2-microservices-integration.html",{loader:()=>y(()=>import("./1-5-2-microservices-integration.html-DupE9RkL.js"),__vite__mapDeps([163,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>随着微服务架构的普及，传统的单体应用逐渐被拆分为多个独立的服务。在这种架构下，任务调度系统需要与微服务生态系统深度集成，以充分发挥其价值。本文将深入探讨调度平台如何与Spring Cloud/Spring Boot集成、如何与配置中心联动、以及如何利用服务发现实现智能任务路由等关键技术。</p>
<h2>Spring Cloud/Spring Boot 集成调度框架</h2>
<p>在微服务架构中，Spring Boot和Spring Cloud已成为主流的技术栈。将调度框架与这些技术深度集成，可以大大提高开发效率和系统可维护性。</p>
<h3>Spring Boot 集成 Quartz</h3>`,readingTime:{minutes:13.04,words:3911},title:"与微服务体系的结合",type:"article"}}],["/posts/schedule/1-5-3-monitoring-and-operations.html",{loader:()=>y(()=>import("./1-5-3-monitoring-and-operations.html-DlU1Ju8B.js"),__vite__mapDeps([164,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>在分布式任务调度系统中，监控与运维是确保系统稳定运行和快速故障响应的关键环节。一个完善的监控体系不仅能够实时反映系统运行状态，还能帮助运维人员快速定位和解决问题。本文将深入探讨任务执行日志采集、调度指标监控、告警与自动化运维等核心技术，帮助构建可靠的调度监控运维体系。</p>
<h2>任务执行日志采集</h2>
<p>任务执行日志是了解任务运行状态、排查问题的重要信息来源。在分布式环境中，如何高效地采集、存储和查询日志成为了一个重要挑战。</p>
<h3>日志采集架构</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 任务执行日志实体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> logId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> taskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> groupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> instanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> durationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> hostName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> errorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // constructors</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> groupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">logId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">randomUUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">taskName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskName;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">groupName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> groupName;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RUNNING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 更新结束状态</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> complete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskStatus</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> finalStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> finalStatus;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> message;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">durationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">between</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(startTime, endTime).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 记录错误</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">FAILED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">errorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ExceptionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(error);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">durationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">between</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(startTime, endTime).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getters and setters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getLogId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setLogId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> logId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">logId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getTaskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskName; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setTaskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">taskName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskName; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getGroupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> groupName; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setGroupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> groupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">groupName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> groupName; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getInstanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> instanceId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setInstanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> instanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">instanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> instanceId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> status; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskStatus</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> status; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> message; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> message; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> startTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> startTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> endTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> endTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getDurationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> durationMs; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setDurationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">long</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> durationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">durationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> durationMs; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getHostName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> hostName; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setHostName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> hostName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">hostName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> hostName; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> port; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">port</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> port; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> parameters; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> parameters; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getErrorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> errorStackTrace; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setErrorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> errorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">errorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> errorStackTrace; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getTenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tenantId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setTenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">tenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tenantId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> userId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">userId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> userId; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 任务状态枚举</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    RUNNING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 运行中</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    SUCCESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 成功</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    FAILED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 失败</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    TIMEOUT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 超时</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    CANCELLED</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 已取消</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 日志采集器接口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogCollector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> collectLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> flush</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 异步日志采集器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AsyncLogCollector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogCollector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BlockingQueue</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> logQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogStorage</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> logStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collectorThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> pendingLogs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> running </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AsyncLogCollector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LogStorage</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> logStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> queueSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">logStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logStorage;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">logQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LinkedBlockingQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(queueSize);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">collectorThread</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">collectLogs);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">collectorThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDaemon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">collectorThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> collectLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">logQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">offer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(log)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"日志队列已满，丢弃日志: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            pendingLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> flush</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 等待所有日志被处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">pendingLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> running) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">interrupt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        running </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        collectorThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">interrupt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> collectLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">batch</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (running) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 批量获取日志</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                TaskExecutionLog</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> logQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">poll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (log </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    batch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(log);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    pendingLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrementAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // 如果批次已满或超时，批量存储</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">batch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (log </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">batch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                        logStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">storeLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(batch);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                        batch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"存储日志失败: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        // 重新加入队列进行重试</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                        logQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(batch);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                        pendingLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addAndGet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">batch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                        batch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">interrupt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"日志采集异常: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 日志存储接口</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> storeLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> queryLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LogQueryCondition</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    long</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> countLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LogQueryCondition</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 数据库日志存储实现</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DatabaseLogStorage</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DataSource</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DatabaseLogStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DataSource</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dataSource;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> storeLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "INSERT INTO task_execution_logs ("</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                    "log_id, task_id, task_name, group_name, instance_id, status, "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                    "message, start_time, end_time, duration_ms, host_name, port, "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                    "parameters, error_stack_trace, tenant_id, user_id) "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                    "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Connection</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">             PreparedStatement</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">prepareStatement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(sql)) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            conn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setAutoCommit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logs) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLogId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getGroupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setLong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDurationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getHostName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">13</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toJSONString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getErrorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addBatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">executeBatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            conn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> queryLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LogQueryCondition</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        StringBuilder</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> StringBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"SELECT * FROM task_execution_logs WHERE 1=1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 构建查询条件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND task_id = ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND status = ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND start_time &gt;= ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND start_time &lt;= ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" ORDER BY start_time DESC"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" LIMIT "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskExecutionLog</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">logs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Connection</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">             PreparedStatement</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">prepareStatement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 设置参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); i++) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ResultSet</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> rs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">executeQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mapResultSetToLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(rs));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logs;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> countLogs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LogQueryCondition</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        StringBuilder</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sql</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> StringBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"SELECT COUNT(*) FROM task_execution_logs WHERE 1=1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 构建查询条件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND task_id = ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND status = ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND start_time &gt;= ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" AND start_time &lt;= ?"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Connection</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">             PreparedStatement</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">prepareStatement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">sql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // 设置参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); i++) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ResultSet</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> rs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> stmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">executeQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskExecutionLog</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mapResultSetToLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ResultSet</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SQLException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        TaskExecutionLog</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> TaskExecutionLog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setLogId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"log_id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"task_id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTaskName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"task_name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setGroupName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"group_name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setInstanceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"instance_id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TaskStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"status"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"message"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTimestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"start_time"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toLocalDateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Timestamp</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getTimestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"end_time"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (endTime </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toLocalDateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDurationMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"duration_ms"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setHostName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"host_name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"port"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> parametersJson</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"parameters"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (parametersJson </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parseObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(parametersJson, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setErrorStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"error_stack_trace"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTenantId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"tenant_id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"user_id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> log;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 日志查询条件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryCondition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> limit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // builders</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LogQueryConditionBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // getters and setters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskStatus</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> status; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskStatus</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> status; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> startTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> startTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDateTime</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> endTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> endTime; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> limit; }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> limit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">limit</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> limit; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 日志查询条件构建器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryCondition</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> condition </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LogQueryCondition</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TaskStatus</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(status);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> startTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setStartTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(startTime);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">LocalDateTime</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> endTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setEndTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(endTime);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryConditionBuilder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> limit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> limit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        condition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(limit);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LogQueryCondition</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> condition;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:17.37,words:5212},title:"监控与运维",type:"article"}}],["/posts/schedule/1-6-1-cloud-native-and-containerized-scheduling.html",{loader:()=>y(()=>import("./1-6-1-cloud-native-and-containerized-scheduling.html-lW-fTbGQ.js"),__vite__mapDeps([165,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>随着云原生技术的快速发展，容器化和微服务架构已成为现代应用开发的主流趋势。在这一背景下，任务调度系统也需要适应新的技术环境，与容器编排平台深度集成，实现更高效、弹性的调度能力。本文将深入探讨云原生环境下的调度技术，包括 Kubernetes CronJob 的原理与实践、调度与 Service Mesh 的结合、以及 Serverless 架构下的任务调度等前沿话题。</p>
<h2>Kubernetes CronJob 的原理与实践</h2>
<p>Kubernetes 作为容器编排的事实标准，提供了强大的任务调度能力。其中，CronJob 是 Kubernetes 中用于管理定时任务的核心资源对象，它允许用户以声明式的方式定义和管理定时任务。</p>`,readingTime:{minutes:9.09,words:2726},title:"云原生与容器化调度",type:"article"}}],["/posts/schedule/1-6-2-ai-driven-intelligent-scheduling.html",{loader:()=>y(()=>import("./1-6-2-ai-driven-intelligent-scheduling.html-DphpDF3z.js"),__vite__mapDeps([166,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>随着人工智能技术的快速发展，AI 在各个领域的应用日益广泛。在任务调度领域，AI 技术的引入正在改变传统的调度方式，通过机器学习、深度学习等技术，实现更加智能、自适应的调度决策。本文将深入探讨基于历史数据的任务优化、智能任务优先级与资源分配、AIOps 在调度平台中的应用等前沿技术。</p>
<h2>基于历史数据的任务优化</h2>
<p>AI 驱动的调度系统能够通过分析历史任务执行数据，识别模式和趋势，从而优化未来的调度决策。这种基于数据驱动的方法能够显著提高调度效率和资源利用率。</p>
<h3>任务执行模式识别</h3>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pandas </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> numpy </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> np</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sklearn.cluster </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> KMeans</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sklearn.preprocessing </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> StandardScaler</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> matplotlib.pyplot </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TaskPatternAnalyzer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> __init__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.scaler </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> StandardScaler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.kmeans </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> KMeans</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">n_clusters</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">random_state</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> analyze_task_patterns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> execution_logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        分析任务执行模式</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 转换日志数据为特征矩阵</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        features </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">_extract_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(execution_logs)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 标准化特征</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        scaled_features </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.scaler.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">fit_transform</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(features)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 聚类分析</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        cluster_labels </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.kmeans.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">fit_predict</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(scaled_features)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 分析每个簇的特征</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        pattern_analysis </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">_analyze_clusters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(features, cluster_labels)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pattern_analysis</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> _extract_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> execution_logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        从执行日志中提取特征</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        features </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> log </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> execution_logs:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            feature_vector </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.duration_seconds,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 执行时长</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.cpu_utilization,            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># CPU 使用率</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.memory_utilization,         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 内存使用率</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.io_operations,              </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># IO 操作数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.network_bytes,              </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 网络传输字节</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.error_count,                </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 错误次数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.retry_count,                </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 重试次数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.start_hour,                 </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 启动小时</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.start_day_of_week,          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 启动星期几</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">                len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(log.dependencies),          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 依赖任务数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                log.data_size_mb                </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 处理数据大小</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            features.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(feature_vector)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(features)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> _analyze_clusters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> labels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        分析聚类结果</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        cluster_analysis </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.kmeans.n_clusters):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            cluster_data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> features[labels </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            cluster_analysis[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cluster_</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                'count'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cluster_data),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                'avg_duration'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cluster_data[:, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                'avg_cpu'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cluster_data[:, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                'avg_memory'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cluster_data[:, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                'characteristics'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">_describe_cluster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cluster_data)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> cluster_analysis</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> _describe_cluster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> cluster_data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        描述聚类特征</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        """</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 简化的特征描述逻辑</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        avg_duration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> np.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cluster_data[:, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> avg_duration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "快速轻量级任务"</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> avg_duration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "中等计算任务"</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长时间重计算任务"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用示例</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">analyzer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> TaskPatternAnalyzer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># pattern_analysis = analyzer.analyze_task_patterns(execution_logs)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.65,words:4394},title:"AI 驱动的智能调度",type:"article"}}],["/posts/schedule/1-6-3-summary-and-learning-path.html",{loader:()=>y(()=>import("./1-6-3-summary-and-learning-path.html-D6ko8Mic.js"),__vite__mapDeps([167,1])),meta:{date:1756512e6,category:["Schedule"],tag:["schedule"],excerpt:`<p>经过前五个部分的深入探讨，我们全面了解了分布式任务调度系统的核心概念、实现原理、关键技术以及实践应用。从基础理论到高级架构，从框架解析到企业实践，我们构建了一个完整的分布式任务调度知识体系。本文将对整个系列内容进行总结，并为读者提供从入门到精通的学习路径。</p>
<h2>内容回顾与总结</h2>
<h3>从单机到分布式的演进</h3>
<p>在第一部分基础篇中，我们探讨了为什么需要分布式任务调度系统。从传统的单机 Cron 调度方式的局限性出发，我们认识到在分布式系统中，任务调度面临着更高的复杂性和挑战。我们深入理解了任务调度的核心概念，包括任务、调度器、执行器等基本组件，以及时间表达式、执行模式等关键要素。最后，我们学习了分布式调度的基本模型，掌握了 Master/Worker 架构、状态存储与一致性等核心原理。</p>`,readingTime:{minutes:12.05,words:3616},title:"总结与学习路径",type:"article"}}],["/posts/schedule/",{loader:()=>y(()=>import("./index.html-HyICqOnD.js"),__vite__mapDeps([168,1])),meta:{date:1756744979e3,excerpt:`
<p>本系列文章全面介绍了分布式任务调度系统的核心概念、实现原理、关键技术以及实践应用。从基础理论到高级架构，从框架解析到企业实践，帮助读者构建完整的分布式任务调度知识体系。</p>
<h2>目录结构</h2>
<h3>第一部分 基础篇：理解调度</h3>
<ol>
<li>
<p><a href="/blog-middleware/posts/schedule/1-1-1-why-distributed-scheduling.html" target="_blank">为什么需要分布式任务调度？</a></p>
<ul>
<li><a href="/blog-middleware/posts/schedule/1-1-1-1-limitations-of-single-machine-cron.html" target="_blank">1.1 单机 Cron 的局限</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-1-2-distributed-system-task-requirements.html" target="_blank">1.2 分布式系统中的任务需求</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-1-3-timed-tasks-vs-real-time-tasks.html" target="_blank">1.3 定时任务 vs 实时任务</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-1-4-challenges-and-opportunities-of-distributed-scheduling.html" target="_blank">1.4 分布式调度的挑战与机遇</a></li>
</ul>
</li>
<li>
<p><a href="/blog-middleware/posts/schedule/1-1-2-core-concepts-of-scheduling.html" target="_blank">任务调度的核心概念</a></p>
<ul>
<li><a href="/blog-middleware/posts/schedule/1-1-2-1-tasks-schedulers-executors.html" target="_blank">2.1 任务、调度器、执行器</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-2-2-time-expressions-cron-expression-details.html" target="_blank">2.2 时间表达式（Cron 表达式详解）</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-2-3-one-time-periodic-dependency-execution.html" target="_blank">2.3 单次执行、周期执行、依赖执行</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-2-4-task-status-and-lifecycle-management.html" target="_blank">2.4 任务状态与生命周期管理</a></li>
</ul>
</li>
<li>
<p><a href="/blog-middleware/posts/schedule/1-1-3-basic-model-of-distributed-scheduling.html" target="_blank">分布式调度的基本模型</a></p>
<ul>
<li><a href="/blog-middleware/posts/schedule/1-1-3-1-master-worker-architecture.html" target="_blank">3.1 Master/Worker 架构</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-3-2-scheduling-center-vs-execution-nodes.html" target="_blank">3.2 调度中心 vs 执行节点</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-3-3-state-storage-and-consistency.html" target="_blank">3.3 状态存储与一致性</a></li>
<li><a href="/blog-middleware/posts/schedule/1-1-3-4-communication-mechanisms-in-distributed-scheduling.html" target="_blank">3.4 分布式调度中的通信机制</a></li>
</ul>
</li>
</ol>`,readingTime:{minutes:7.31,words:2193},title:"《分布式任务调度：从入门到精通》索引",type:"article"}}],["/posts/schedule/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-CjXeK-EJ.js"),__vite__mapDeps([169,1])),meta:{date:1756738619e3,excerpt:`
<h2><strong>第一部分 基础篇：理解调度</strong></h2>
<ol>
<li>
<p><strong>为什么需要分布式任务调度？</strong></p>
<ul>
<li>1.1 单机 Cron 的局限</li>
<li>1.2 分布式系统中的任务需求</li>
<li>1.3 定时任务 vs 实时任务</li>
<li>1.4 分布式调度的挑战与机遇</li>
</ul>
</li>
<li>
<p><strong>任务调度的核心概念</strong></p>
<ul>
<li>2.1 任务、调度器、执行器</li>
<li>2.2 时间表达式（Cron 表达式详解）</li>
<li>2.3 单次执行、周期执行、依赖执行</li>
<li>2.4 任务状态与生命周期管理</li>
</ul>
</li>
<li>
<p><strong>分布式调度的基本模型</strong></p>
<ul>
<li>3.1 Master/Worker 架构</li>
<li>3.2 调度中心 vs 执行节点</li>
<li>3.3 状态存储与一致性</li>
<li>3.4 分布式调度中的通信机制</li>
</ul>
</li>
</ol>`,readingTime:{minutes:4.04,words:1211},title:"《分布式任务调度：从入门到精通》目录",type:"article"}}],["/posts/search/1-1-1-traditional-database-vs-search-engine.html",{loader:()=>y(()=>import("./1-1-1-traditional-database-vs-search-engine.html-BOz9HrtE.js"),__vite__mapDeps([170,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在数据处理领域，传统关系型数据库和现代搜索引擎代表了两种截然不同的技术路线。理解它们之间的差异，对于选择合适的技术方案至关重要。本文将从架构设计、数据模型、查询能力、性能特征等多个维度，深入剖析这两种技术的本质区别和适用场景。</p>
<h2>技术架构的根本差异</h2>
<h3>传统关系型数据库的架构设计</h3>
<p>传统关系型数据库（如MySQL、PostgreSQL、Oracle等）基于严格的ACID事务模型设计，强调数据的一致性和完整性。</p>
<h4>核心架构组件</h4>
<ol>
<li><strong>存储引擎</strong>：负责数据的物理存储和检索</li>
<li><strong>查询处理器</strong>：解析和优化SQL查询</li>
<li><strong>事务管理器</strong>：保证事务的ACID特性</li>
<li><strong>缓冲池</strong>：缓存热点数据以提升访问性能</li>
</ol>`,readingTime:{minutes:10.1,words:3031},title:"传统数据库与搜索引擎的技术对决：架构设计与适用场景深度剖析",type:"article"}}],["/posts/search/1-1-2-olap-log-analytics-realtime-demand.html",{loader:()=>y(()=>import("./1-1-2-olap-log-analytics-realtime-demand.html-KJ_a_TIp.js"),__vite__mapDeps([171,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在大数据时代，企业面临着前所未有的数据处理挑战。传统的事务处理系统已经无法满足日益复杂的分析需求，OLAP（在线分析处理）、日志分析和实时分析成为了现代数据架构的三大核心支柱。本文将深入探讨这三种分析需求的技术特点、应用场景和实现方案。</p>
<h2>OLAP：多维数据分析的核心引擎</h2>
<h3>OLAP的基本概念</h3>
<p>OLAP（Online Analytical Processing，联机分析处理）是数据仓库系统的核心组成部分，专门用于支持复杂的分析操作，提供直观的多维数据分析视图。</p>
<h4>OLAP与OLTP的区别</h4>
<table>
<thead>
<tr>
<th>特性</th>
<th>OLTP（在线事务处理）</th>
<th>OLAP（在线分析处理）</th>
</tr>
</thead>
<tbody>
<tr>
<td>主要目标</td>
<td>处理日常业务事务</td>
<td>支持复杂数据分析</td>
</tr>
<tr>
<td>数据操作</td>
<td>增删改查频繁</td>
<td>主要以查询为主</td>
</tr>
<tr>
<td>响应时间</td>
<td>秒级或毫秒级</td>
<td>分钟级或小时级</td>
</tr>
<tr>
<td>数据更新</td>
<td>实时更新</td>
<td>定期批量更新</td>
</tr>
<tr>
<td>数据库设计</td>
<td>高度规范化</td>
<td>面向主题的反规范化</td>
</tr>
<tr>
<td>用户</td>
<td>一线业务人员</td>
<td>决策分析人员</td>
</tr>
</tbody>
</table>`,readingTime:{minutes:11.41,words:3424},title:"OLAP、日志分析与实时分析：现代企业数据处理的三大核心需求",type:"article"}}],["/posts/search/1-1-3-enterprise-information-retrieval-data-driven-decision.html",{loader:()=>y(()=>import("./1-1-3-enterprise-information-retrieval-data-driven-decision.html-Cl9crUFy.js"),__vite__mapDeps([172,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在数字经济时代，信息已成为企业最重要的战略资产之一。如何高效地检索企业内部信息，并基于这些信息做出科学的商业决策，已成为现代企业竞争力的核心体现。本文将深入探讨企业信息检索的挑战与解决方案，以及如何构建数据驱动的决策体系。</p>
<h2>企业信息检索的现状与挑战</h2>
<h3>信息孤岛问题</h3>
<p>现代企业通常拥有多个业务系统，每个系统都产生和存储着大量数据，形成了一个个信息孤岛：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>企业信息系统架构：</span></span>
<span class="line"><span>┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐</span></span>
<span class="line"><span>│   CRM系统       │    │   ERP系统       │    │   OA系统        │</span></span>
<span class="line"><span>│ (客户关系管理)  │    │ (企业资源规划)  │    │ (办公自动化)    │</span></span>
<span class="line"><span>└─────────────────┘    └─────────────────┘    └─────────────────┘</span></span>
<span class="line"><span>        │                       │                       │</span></span>
<span class="line"><span>        └───────────────────────┼───────────────────────┘</span></span>
<span class="line"><span>                                │</span></span>
<span class="line"><span>                    ┌─────────────────┐</span></span>
<span class="line"><span>                    │  数据仓库/湖    │</span></span>
<span class="line"><span>                    └─────────────────┘</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.25,words:2476},title:"企业信息检索与数据驱动决策：构建智能化商业智能体系",type:"article"}}],["/posts/search/1-1-why-search-and-analytics-middleware.html",{loader:()=>y(()=>import("./1-1-why-search-and-analytics-middleware.html-HHA3r5fw.js"),__vite__mapDeps([173,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在当今这个数据驱动的时代，企业和组织每天都在产生和处理海量的数据。从电子商务平台的商品信息到社交媒体的用户互动，从物联网设备的传感器数据到企业内部的业务日志，数据已经成为现代组织最重要的资产之一。然而，如何高效地存储、检索、分析和利用这些数据，成为了每一个企业都必须面对的核心挑战。</p>
<h2>数据爆炸时代的挑战</h2>
<h3>数据量的指数级增长</h3>
<p>根据国际数据公司(IDC)的预测，全球数据总量将从2019年的45ZB增长到2025年的175ZB。这种爆炸式的增长给传统的数据处理方式带来了前所未有的压力：</p>
<ul>
<li><strong>存储压力</strong>：传统的关系型数据库在面对PB级甚至EB级数据时显得力不从心</li>
<li><strong>处理压力</strong>：单台服务器已经无法在合理的时间内处理如此庞大的数据集</li>
<li><strong>查询压力</strong>：用户对数据检索的实时性要求越来越高</li>
</ul>`,readingTime:{minutes:9.03,words:2710},title:"为什么需要搜索与数据分析中间件：数字化时代的数据处理革命",type:"article"}}],["/posts/search/1-2-1-index-inverted-index-forward-index.html",{loader:()=>y(()=>import("./1-2-1-index-inverted-index-forward-index.html-BJ1-6zek.js"),__vite__mapDeps([174,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>索引是搜索与数据分析中间件的核心组件，它决定了数据的存储方式和检索效率。在众多索引技术中，倒排索引（Inverted Index）因其在文本检索方面的卓越性能而成为搜索引擎的基石。本章将深入探讨索引的基本概念、倒排索引与正排索引的技术原理，以及它们在实际应用中的差异。</p>
<h2>索引的本质与分类</h2>
<h3>索引的定义</h3>
<p>在计算机科学中，索引是一种数据结构，用于提高数据检索的速度。在搜索与数据分析领域，索引不仅是一个数据结构，更是一个包含多个文档的逻辑容器。</p>
<h3>索引的分类</h3>
<p>根据数据组织方式的不同，索引可以分为：</p>
<ol>
<li><strong>正排索引（Forward Index）</strong>：按照文档的顺序存储词汇</li>
<li><strong>倒排索引（Inverted Index）</strong>：按照词汇的顺序存储文档</li>
</ol>`,readingTime:{minutes:6.54,words:1963},title:"深入理解索引机制：倒排索引与正排索引的技术原理解析",type:"article"}}],["/posts/search/1-2-2-document-field-tokenization-analyzer.html",{loader:()=>y(()=>import("./1-2-2-document-field-tokenization-analyzer.html-Bs8T9lxa.js"),__vite__mapDeps([175,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在搜索与数据分析中间件中，文档、字段、分词和分析器是构成系统的基础构件。理解这些概念及其相互关系，对于设计和优化搜索系统至关重要。本文将深入探讨这些核心概念的技术细节和实际应用。</p>
<h2>文档：数据的基本单位</h2>
<h3>文档的定义与特征</h3>
<p>文档是搜索与数据分析系统中数据的基本单位，类似于传统数据库中的"行"概念，但具有更丰富的结构和语义。</p>
<h4>文档的核心特征</h4>
<ol>
<li><strong>自包含性</strong>：文档包含描述实体的所有相关信息</li>
<li><strong>层次结构</strong>：支持嵌套对象和复杂数据类型</li>
<li><strong>模式灵活性</strong>：同一索引中的文档可以有不同的字段结构</li>
<li><strong>唯一标识</strong>：每个文档都有唯一的ID</li>
</ol>`,readingTime:{minutes:7.44,words:2232},title:"文档、字段、分词与分析器：构建搜索与分析系统的基础构件",type:"article"}}],["/posts/search/1-2-3-aggregation-filter-sort-scoring.html",{loader:()=>y(()=>import("./1-2-3-aggregation-filter-sort-scoring.html-D6y3zur6.js"),__vite__mapDeps([176,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在搜索与数据分析中间件中，聚合、过滤、排序和评分是四大核心操作机制。它们决定了如何处理、分析和呈现数据，是构建高效搜索和分析系统的关键技术。本文将深入探讨这些机制的技术原理、实现方式和实际应用。</p>
<h2>聚合：数据分析的利器</h2>
<h3>聚合的概念与分类</h3>
<p>聚合是对数据进行分组计算的操作，类似于SQL中的GROUP BY和聚合函数。在搜索与分析系统中，聚合提供了强大的数据分析能力。</p>
<h4>聚合的分类</h4>
<ol>
<li><strong>Bucket聚合</strong>：将文档分组到不同的"桶"中</li>
<li><strong>Metric聚合</strong>：对字段进行计算，如求和、平均值等</li>
<li><strong>Pipeline聚合</strong>：对其他聚合的结果进行再计算</li>
</ol>`,readingTime:{minutes:5.77,words:1732},title:"聚合、过滤、排序与评分：搜索与分析系统的核心操作机制",type:"article"}}],["/posts/search/1-2-core-concepts.html",{loader:()=>y(()=>import("./1-2-core-concepts.html-Beh7xrf0.js"),__vite__mapDeps([177,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在深入学习搜索与数据分析中间件之前，理解其核心概念是至关重要的。这些概念不仅是技术实现的基础，也是我们设计和优化系统的关键指导原则。本章将详细介绍索引、倒排索引、文档、字段、分词与分析器、聚合、过滤、排序和评分等核心概念。</p>
<h2>索引：数据组织的核心</h2>
<p>索引是搜索与数据分析中间件中最基础也是最重要的概念之一。它决定了数据如何被存储、组织和检索。</p>
<h3>索引的定义</h3>
<p>在搜索与数据分析的语境中，索引（Index）有两层含义：</p>
<ol>
<li><strong>作为数据容器</strong>：类似于传统数据库中的"数据库"概念，是存储相关文档的逻辑空间</li>
<li><strong>作为数据结构</strong>：用于加速数据检索的数据结构</li>
</ol>`,readingTime:{minutes:6.28,words:1885},title:"搜索与数据分析中间件核心概念：理解索引、文档与聚合的基石",type:"article"}}],["/posts/search/1-3-1-standalone-vs-distributed-architecture.html",{loader:()=>y(()=>import("./1-3-1-standalone-vs-distributed-architecture.html-DMg18ePA.js"),__vite__mapDeps([178,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在构建搜索与数据分析系统时，架构选型是决定系统性能、可扩展性和可靠性的关键因素。单机架构和分布式架构代表了两种截然不同的设计思路，各有其适用场景和优劣势。本文将深入对比这两种架构，帮助读者在实际项目中做出明智的技术选型决策。</p>
<h2>单机架构：简单而直接的解决方案</h2>
<h3>单机架构的定义与特点</h3>
<p>单机架构是指将整个搜索与分析系统部署在单一服务器上的架构模式。这种架构将所有组件（数据存储、索引构建、查询处理等）集中在一台机器上运行。</p>
<h4>核心特征</h4>
<ol>
<li><strong>集中式管理</strong>：所有组件运行在同一台物理机器上</li>
<li><strong>资源共享</strong>：CPU、内存、存储等资源由所有组件共享</li>
<li><strong>简单部署</strong>：只需配置一台服务器即可运行完整系统</li>
<li><strong>统一维护</strong>：系统维护和监控相对简单</li>
</ol>`,readingTime:{minutes:9.78,words:2934},title:"单机与分布式架构深度对比：搜索与分析系统的技术选型指南",type:"article"}}],["/posts/search/1-3-2-real-time-streaming-vs-batch-processing.html",{loader:()=>y(()=>import("./1-3-2-real-time-streaming-vs-batch-processing.html-CKTByeGW.js"),__vite__mapDeps([179,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在大数据时代，数据处理需求日益多样化，实时数据流处理和离线批处理成为两种核心的数据处理模式。它们各有特点，适用于不同的业务场景。本文将深入探讨这两种处理模式的技术原理、实现方式、优劣势对比以及在实际应用中的结合使用。</p>
<h2>实时数据流处理：即时响应的数据处理引擎</h2>
<h3>实时数据流的概念与特征</h3>
<p>实时数据流处理是指对连续不断产生的数据进行实时处理和分析的技术。它强调低延迟和高吞吐量，能够对数据流中的每个事件进行即时处理。</p>
<h4>核心特征</h4>
<ol>
<li><strong>连续性</strong>：数据源源不断地流入系统</li>
<li><strong>即时性</strong>：数据产生后能够快速得到处理结果</li>
<li><strong>无界性</strong>：数据流理论上是无限的</li>
<li><strong>事件驱动</strong>：基于事件触发处理逻辑</li>
</ol>`,readingTime:{minutes:11.68,words:3505},title:"实时数据流与离线批处理：现代数据处理的双引擎架构",type:"article"}}],["/posts/search/1-3-3-data-ingestion-storage-query-visualization-pipeline.html",{loader:()=>y(()=>import("./1-3-3-data-ingestion-storage-query-visualization-pipeline.html-4yiFoZKx.js"),__vite__mapDeps([180,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在现代数据驱动的企业中，从数据采集到最终可视化的完整链路构成了企业数据处理的核心基础设施。这个端到端的数据处理生态系统需要各个组件紧密协作，才能实现高效、可靠的数据处理和分析。本文将深入探讨数据采集、存储、查询与可视化链路的每个环节，分析其技术实现、最佳实践和优化策略。</p>
<h2>数据采集层：数据处理的起点</h2>
<h3>数据采集的概念与重要性</h3>
<p>数据采集是整个数据处理链路的起点，负责从各种数据源收集数据并将其传输到后续处理系统。高质量的数据采集是构建可靠数据处理系统的基础。</p>
<h4>数据采集的核心要求</h4>
<ol>
<li><strong>完整性</strong>：确保所有数据都被正确采集</li>
<li><strong>准确性</strong>：保证采集到的数据与源数据一致</li>
<li><strong>实时性</strong>：及时采集新产生的数据</li>
<li><strong>可靠性</strong>：在各种故障情况下保证数据不丢失</li>
</ol>`,readingTime:{minutes:14.87,words:4461},title:"数据采集、存储、查询与可视化全链路：构建端到端的数据处理生态系统",type:"article"}}],["/posts/search/1-3-search-analytics-architecture.html",{loader:()=>y(()=>import("./1-3-search-analytics-architecture.html-Up3_Tf00.js"),__vite__mapDeps([181,1])),meta:{date:1756512e6,category:["Search"],tag:["search","data-analysis"],excerpt:`<p>在大数据时代，搜索与数据分析系统已成为企业核心竞争力的重要组成部分。从早期的单机架构到现代的分布式架构，搜索与数据分析技术经历了深刻的演进。本章将深入探讨搜索与数据分析架构的核心概念、技术原理和设计模式，帮助读者全面理解这一领域的技术发展脉络。</p>
<h2>架构演进的历史脉络</h2>
<h3>单机时代的局限性</h3>
<p>在搜索与数据分析技术的早期阶段，系统通常运行在单台服务器上。这种架构虽然简单，但存在明显的局限性：</p>
<ol>
<li><strong>存储容量限制</strong>：单机硬盘容量限制了数据存储规模</li>
<li><strong>计算能力瓶颈</strong>：CPU和内存资源有限，难以处理大规模数据</li>
<li><strong>可用性问题</strong>：单点故障导致整个系统不可用</li>
<li><strong>扩展性不足</strong>：无法通过简单增加硬件来提升性能</li>
</ol>`,readingTime:{minutes:9.03,words:2709},title:"搜索与数据分析架构：从单机到分布式的技术演进之路",type:"article"}}],["/posts/search/",{loader:()=>y(()=>import("./index.html-C76_ooRz.js"),__vite__mapDeps([182,1])),meta:{date:1756740404e3,excerpt:`
<p>本系列文章深入探讨搜索与数据分析中间件的核心概念、技术原理和实际应用，帮助读者全面掌握这一重要技术领域。</p>
<h2>目录</h2>
<h3>第一篇：基础篇 · 搜索与分析概览</h3>
<h4>第1章 为什么需要搜索与数据分析中间件</h4>
<ul>
<li><a href="/blog-middleware/posts/search/1-1-why-search-and-analytics-middleware.html" target="_blank">为什么需要搜索与数据分析中间件：从传统数据库到现代搜索引擎的演进之路</a></li>
<li><a href="/blog-middleware/posts/search/1-1-1-traditional-database-vs-search-engine.html" target="_blank">传统数据库与搜索引擎的对决：技术架构与适用场景深度剖析</a></li>
<li><a href="/blog-middleware/posts/search/1-1-2-olap-log-analytics-realtime-demand.html" target="_blank">OLAP、日志分析与实时分析：现代企业数据处理的三大支柱</a></li>
<li><a href="/blog-middleware/posts/search/1-1-3-enterprise-information-retrieval-data-driven-decision.html" target="_blank">企业信息检索与数据驱动决策：构建智能化商业智能体系</a></li>
</ul>`,readingTime:{minutes:1.74,words:521},title:"搜索与数据分析中间件：从入门到精通",type:"article"}}],["/posts/search/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-BR5ac1vJ.js"),__vite__mapDeps([183,1])),meta:{date:1756738619e3,excerpt:`<p>搜索和数据分析中间件在大数据、日志分析、企业搜索、推荐系统等场景中非常核心。</p>
<p>一书《搜索 &amp; 数据分析中间件：从入门到精通》可以按照 <strong>基础概念 → 核心引擎 → 技术原理 → 数据处理与分析 → 高级优化 → 企业落地 → 未来趋势</strong> 来设计目录。</p>
<hr>
<h1><strong>《搜索 &amp; 数据分析中间件：从入门到精通》目录</strong></h1>
<hr>
<h2><strong>第一篇：基础篇 · 搜索与分析概览</strong></h2>
<ol>
<li>
<p><strong>第1章 为什么需要搜索与数据分析中间件</strong></p>
<ul>
<li>传统数据库 vs 搜索引擎</li>
<li>OLAP、日志分析、实时分析需求</li>
<li>企业信息检索与数据驱动决策</li>
</ul>
</li>
<li>
<p><strong>第2章 核心概念</strong></p>
<ul>
<li>索引、倒排索引、正排索引</li>
<li>文档、字段、分词与分析器</li>
<li>聚合、过滤、排序、评分</li>
</ul>
</li>
<li>
<p><strong>第3章 搜索与数据分析架构</strong></p>
<ul>
<li>单机 vs 分布式架构</li>
<li>实时数据流 vs 离线批处理</li>
<li>数据采集、存储、查询与可视化链路</li>
</ul>
</li>
</ol>`,readingTime:{minutes:3.47,words:1040},title:"《搜索 & 数据分析中间件：从入门到精通》目录",type:"article"}}],["/posts/trace/1-1-why-distributed-tracing-and-monitoring.html",{loader:()=>y(()=>import("./1-1-why-distributed-tracing-and-monitoring.html-CZIqxKq5.js"),__vite__mapDeps([184,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在当今快速发展的数字化时代，软件系统架构正在经历前所未有的变革。从传统的单体应用到复杂的微服务架构，再到云原生和无服务器计算，技术的演进带来了更高的灵活性和可扩展性，但同时也引入了前所未有的复杂性。在这样的背景下，链路追踪与监控技术已成为现代分布式系统不可或缺的基础设施。</p>
<h2>分布式系统的复杂性挑战</h2>
<p>随着业务规模的不断扩大和技术栈的日益多样化，现代软件系统已经远远超出了传统单体应用的范畴。一个典型的电商平台可能包含用户管理、商品展示、购物车、订单处理、支付网关、物流跟踪等数十个甚至上百个微服务，这些服务可能运行在不同的服务器、不同的数据中心，甚至不同的云平台上。</p>`,readingTime:{minutes:5.23,words:1570},title:"为什么需要链路追踪与监控：现代分布式系统的可观测性需求",type:"article"}}],["/posts/trace/1-2-evolution-from-monolith-to-distributed-systems.html",{loader:()=>y(()=>import("./1-2-evolution-from-monolith-to-distributed-systems.html-DhlQ3_Jo.js"),__vite__mapDeps([185,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>软件架构的演进是一个持续的过程，从早期的单体架构到现在的微服务架构，再到云原生和无服务器计算，每一次变革都带来了新的机遇和挑战。在这个过程中，运维监控的需求也在不断变化和发展。本文将深入探讨系统架构的演进历程，以及不同架构下监控需求的变化。</p>
<h2>单体架构时代</h2>
<p>在软件开发的早期阶段，大多数应用都采用单体架构（Monolithic Architecture）。在这种架构下，所有功能模块都部署在同一个应用程序中，共享同一个数据库。这种架构在当时具有显著的优势：</p>
<h3>单体架构的优势</h3>
<ol>
<li><strong>开发简单</strong>：所有代码都在同一个项目中，开发人员可以轻松地访问和修改任何模块。</li>
<li><strong>部署方便</strong>：只需要部署一个应用程序，简化了部署流程。</li>
<li><strong>测试容易</strong>：可以进行端到端的集成测试，确保整个系统的功能正确性。</li>
<li><strong>调试直观</strong>：问题定位相对简单，可以通过日志和调试工具快速找到问题所在。</li>
</ol>`,readingTime:{minutes:7.71,words:2313},title:"从单体到分布式：系统架构演进中的监控需求变迁",type:"article"}}],["/posts/trace/1-3-complexity-of-service-call-chains.html",{loader:()=>y(()=>import("./1-3-complexity-of-service-call-chains.html-DE9nTorv.js"),__vite__mapDeps([186,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在微服务架构中，一个看似简单的用户请求可能需要经过多个服务的协同处理才能完成。这种复杂的调用关系形成了服务调用链，给系统的理解、监控和优化带来了巨大挑战。本文将深入探讨服务调用链的复杂性，分析其形成原因，并介绍如何通过链路追踪技术来应对这些挑战。</p>
<h2>服务调用链的基本概念</h2>
<p>在深入探讨服务调用链的复杂性之前，我们首先需要理解什么是服务调用链。服务调用链是指一个用户请求在微服务系统中经过的所有服务调用的完整路径。它不仅包括服务之间的调用关系，还包括每次调用的时间消耗、状态信息等。</p>
<h3>调用链的组成要素</h3>
<p>一个完整的调用链通常包含以下要素：</p>`,readingTime:{minutes:9.8,words:2940},title:"服务调用链的复杂性：微服务架构下的调用关系解析",type:"article"}}],["/posts/trace/1-4-performance-analysis-and-fault-diagnosis.html",{loader:()=>y(()=>import("./1-4-performance-analysis-and-fault-diagnosis.html-ByDuaSHA.js"),__vite__mapDeps([187,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在微服务架构中，性能分析和故障诊断是运维人员面临的两大核心挑战。随着系统复杂性的增加，传统的监控手段已经无法满足现代分布式系统的需求。本文将深入探讨微服务架构下性能分析与故障诊断的难点，并介绍如何通过链路追踪与监控技术来应对这些挑战。</p>
<h2>传统监控手段的局限性</h2>
<p>在单体架构时代，性能分析和故障诊断相对简单。运维人员可以通过查看应用日志、监控系统资源使用情况等方式快速定位问题。然而，在微服务架构下，这些传统手段面临以下局限性：</p>
<h3>缺乏端到端的可见性</h3>
<p>在微服务架构中，一个用户请求可能需要经过多个服务的协同处理。传统的监控手段通常只能监控单个服务的运行状态，缺乏端到端的可见性：</p>`,readingTime:{minutes:9.32,words:2795},title:"性能分析与故障诊断：微服务架构下的监控挑战与解决方案",type:"article"}}],["/posts/trace/2-1-core-concepts-and-metrics-system.html",{loader:()=>y(()=>import("./2-1-core-concepts-and-metrics-system.html-hb2R-Gjm.js"),__vite__mapDeps([188,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在深入探讨链路追踪与监控技术之前，我们需要首先理解其核心概念和指标体系。这些基础理论不仅是技术实现的基石，也是构建完整可观测性体系的前提。本文将详细介绍链路追踪的核心概念、监控的三大支柱、SLA/SLO/SLI的理解以及指标体系设计原则。</p>
<h2>链路追踪的核心概念</h2>
<p>链路追踪是分布式系统可观测性的重要组成部分，它通过跟踪请求在系统中的完整调用链路，帮助我们理解系统行为、分析性能瓶颈和定位故障根源。要深入理解链路追踪，我们需要掌握以下几个核心概念：</p>
<h3>Span（跨度）</h3>
<p>Span是链路追踪中的基本工作单元，代表一个逻辑运行单元，通常对应一次服务调用、一个函数执行或一个代码块的执行。每个Span包含以下关键信息：</p>`,readingTime:{minutes:7.71,words:2313},title:"核心概念与指标体系：链路追踪与监控的基础理论",type:"article"}}],["/posts/trace/2-2-span-trace-traceid.html",{loader:()=>y(()=>import("./2-2-span-trace-traceid.html-DmlzV4hW.js"),__vite__mapDeps([189,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>链路追踪技术是现代分布式系统可观测性的重要组成部分，它通过跟踪请求在系统中的完整调用链路，帮助我们理解系统行为、分析性能瓶颈和定位故障根源。要深入理解和有效应用链路追踪技术，首先需要掌握其核心概念。本文将深入解析链路追踪的三个核心概念：Span、Trace和TraceID，并探讨它们在实际应用中的实现和最佳实践。</p>
<h2>Span：链路追踪的基本单元</h2>
<p>Span是链路追踪中的基本工作单元，代表一个逻辑运行单元，通常对应一次服务调用、一个函数执行或一个代码块的执行。理解Span的概念和特性是掌握链路追踪技术的基础。</p>
<h3>Span的核心属性</h3>
<p>每个Span都包含以下核心属性：</p>`,readingTime:{minutes:8.81,words:2644},title:"链路追踪核心概念详解：Span、Trace与TraceID的深度解析",type:"article"}}],["/posts/trace/2-3-logs-metrics-traces.html",{loader:()=>y(()=>import("./2-3-logs-metrics-traces.html-Dp3ZfX2o.js"),__vite__mapDeps([190,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代分布式系统的可观测性领域，Logs（日志）、Metrics（指标）和Traces（链路追踪）被称为监控的三大支柱。这三者相互补充，共同构成了完整的系统观测能力。理解这三大支柱的特点、应用场景和相互关系，对于构建有效的监控体系至关重要。本文将深入剖析这三大支柱的核心概念、技术特点和最佳实践。</p>
<h2>Logs（日志）：系统的详细记录</h2>
<p>日志是系统运行过程中产生的事件记录，是了解系统内部状态和行为的重要信息源。日志具有丰富的内容和详细的上下文信息，是故障排查和审计的重要工具。</p>
<h3>日志的核心特征</h3>
<ol>
<li>
<p><strong>丰富性</strong>：日志通常包含详细的上下文信息，如时间戳、线程ID、用户ID、操作详情等。这些信息为问题分析提供了丰富的线索。</p>
</li>
<li>
<p><strong>离散性</strong>：日志是离散的事件记录，每个日志条目代表一个特定的事件或操作。这种特性使得日志能够详细记录系统的每一个重要时刻。</p>
</li>
<li>
<p><strong>高基数</strong>：日志内容可能具有很高的唯一性，特别是在包含详细上下文信息时。这使得日志在提供详细信息的同时，也带来了存储和查询的挑战。</p>
</li>
<li>
<p><strong>不可变性</strong>：一旦生成，日志通常是不可变的，这保证了记录的准确性和完整性。</p>
</li>
</ol>`,readingTime:{minutes:10.09,words:3027},title:"监控三支柱详解：Logs、Metrics、Traces的深度剖析",type:"article"}}],["/posts/trace/2-4-sla-slo-sli.html",{loader:()=>y(()=>import("./2-4-sla-slo-sli.html-DFWvhebg.js"),__vite__mapDeps([191,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代软件服务的运维和管理中，服务质量是衡量系统成功与否的重要标准。为了有效管理和提升服务质量，业界提出了SLA、SLO和SLI三个关键概念。这三个概念构成了服务质量管理体系的核心框架，帮助组织明确服务承诺、设定内部目标并量化服务质量。本文将深入解析SLA、SLO和SLI的定义、关系、设计原则以及在实际应用中的最佳实践。</p>
<h2>SLA、SLO、SLI的基本概念</h2>
<h3>SLA（Service Level Agreement）服务等级协议</h3>
<p>SLA是服务提供方与客户之间达成的正式协议，定义了服务的质量标准、测量方法、责任范围以及违约时的补偿措施。SLA是具有法律约束力的合同条款，直接关系到服务提供方的商业信誉和经济利益。</p>`,readingTime:{minutes:9.69,words:2907},title:"SLA、SLO、SLI深度解析：构建可靠服务质量体系的关键要素",type:"article"}}],["/posts/trace/2-5-metrics-system-design-principles.html",{loader:()=>y(()=>import("./2-5-metrics-system-design-principles.html-UZqbZz5y.js"),__vite__mapDeps([192,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代分布式系统的监控和可观测性实践中，一个科学、有效的指标体系是确保系统稳定运行和持续优化的基础。指标体系不仅需要全面覆盖系统的关键方面，还需要具备良好的可维护性和可扩展性。本文将深入探讨指标体系设计的核心原则，帮助您构建一个既满足当前需求又具备未来扩展能力的监控体系。</p>
<h2>指标体系设计的核心原则</h2>
<h3>业务导向原则</h3>
<p>指标体系设计应以业务价值为导向，重点关注对业务成功至关重要的指标。这要求我们在设计指标体系时，始终从用户和业务的角度出发：</p>
<ol>
<li>
<p><strong>用户价值指标</strong>：</p>
<ul>
<li>用户体验相关指标：页面加载时间、操作响应时间、用户满意度等</li>
<li>用户行为指标：活跃用户数、用户留存率、转化率等</li>
<li>业务成果指标：订单量、收入、市场份额等</li>
</ul>
</li>
<li>
<p><strong>业务健康指标</strong>：</p>
<ul>
<li>核心业务流程指标：订单处理成功率、支付成功率、库存准确率等</li>
<li>业务效率指标：处理时间、资源利用率、自动化程度等</li>
<li>风险控制指标：欺诈检测率、异常行为识别率等</li>
</ul>
</li>
<li>
<p><strong>长期发展指标</strong>：</p>
<ul>
<li>技术债务指标：代码质量、系统复杂度、维护成本等</li>
<li>创新能力指标：新功能上线速度、技术采纳率等</li>
<li>团队效能指标：交付速度、故障恢复时间等</li>
</ul>
</li>
</ol>`,readingTime:{minutes:9.85,words:2956},title:"指标体系设计原则：构建科学有效的监控体系",type:"article"}}],["/posts/trace/4-1-log-structured-and-unstructured.html",{loader:()=>y(()=>import("./4-1-log-structured-and-unstructured.html-D_ytRotq.js"),__vite__mapDeps([193,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代分布式系统中，日志是了解系统运行状态、排查问题和分析用户行为的重要信息源。然而，日志数据的形式多种多样，从结构化的JSON格式到非结构化的纯文本，不同类型的日志在处理和分析上有着显著的差异。本文将深入探讨日志结构化与非结构化的概念、特点以及在实际应用中的处理方法。</p>
<h2>日志的基本概念</h2>
<p>日志是系统在运行过程中产生的事件记录，它记录了系统的行为、状态变化和重要事件。日志对于系统运维、故障排查、安全审计和业务分析都具有重要意义。</p>
<h3>日志的重要性</h3>
<ol>
<li><strong>故障排查</strong>：当系统出现异常时，日志是定位问题的重要线索</li>
<li><strong>性能分析</strong>：通过分析日志可以了解系统的性能瓶颈</li>
<li><strong>安全审计</strong>：日志记录了系统的安全事件，有助于发现潜在的安全威胁</li>
<li><strong>业务分析</strong>：用户行为日志可以帮助分析用户需求和优化产品体验</li>
</ol>`,readingTime:{minutes:6.87,words:2062},title:"日志结构化与非结构化：现代日志处理的基础概念",type:"article"}}],["/posts/trace/4-2-log-collection-tools.html",{loader:()=>y(()=>import("./4-2-log-collection-tools.html-DDSGpCGo.js"),__vite__mapDeps([194,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代分布式系统中，日志采集是构建完整可观测性体系的重要环节。随着系统规模的不断扩大和服务数量的快速增长，如何高效、可靠地收集、处理和传输日志数据成为了运维团队面临的重要挑战。本文将深入探讨三种主流的日志采集工具：Fluentd、Logstash和Filebeat，分析它们的特点、优势和适用场景，帮助您根据实际需求选择合适的工具。</p>
<h2>日志采集工具概述</h2>
<p>日志采集工具是连接应用日志和日志分析平台的桥梁，负责从各种数据源收集日志数据，进行必要的处理和转换，然后将数据传输到目标存储或分析系统。一个优秀的日志采集工具应该具备以下特性：</p>
<ol>
<li><strong>高可靠性</strong>：确保日志数据不丢失</li>
<li><strong>高性能</strong>：能够处理大量的日志数据</li>
<li><strong>灵活性</strong>：支持多种数据源和目标</li>
<li><strong>可扩展性</strong>：能够适应系统规模的变化</li>
<li><strong>易用性</strong>：配置和管理简单</li>
</ol>`,readingTime:{minutes:8.09,words:2427},title:"日志采集工具详解：Fluentd、Logstash、Filebeat的对比与选择",type:"article"}}],["/posts/trace/4-3-distributed-log-aggregation-and-query.html",{loader:()=>y(()=>import("./4-3-distributed-log-aggregation-and-query.html-z_F9V7gT.js"),__vite__mapDeps([195,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代分布式系统中，日志数据的规模和复杂性呈指数级增长。一个典型的微服务架构可能包含数百个服务实例，每个实例都在持续产生大量的日志数据。如何有效地聚合这些分散在不同节点上的日志数据，并提供高效的查询分析能力，成为了构建完整可观测性体系的关键挑战。本文将深入探讨分布式日志聚合与查询的技术实现、架构设计和最佳实践。</p>
<h2>分布式日志聚合的挑战</h2>
<p>在分布式环境中，日志聚合面临着多重挑战，这些挑战直接影响着日志系统的性能、可靠性和可用性。</p>
<h3>数据分散性挑战</h3>
<p>在分布式系统中，日志数据天然地分散在不同的服务实例、不同的物理节点上。这种分散性带来了以下问题：</p>`,readingTime:{minutes:11.79,words:3536},title:"分布式日志聚合与查询：构建高效的日志分析体系",type:"article"}}],["/posts/trace/4-4-log-analysis-and-troubleshooting.html",{loader:()=>y(()=>import("./4-4-log-analysis-and-troubleshooting.html-BQDtu0n9.js"),__vite__mapDeps([196,1])),meta:{date:1756512e6,category:["Trace"],tag:["trace","monitor"],excerpt:`<p>在现代分布式系统中，日志数据是了解系统运行状态、排查故障和优化性能的重要信息源。然而，面对海量的日志数据，如何从中提取有价值的信息并快速定位问题，成为了运维和开发团队面临的重要挑战。本文将深入探讨日志分析与故障排查的方法、工具和最佳实践，帮助您构建高效的日志分析体系。</p>
<h2>日志分析的价值与挑战</h2>
<h3>日志分析的核心价值</h3>
<p>日志分析在现代IT运维中具有不可替代的价值：</p>
<ol>
<li><strong>故障快速定位</strong>：通过分析日志中的错误信息和异常记录，快速定位系统故障的根本原因</li>
<li><strong>性能优化指导</strong>：通过分析日志中的性能数据，识别系统瓶颈并指导优化方向</li>
<li><strong>安全威胁检测</strong>：通过分析安全相关日志，及时发现潜在的安全威胁和攻击行为</li>
<li><strong>业务洞察获取</strong>：通过分析业务日志，了解用户行为模式和业务发展趋势</li>
<li><strong>合规性保障</strong>：通过日志记录满足行业和法规的合规性要求</li>
</ol>`,readingTime:{minutes:9.9,words:2969},title:"日志分析与故障排查：从数据到洞察的实践指南",type:"article"}}],["/posts/trace/",{loader:()=>y(()=>import("./index.html-CADi27DV.js"),__vite__mapDeps([197,1])),meta:{date:1756739272e3,excerpt:`
<p>本目录包含了《链路追踪 &amp; 监控中间件：从入门到精通》一书的所有文章，按照章节组织，方便查阅。</p>
<h2>第一篇：基础篇 · 理解链路与监控</h2>
<h3>第1章 为什么需要链路追踪与监控</h3>
<ol>
<li><a href="/blog-middleware/posts/trace/1-1-why-distributed-tracing-and-monitoring.html" target="_blank">1-1-why-distributed-tracing-and-monitoring.md</a> - 为什么需要链路追踪与监控：从单体到微服务的运维演进</li>
<li><a href="/blog-middleware/posts/trace/1-2-monolith-vs-microservices-challenges.html" target="_blank">1-2-monolith-vs-microservices-challenges.md</a> - 单体 vs 微服务的运维挑战：架构演进中的监控需求变迁</li>
<li><a href="/blog-middleware/posts/trace/1-3-service-call-chain-complexity.html" target="_blank">1-3-service-call-chain-complexity.md</a> - 服务调用链复杂性：微服务架构下的调用关系解析</li>
<li><a href="/blog-middleware/posts/trace/1-4-performance-analysis-and-fault-location.html" target="_blank">1-4-performance-analysis-and-fault-location.md</a> - 性能分析与故障定位难点：微服务架构下的监控挑战</li>
</ol>`,readingTime:{minutes:1.39,words:416},title:"链路追踪 & 监控中间件：从入门到精通",type:"article"}}],["/posts/trace/index-desc.html",{loader:()=>y(()=>import("./index-desc.html-COsPlxsc.js"),__vite__mapDeps([198,1])),meta:{date:1756738619e3,excerpt:`<p>链路追踪（Distributed Tracing）和监控中间件（Observability）在现代分布式系统中至关重要，尤其是微服务架构下的故障排查、性能分析和系统优化。</p>
<p>一本 <strong>《链路追踪 &amp; 监控中间件：从入门到精通》</strong> 可以按照 <strong>基础概念 → 数据采集 → 核心中间件 → 实践案例 → 高级优化 → 企业落地 → 未来趋势</strong> 的逻辑设计目录。</p>
<hr>
<h1><strong>《链路追踪 &amp; 监控中间件：从入门到精通》目录</strong></h1>
<hr>
<h2><strong>第一篇：基础篇 · 理解链路与监控</strong></h2>`,readingTime:{minutes:3.65,words:1094},title:"《链路追踪 & 监控中间件：从入门到精通》目录",type:"article"}}],["/404.html",{loader:()=>y(()=>import("./404.html-CxSYzDoI.js"),__vite__mapDeps([199,1])),meta:{title:""}}],["/posts/",{loader:()=>y(()=>import("./index.html-B1tuDE_i.js"),__vite__mapDeps([200,1])),meta:{title:"Posts"}}],["/posts/distributed-tx/",{loader:()=>y(()=>import("./index.html-B5aAHkZF.js"),__vite__mapDeps([201,1])),meta:{title:"Distributed Tx"}}],["/posts/cache/",{loader:()=>y(()=>import("./index.html-Du13ZOq3.js"),__vite__mapDeps([202,1])),meta:{title:"Cache"}}],["/posts/rpc/",{loader:()=>y(()=>import("./index.html-BACUaFmz.js"),__vite__mapDeps([203,1])),meta:{title:"Rpc"}}],["/category/",{loader:()=>y(()=>import("./index.html-CWYMWPYR.js"),__vite__mapDeps([204,1])),meta:{title:"分类",index:!1}}],["/category/apigateway/",{loader:()=>y(()=>import("./index.html-CgvOq3XV.js"),__vite__mapDeps([205,1])),meta:{title:"ApiGateway 分类",index:!1}}],["/category/distx/",{loader:()=>y(()=>import("./index.html-D1eNHIrT.js"),__vite__mapDeps([206,1])),meta:{title:"DisTx 分类",index:!1}}],["/category/cache/",{loader:()=>y(()=>import("./index.html-wMda9DQX.js"),__vite__mapDeps([207,1])),meta:{title:"Cache 分类",index:!1}}],["/category/mq/",{loader:()=>y(()=>import("./index.html-D45yZDDI.js"),__vite__mapDeps([208,1])),meta:{title:"MQ 分类",index:!1}}],["/category/registercenter/",{loader:()=>y(()=>import("./index.html-DmLz3drc.js"),__vite__mapDeps([209,1])),meta:{title:"RegisterCenter 分类",index:!1}}],["/category/rpc/",{loader:()=>y(()=>import("./index.html-BQqAwLTQ.js"),__vite__mapDeps([210,1])),meta:{title:"rpc 分类",index:!1}}],["/category/schedule/",{loader:()=>y(()=>import("./index.html-D3TPaKR4.js"),__vite__mapDeps([211,1])),meta:{title:"Schedule 分类",index:!1}}],["/category/search/",{loader:()=>y(()=>import("./index.html-hkn13s-k.js"),__vite__mapDeps([212,1])),meta:{title:"Search 分类",index:!1}}],["/category/trace/",{loader:()=>y(()=>import("./index.html-YDwG10AY.js"),__vite__mapDeps([213,1])),meta:{title:"Trace 分类",index:!1}}],["/tag/",{loader:()=>y(()=>import("./index.html-DdUm-Mm3.js"),__vite__mapDeps([214,1])),meta:{title:"标签",index:!1}}],["/tag/api-gateway/",{loader:()=>y(()=>import("./index.html-BEqjP2Yk.js"),__vite__mapDeps([215,1])),meta:{title:"标签: api-gateway",index:!1}}],["/tag/dis-tx/",{loader:()=>y(()=>import("./index.html-CFAjIK3F.js"),__vite__mapDeps([216,1])),meta:{title:"标签: dis-tx",index:!1}}],["/tag/cache/",{loader:()=>y(()=>import("./index.html-E0buBeVK.js"),__vite__mapDeps([217,1])),meta:{title:"标签: cache",index:!1}}],["/tag/mq/",{loader:()=>y(()=>import("./index.html-uO3NARQn.js"),__vite__mapDeps([218,1])),meta:{title:"标签: mq",index:!1}}],["/tag/register-center/",{loader:()=>y(()=>import("./index.html-CJ99pE6X.js"),__vite__mapDeps([219,1])),meta:{title:"标签: register-center",index:!1}}],["/tag/microservices/",{loader:()=>y(()=>import("./index.html-C9YbYG8u.js"),__vite__mapDeps([220,1])),meta:{title:"标签: microservices",index:!1}}],["/tag/service-discovery/",{loader:()=>y(()=>import("./index.html-XsIVhKb7.js"),__vite__mapDeps([221,1])),meta:{title:"标签: service-discovery",index:!1}}],["/tag/heartbeat/",{loader:()=>y(()=>import("./index.html-C-uiTGo4.js"),__vite__mapDeps([222,1])),meta:{title:"标签: heartbeat",index:!1}}],["/tag/apollo/",{loader:()=>y(()=>import("./index.html-Cn3_MVtS.js"),__vite__mapDeps([223,1])),meta:{title:"标签: apollo",index:!1}}],["/tag/rpc/",{loader:()=>y(()=>import("./index.html-CDR82fAa.js"),__vite__mapDeps([224,1])),meta:{title:"标签: rpc",index:!1}}],["/tag/schedule/",{loader:()=>y(()=>import("./index.html-CA0bysPA.js"),__vite__mapDeps([225,1])),meta:{title:"标签: schedule",index:!1}}],["/tag/search/",{loader:()=>y(()=>import("./index.html-D9Fl8PnZ.js"),__vite__mapDeps([226,1])),meta:{title:"标签: search",index:!1}}],["/tag/data-analysis/",{loader:()=>y(()=>import("./index.html-Caa9WEQA.js"),__vite__mapDeps([227,1])),meta:{title:"标签: data-analysis",index:!1}}],["/tag/trace/",{loader:()=>y(()=>import("./index.html-e13PgVFm.js"),__vite__mapDeps([228,1])),meta:{title:"标签: trace",index:!1}}],["/tag/monitor/",{loader:()=>y(()=>import("./index.html-CqU5ukJB.js"),__vite__mapDeps([229,1])),meta:{title:"标签: monitor",index:!1}}],["/article/",{loader:()=>y(()=>import("./index.html-DnvlhJ0o.js"),__vite__mapDeps([230,1])),meta:{title:"文章",index:!1}}],["/star/",{loader:()=>y(()=>import("./index.html-DVaI5dFp.js"),__vite__mapDeps([231,1])),meta:{title:"星标",index:!1}}],["/timeline/",{loader:()=>y(()=>import("./index.html-f4n5m2bQ.js"),__vite__mapDeps([232,1])),meta:{title:"时间轴",index:!1}}]]);/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const jl=typeof document<"u";function hp(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function c2(i){return i.__esModule||i[Symbol.toStringTag]==="Module"||i.default&&hp(i.default)}const ui=Object.assign;function rt(i,s){const l={};for(const e in s){const n=s[e];l[e]=bs(n)?n.map(i):i(n)}return l}const Ee=()=>{},bs=Array.isArray,rp=/#/g,g2=/&/g,o2=/\//g,u2=/=/g,A2=/\?/g,kp=/\+/g,y2=/%5B/g,B2=/%5D/g,pp=/%5E/g,v2=/%60/g,dp=/%7B/g,m2=/%7C/g,cp=/%7D/g,F2=/%20/g;function Ca(i){return encodeURI(""+i).replace(m2,"|").replace(y2,"[").replace(B2,"]")}function f2(i){return Ca(i).replace(dp,"{").replace(cp,"}").replace(pp,"^")}function Pt(i){return Ca(i).replace(kp,"%2B").replace(F2,"+").replace(rp,"%23").replace(g2,"%26").replace(v2,"`").replace(dp,"{").replace(cp,"}").replace(pp,"^")}function C2(i){return Pt(i).replace(u2,"%3D")}function E2(i){return Ca(i).replace(rp,"%23").replace(A2,"%3F")}function b2(i){return i==null?"":E2(i).replace(o2,"%2F")}function Pe(i){try{return decodeURIComponent(""+i)}catch{}return""+i}const _2=/\/$/,D2=i=>i.replace(_2,"");function kt(i,s,l="/"){let e,n={},t="",a="";const h=s.indexOf("#");let k=s.indexOf("?");return h<k&&h>=0&&(k=-1),k>-1&&(e=s.slice(0,k),t=s.slice(k+1,h>-1?h:s.length),n=i(t)),h>-1&&(e=e||s.slice(0,h),a=s.slice(h,s.length)),e=x2(e??s,l),{fullPath:e+(t&&"?")+t+a,path:e,query:n,hash:Pe(a)}}function S2(i,s){const l=s.query?i(s.query):"";return s.path+(l&&"?")+l+(s.hash||"")}function qh(i,s){return!s||!i.toLowerCase().startsWith(s.toLowerCase())?i:i.slice(s.length)||"/"}function T2(i,s,l){const e=s.matched.length-1,n=l.matched.length-1;return e>-1&&e===n&&ne(s.matched[e],l.matched[n])&&gp(s.params,l.params)&&i(s.query)===i(l.query)&&s.hash===l.hash}function ne(i,s){return(i.aliasOf||i)===(s.aliasOf||s)}function gp(i,s){if(Object.keys(i).length!==Object.keys(s).length)return!1;for(const l in i)if(!w2(i[l],s[l]))return!1;return!0}function w2(i,s){return bs(i)?Uh(i,s):bs(s)?Uh(s,i):i===s}function Uh(i,s){return bs(s)?i.length===s.length&&i.every((l,e)=>l===s[e]):i.length===1&&i[0]===s}function x2(i,s){if(i.startsWith("/"))return i;if(!i)return s;const l=s.split("/"),e=i.split("/"),n=e[e.length-1];(n===".."||n===".")&&e.push("");let t=l.length-1,a,h;for(a=0;a<e.length;a++)if(h=e[a],h!==".")if(h==="..")t>1&&t--;else break;return l.slice(0,t).join("/")+"/"+e.slice(a).join("/")}const zs={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var Ie;(function(i){i.pop="pop",i.push="push"})(Ie||(Ie={}));var be;(function(i){i.back="back",i.forward="forward",i.unknown=""})(be||(be={}));function L2(i){if(!i)if(jl){const s=document.querySelector("base");i=s&&s.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),D2(i)}const R2=/^[^#]+#/;function P2(i,s){return i.replace(R2,"#")+s}function I2(i,s){const l=document.documentElement.getBoundingClientRect(),e=i.getBoundingClientRect();return{behavior:s.behavior,left:e.left-l.left-(s.left||0),top:e.top-l.top-(s.top||0)}}const Vn=()=>({left:window.scrollX,top:window.scrollY});function O2(i){let s;if("el"in i){const l=i.el,e=typeof l=="string"&&l.startsWith("#"),n=typeof l=="string"?e?document.getElementById(l.slice(1)):document.querySelector(l):l;if(!n)return;s=I2(n,i)}else s=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(s):window.scrollTo(s.left!=null?s.left:window.scrollX,s.top!=null?s.top:window.scrollY)}function Gh(i,s){return(history.state?history.state.position-s:-1)+i}const It=new Map;function M2(i,s){It.set(i,s)}function N2(i){const s=It.get(i);return It.delete(i),s}let $2=()=>location.protocol+"//"+location.host;function op(i,s){const{pathname:l,search:e,hash:n}=s,t=i.indexOf("#");if(t>-1){let h=n.includes(i.slice(t))?i.slice(t).length:1,k=n.slice(h);return k[0]!=="/"&&(k="/"+k),qh(k,"")}return qh(l,i)+e+n}function j2(i,s,l,e){let n=[],t=[],a=null;const h=({state:g})=>{const o=op(i,location),B=l.value,m=s.value;let E=0;if(g){if(l.value=o,s.value=g,a&&a===B){a=null;return}E=m?g.position-m.position:0}else e(o);n.forEach(_=>{_(l.value,B,{delta:E,type:Ie.pop,direction:E?E>0?be.forward:be.back:be.unknown})})};function k(){a=l.value}function d(g){n.push(g);const o=()=>{const B=n.indexOf(g);B>-1&&n.splice(B,1)};return t.push(o),o}function p(){const{history:g}=window;g.state&&g.replaceState(ui({},g.state,{scroll:Vn()}),"")}function c(){for(const g of t)g();t=[],window.removeEventListener("popstate",h),window.removeEventListener("beforeunload",p)}return window.addEventListener("popstate",h),window.addEventListener("beforeunload",p,{passive:!0}),{pauseListeners:k,listen:d,destroy:c}}function Wh(i,s,l,e=!1,n=!1){return{back:i,current:s,forward:l,replaced:e,position:window.history.length,scroll:n?Vn():null}}function V2(i){const{history:s,location:l}=window,e={value:op(i,l)},n={value:s.state};n.value||t(e.value,{back:null,current:e.value,forward:null,position:s.length-1,replaced:!0,scroll:null},!0);function t(k,d,p){const c=i.indexOf("#"),g=c>-1?(l.host&&document.querySelector("base")?i:i.slice(c))+k:$2()+i+k;try{s[p?"replaceState":"pushState"](d,"",g),n.value=d}catch(o){console.error(o),l[p?"replace":"assign"](g)}}function a(k,d){const p=ui({},s.state,Wh(n.value.back,k,n.value.forward,!0),d,{position:n.value.position});t(k,p,!0),e.value=k}function h(k,d){const p=ui({},n.value,s.state,{forward:k,scroll:Vn()});t(p.current,p,!0);const c=ui({},Wh(e.value,k,null),{position:p.position+1},d);t(k,c,!1),e.value=k}return{location:e,state:n,push:h,replace:a}}function H2(i){i=L2(i);const s=V2(i),l=j2(i,s.state,s.location,s.replace);function e(t,a=!0){a||l.pauseListeners(),history.go(t)}const n=ui({location:"",base:i,go:e,createHref:P2.bind(null,i)},s,l);return Object.defineProperty(n,"location",{enumerable:!0,get:()=>s.location.value}),Object.defineProperty(n,"state",{enumerable:!0,get:()=>s.state.value}),n}function z2(i){return typeof i=="string"||i&&typeof i=="object"}function up(i){return typeof i=="string"||typeof i=="symbol"}const Ap=Symbol("");var Kh;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(Kh||(Kh={}));function te(i,s){return ui(new Error,{type:i,[Ap]:!0},s)}function Vs(i,s){return i instanceof Error&&Ap in i&&(s==null||!!(i.type&s))}const Qh="[^/]+?",q2={sensitive:!1,strict:!1,start:!0,end:!0},U2=/[.+*?^${}()[\]/\\]/g;function G2(i,s){const l=ui({},q2,s),e=[];let n=l.start?"^":"";const t=[];for(const d of i){const p=d.length?[]:[90];l.strict&&!d.length&&(n+="/");for(let c=0;c<d.length;c++){const g=d[c];let o=40+(l.sensitive?.25:0);if(g.type===0)c||(n+="/"),n+=g.value.replace(U2,"\\$&"),o+=40;else if(g.type===1){const{value:B,repeatable:m,optional:E,regexp:_}=g;t.push({name:B,repeatable:m,optional:E});const f=_||Qh;if(f!==Qh){o+=10;try{new RegExp(`(${f})`)}catch(F){throw new Error(`Invalid custom RegExp for param "${B}" (${f}): `+F.message)}}let A=m?`((?:${f})(?:/(?:${f}))*)`:`(${f})`;c||(A=E&&d.length<2?`(?:/${A})`:"/"+A),E&&(A+="?"),n+=A,o+=20,E&&(o+=-8),m&&(o+=-20),f===".*"&&(o+=-50)}p.push(o)}e.push(p)}if(l.strict&&l.end){const d=e.length-1;e[d][e[d].length-1]+=.7000000000000001}l.strict||(n+="/?"),l.end?n+="$":l.strict&&!n.endsWith("/")&&(n+="(?:/|$)");const a=new RegExp(n,l.sensitive?"":"i");function h(d){const p=d.match(a),c={};if(!p)return null;for(let g=1;g<p.length;g++){const o=p[g]||"",B=t[g-1];c[B.name]=o&&B.repeatable?o.split("/"):o}return c}function k(d){let p="",c=!1;for(const g of i){(!c||!p.endsWith("/"))&&(p+="/"),c=!1;for(const o of g)if(o.type===0)p+=o.value;else if(o.type===1){const{value:B,repeatable:m,optional:E}=o,_=B in d?d[B]:"";if(bs(_)&&!m)throw new Error(`Provided param "${B}" is an array but it is not repeatable (* or + modifiers)`);const f=bs(_)?_.join("/"):_;if(!f)if(E)g.length<2&&(p.endsWith("/")?p=p.slice(0,-1):c=!0);else throw new Error(`Missing required param "${B}"`);p+=f}}return p||"/"}return{re:a,score:e,keys:t,parse:h,stringify:k}}function W2(i,s){let l=0;for(;l<i.length&&l<s.length;){const e=s[l]-i[l];if(e)return e;l++}return i.length<s.length?i.length===1&&i[0]===80?-1:1:i.length>s.length?s.length===1&&s[0]===80?1:-1:0}function yp(i,s){let l=0;const e=i.score,n=s.score;for(;l<e.length&&l<n.length;){const t=W2(e[l],n[l]);if(t)return t;l++}if(Math.abs(n.length-e.length)===1){if(Jh(e))return 1;if(Jh(n))return-1}return n.length-e.length}function Jh(i){const s=i[i.length-1];return i.length>0&&s[s.length-1]<0}const K2={type:0,value:""},Q2=/[a-zA-Z0-9_]/;function J2(i){if(!i)return[[]];if(i==="/")return[[K2]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function s(o){throw new Error(`ERR (${l})/"${d}": ${o}`)}let l=0,e=l;const n=[];let t;function a(){t&&n.push(t),t=[]}let h=0,k,d="",p="";function c(){d&&(l===0?t.push({type:0,value:d}):l===1||l===2||l===3?(t.length>1&&(k==="*"||k==="+")&&s(`A repeatable param (${d}) must be alone in its segment. eg: '/:ids+.`),t.push({type:1,value:d,regexp:p,repeatable:k==="*"||k==="+",optional:k==="*"||k==="?"})):s("Invalid state to consume buffer"),d="")}function g(){d+=k}for(;h<i.length;){if(k=i[h++],k==="\\"&&l!==2){e=l,l=4;continue}switch(l){case 0:k==="/"?(d&&c(),a()):k===":"?(c(),l=1):g();break;case 4:g(),l=e;break;case 1:k==="("?l=2:Q2.test(k)?g():(c(),l=0,k!=="*"&&k!=="?"&&k!=="+"&&h--);break;case 2:k===")"?p[p.length-1]=="\\"?p=p.slice(0,-1)+k:l=3:p+=k;break;case 3:c(),l=0,k!=="*"&&k!=="?"&&k!=="+"&&h--,p="";break;default:s("Unknown state");break}}return l===2&&s(`Unfinished custom RegExp for param "${d}"`),c(),a(),n}function Z2(i,s,l){const e=G2(J2(i.path),l),n=ui(e,{record:i,parent:s,children:[],alias:[]});return s&&!n.record.aliasOf==!s.record.aliasOf&&s.children.push(n),n}function Y2(i,s){const l=[],e=new Map;s=ir({strict:!1,end:!0,sensitive:!1},s);function n(c){return e.get(c)}function t(c,g,o){const B=!o,m=Yh(c);m.aliasOf=o&&o.record;const E=ir(s,c),_=[m];if("alias"in c){const F=typeof c.alias=="string"?[c.alias]:c.alias;for(const w of F)_.push(Yh(ui({},m,{components:o?o.record.components:m.components,path:w,aliasOf:o?o.record:m})))}let f,A;for(const F of _){const{path:w}=F;if(g&&w[0]!=="/"){const j=g.record.path,M=j[j.length-1]==="/"?"":"/";F.path=g.record.path+(w&&M+w)}if(f=Z2(F,g,E),o?o.alias.push(f):(A=A||f,A!==f&&A.alias.push(f),B&&c.name&&!Xh(f)&&a(c.name)),Bp(f)&&k(f),m.children){const j=m.children;for(let M=0;M<j.length;M++)t(j[M],f,o&&o.children[M])}o=o||f}return A?()=>{a(A)}:Ee}function a(c){if(up(c)){const g=e.get(c);g&&(e.delete(c),l.splice(l.indexOf(g),1),g.children.forEach(a),g.alias.forEach(a))}else{const g=l.indexOf(c);g>-1&&(l.splice(g,1),c.record.name&&e.delete(c.record.name),c.children.forEach(a),c.alias.forEach(a))}}function h(){return l}function k(c){const g=su(c,l);l.splice(g,0,c),c.record.name&&!Xh(c)&&e.set(c.record.name,c)}function d(c,g){let o,B={},m,E;if("name"in c&&c.name){if(o=e.get(c.name),!o)throw te(1,{location:c});E=o.record.name,B=ui(Zh(g.params,o.keys.filter(A=>!A.optional).concat(o.parent?o.parent.keys.filter(A=>A.optional):[]).map(A=>A.name)),c.params&&Zh(c.params,o.keys.map(A=>A.name))),m=o.stringify(B)}else if(c.path!=null)m=c.path,o=l.find(A=>A.re.test(m)),o&&(B=o.parse(m),E=o.record.name);else{if(o=g.name?e.get(g.name):l.find(A=>A.re.test(g.path)),!o)throw te(1,{location:c,currentLocation:g});E=o.record.name,B=ui({},g.params,c.params),m=o.stringify(B)}const _=[];let f=o;for(;f;)_.unshift(f.record),f=f.parent;return{name:E,path:m,params:B,matched:_,meta:iu(_)}}i.forEach(c=>t(c));function p(){l.length=0,e.clear()}return{addRoute:t,resolve:d,removeRoute:a,clearRoutes:p,getRoutes:h,getRecordMatcher:n}}function Zh(i,s){const l={};for(const e of s)e in i&&(l[e]=i[e]);return l}function Yh(i){const s={path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:i.aliasOf,beforeEnter:i.beforeEnter,props:X2(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}};return Object.defineProperty(s,"mods",{value:{}}),s}function X2(i){const s={},l=i.props||!1;if("component"in i)s.default=l;else for(const e in i.components)s[e]=typeof l=="object"?l[e]:l;return s}function Xh(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function iu(i){return i.reduce((s,l)=>ui(s,l.meta),{})}function ir(i,s){const l={};for(const e in i)l[e]=e in s?s[e]:i[e];return l}function su(i,s){let l=0,e=s.length;for(;l!==e;){const t=l+e>>1;yp(i,s[t])<0?e=t:l=t+1}const n=lu(i);return n&&(e=s.lastIndexOf(n,e-1)),e}function lu(i){let s=i;for(;s=s.parent;)if(Bp(s)&&yp(i,s)===0)return s}function Bp({record:i}){return!!(i.name||i.components&&Object.keys(i.components).length||i.redirect)}function eu(i){const s={};if(i===""||i==="?")return s;const e=(i[0]==="?"?i.slice(1):i).split("&");for(let n=0;n<e.length;++n){const t=e[n].replace(kp," "),a=t.indexOf("="),h=Pe(a<0?t:t.slice(0,a)),k=a<0?null:Pe(t.slice(a+1));if(h in s){let d=s[h];bs(d)||(d=s[h]=[d]),d.push(k)}else s[h]=k}return s}function sr(i){let s="";for(let l in i){const e=i[l];if(l=C2(l),e==null){e!==void 0&&(s+=(s.length?"&":"")+l);continue}(bs(e)?e.map(t=>t&&Pt(t)):[e&&Pt(e)]).forEach(t=>{t!==void 0&&(s+=(s.length?"&":"")+l,t!=null&&(s+="="+t))})}return s}function nu(i){const s={};for(const l in i){const e=i[l];e!==void 0&&(s[l]=bs(e)?e.map(n=>n==null?null:""+n):e==null?e:""+e)}return s}const tu=Symbol(""),lr=Symbol(""),Hn=Symbol(""),Ea=Symbol(""),Ot=Symbol("");function Ae(){let i=[];function s(e){return i.push(e),()=>{const n=i.indexOf(e);n>-1&&i.splice(n,1)}}function l(){i=[]}return{add:s,list:()=>i.slice(),reset:l}}function rl(i,s,l,e,n,t=a=>a()){const a=e&&(e.enterCallbacks[n]=e.enterCallbacks[n]||[]);return()=>new Promise((h,k)=>{const d=g=>{g===!1?k(te(4,{from:l,to:s})):g instanceof Error?k(g):z2(g)?k(te(2,{from:s,to:g})):(a&&e.enterCallbacks[n]===a&&typeof g=="function"&&a.push(g),h())},p=t(()=>i.call(e&&e.instances[n],s,l,d));let c=Promise.resolve(p);i.length<3&&(c=c.then(d)),c.catch(g=>k(g))})}function pt(i,s,l,e,n=t=>t()){const t=[];for(const a of i)for(const h in a.components){let k=a.components[h];if(!(s!=="beforeRouteEnter"&&!a.instances[h]))if(hp(k)){const p=(k.__vccOpts||k)[s];p&&t.push(rl(p,l,e,a,h,n))}else{let d=k();t.push(()=>d.then(p=>{if(!p)throw new Error(`Couldn't resolve component "${h}" at "${a.path}"`);const c=c2(p)?p.default:p;a.mods[h]=p,a.components[h]=c;const o=(c.__vccOpts||c)[s];return o&&rl(o,l,e,a,h,n)()}))}}return t}function er(i){const s=bi(Hn),l=bi(Ea),e=C(()=>{const k=dl(i.to);return s.resolve(k)}),n=C(()=>{const{matched:k}=e.value,{length:d}=k,p=k[d-1],c=l.matched;if(!p||!c.length)return-1;const g=c.findIndex(ne.bind(null,p));if(g>-1)return g;const o=nr(k[d-2]);return d>1&&nr(p)===o&&c[c.length-1].path!==o?c.findIndex(ne.bind(null,k[d-2])):g}),t=C(()=>n.value>-1&&pu(l.params,e.value.params)),a=C(()=>n.value>-1&&n.value===l.matched.length-1&&gp(l.params,e.value.params));function h(k={}){if(ku(k)){const d=s[dl(i.replace)?"replace":"push"](dl(i.to)).catch(Ee);return i.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>d),d}return Promise.resolve()}return{route:e,href:C(()=>e.value.href),isActive:t,isExactActive:a,navigate:h}}function au(i){return i.length===1?i[0]:i}const hu=O({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink:er,setup(i,{slots:s}){const l=bl(er(i)),{options:e}=bi(Hn),n=C(()=>({[tr(i.activeClass,e.linkActiveClass,"router-link-active")]:l.isActive,[tr(i.exactActiveClass,e.linkExactActiveClass,"router-link-exact-active")]:l.isExactActive}));return()=>{const t=s.default&&au(s.default(l));return i.custom?t:r("a",{"aria-current":l.isExactActive?i.ariaCurrentValue:null,href:l.href,onClick:l.navigate,class:n.value},t)}}}),ru=hu;function ku(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const s=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(s))return}return i.preventDefault&&i.preventDefault(),!0}}function pu(i,s){for(const l in s){const e=s[l],n=i[l];if(typeof e=="string"){if(e!==n)return!1}else if(!bs(n)||n.length!==e.length||e.some((t,a)=>t!==n[a]))return!1}return!0}function nr(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const tr=(i,s,l)=>i??s??l,du=O({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:s,slots:l}){const e=bi(Ot),n=C(()=>i.route||e.value),t=bi(lr,0),a=C(()=>{let d=dl(t);const{matched:p}=n.value;let c;for(;(c=p[d])&&!c.components;)d++;return d}),h=C(()=>n.value.matched[a.value]);Cs(lr,C(()=>a.value+1)),Cs(tu,h),Cs(Ot,n);const k=ii();return Si(()=>[k.value,h.value,i.name],([d,p,c],[g,o,B])=>{p&&(p.instances[c]=d,o&&o!==p&&d&&d===g&&(p.leaveGuards.size||(p.leaveGuards=o.leaveGuards),p.updateGuards.size||(p.updateGuards=o.updateGuards))),d&&p&&(!o||!ne(p,o)||!g)&&(p.enterCallbacks[c]||[]).forEach(m=>m(d))},{flush:"post"}),()=>{const d=n.value,p=i.name,c=h.value,g=c&&c.components[p];if(!g)return ar(l.default,{Component:g,route:d});const o=c.props[p],B=o?o===!0?d.params:typeof o=="function"?o(d):o:null,E=r(g,ui({},B,s,{onVnodeUnmounted:_=>{_.component.isUnmounted&&(c.instances[p]=null)},ref:k}));return ar(l.default,{Component:E,route:d})||E}}});function ar(i,s){if(!i)return null;const l=i(s);return l.length===1?l[0]:l}const cu=du;function gu(i){const s=Y2(i.routes,i),l=i.parseQuery||eu,e=i.stringifyQuery||sr,n=i.history,t=Ae(),a=Ae(),h=Ae(),k=ei(zs);let d=zs;jl&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const p=rt.bind(null,S=>""+S),c=rt.bind(null,b2),g=rt.bind(null,Pe);function o(S,W){let q,J;return up(S)?(q=s.getRecordMatcher(S),J=W):J=S,s.addRoute(J,q)}function B(S){const W=s.getRecordMatcher(S);W&&s.removeRoute(W)}function m(){return s.getRoutes().map(S=>S.record)}function E(S){return!!s.getRecordMatcher(S)}function _(S,W){if(W=ui({},W||k.value),typeof S=="string"){const v=kt(l,S,W.path),b=s.resolve({path:v.path},W),x=n.createHref(v.fullPath);return ui(v,b,{params:g(b.params),hash:Pe(v.hash),redirectedFrom:void 0,href:x})}let q;if(S.path!=null)q=ui({},S,{path:kt(l,S.path,W.path).path});else{const v=ui({},S.params);for(const b in v)v[b]==null&&delete v[b];q=ui({},S,{params:c(v)}),W.params=c(W.params)}const J=s.resolve(q,W),gi=S.hash||"";J.params=p(g(J.params));const vi=S2(e,ui({},S,{hash:f2(gi),path:J.path})),u=n.createHref(vi);return ui({fullPath:vi,hash:gi,query:e===sr?nu(S.query):S.query||{}},J,{redirectedFrom:void 0,href:u})}function f(S){return typeof S=="string"?kt(l,S,k.value.path):ui({},S)}function A(S,W){if(d!==S)return te(8,{from:W,to:S})}function F(S){return M(S)}function w(S){return F(ui(f(S),{replace:!0}))}function j(S){const W=S.matched[S.matched.length-1];if(W&&W.redirect){const{redirect:q}=W;let J=typeof q=="function"?q(S):q;return typeof J=="string"&&(J=J.includes("?")||J.includes("#")?J=f(J):{path:J},J.params={}),ui({query:S.query,hash:S.hash,params:J.path!=null?{}:S.params},J)}}function M(S,W){const q=d=_(S),J=k.value,gi=S.state,vi=S.force,u=S.replace===!0,v=j(q);if(v)return M(ui(f(v),{state:typeof v=="object"?ui({},gi,v.state):gi,force:vi,replace:u}),W||q);const b=q;b.redirectedFrom=W;let x;return!vi&&T2(e,J,q)&&(x=te(16,{to:b,from:J}),zi(J,J,!0,!1)),(x?Promise.resolve(x):P(b,J)).catch(T=>Vs(T)?Vs(T,2)?T:ss(T):Q(T,b,J)).then(T=>{if(T){if(Vs(T,2))return M(ui({replace:u},f(T.to),{state:typeof T.to=="object"?ui({},gi,T.to.state):gi,force:vi}),W||b)}else T=R(b,J,!0,u,gi);return H(b,J,T),T})}function z(S,W){const q=A(S,W);return q?Promise.reject(q):Promise.resolve()}function D(S){const W=$s.values().next().value;return W&&typeof W.runWithContext=="function"?W.runWithContext(S):S()}function P(S,W){let q;const[J,gi,vi]=ou(S,W);q=pt(J.reverse(),"beforeRouteLeave",S,W);for(const v of J)v.leaveGuards.forEach(b=>{q.push(rl(b,S,W))});const u=z.bind(null,S,W);return q.push(u),$i(q).then(()=>{q=[];for(const v of t.list())q.push(rl(v,S,W));return q.push(u),$i(q)}).then(()=>{q=pt(gi,"beforeRouteUpdate",S,W);for(const v of gi)v.updateGuards.forEach(b=>{q.push(rl(b,S,W))});return q.push(u),$i(q)}).then(()=>{q=[];for(const v of vi)if(v.beforeEnter)if(bs(v.beforeEnter))for(const b of v.beforeEnter)q.push(rl(b,S,W));else q.push(rl(v.beforeEnter,S,W));return q.push(u),$i(q)}).then(()=>(S.matched.forEach(v=>v.enterCallbacks={}),q=pt(vi,"beforeRouteEnter",S,W,D),q.push(u),$i(q))).then(()=>{q=[];for(const v of a.list())q.push(rl(v,S,W));return q.push(u),$i(q)}).catch(v=>Vs(v,8)?v:Promise.reject(v))}function H(S,W,q){h.list().forEach(J=>D(()=>J(S,W,q)))}function R(S,W,q,J,gi){const vi=A(S,W);if(vi)return vi;const u=W===zs,v=jl?history.state:{};q&&(J||u?n.replace(S.fullPath,ui({scroll:u&&v&&v.scroll},gi)):n.push(S.fullPath,gi)),k.value=S,zi(S,W,q,u),ss()}let Z;function G(){Z||(Z=n.listen((S,W,q)=>{if(!ws.listening)return;const J=_(S),gi=j(J);if(gi){M(ui(gi,{replace:!0,force:!0}),J).catch(Ee);return}d=J;const vi=k.value;jl&&M2(Gh(vi.fullPath,q.delta),Vn()),P(J,vi).catch(u=>Vs(u,12)?u:Vs(u,2)?(M(ui(f(u.to),{force:!0}),J).then(v=>{Vs(v,20)&&!q.delta&&q.type===Ie.pop&&n.go(-1,!1)}).catch(Ee),Promise.reject()):(q.delta&&n.go(-q.delta,!1),Q(u,J,vi))).then(u=>{u=u||R(J,vi,!1),u&&(q.delta&&!Vs(u,8)?n.go(-q.delta,!1):q.type===Ie.pop&&Vs(u,20)&&n.go(-1,!1)),H(J,vi,u)}).catch(Ee)}))}let Y=Ae(),N=Ae(),li;function Q(S,W,q){ss(S);const J=N.list();return J.length?J.forEach(gi=>gi(S,W,q)):console.error(S),Promise.reject(S)}function hi(){return li&&k.value!==zs?Promise.resolve():new Promise((S,W)=>{Y.add([S,W])})}function ss(S){return li||(li=!S,G(),Y.list().forEach(([W,q])=>S?q(S):W()),Y.reset()),S}function zi(S,W,q,J){const{scrollBehavior:gi}=i;if(!jl||!gi)return Promise.resolve();const vi=!q&&N2(Gh(S.fullPath,0))||(J||!q)&&history.state&&history.state.scroll||null;return Os().then(()=>gi(S,W,vi)).then(u=>u&&O2(u)).catch(u=>Q(u,S,W))}const Mi=S=>n.go(S);let ls;const $s=new Set,ws={currentRoute:k,listening:!0,addRoute:o,removeRoute:B,clearRoutes:s.clearRoutes,hasRoute:E,getRoutes:m,resolve:_,options:i,push:F,replace:w,go:Mi,back:()=>Mi(-1),forward:()=>Mi(1),beforeEach:t.add,beforeResolve:a.add,afterEach:h.add,onError:N.add,isReady:hi,install(S){const W=this;S.component("RouterLink",ru),S.component("RouterView",cu),S.config.globalProperties.$router=W,Object.defineProperty(S.config.globalProperties,"$route",{enumerable:!0,get:()=>dl(k)}),jl&&!ls&&k.value===zs&&(ls=!0,F(n.location).catch(gi=>{}));const q={};for(const gi in zs)Object.defineProperty(q,gi,{get:()=>k.value[gi],enumerable:!0});S.provide(Hn,W),S.provide(Ea,rk(q)),S.provide(Ot,k);const J=S.unmount;$s.add(S),S.unmount=function(){$s.delete(S),$s.size<1&&(d=zs,Z&&Z(),Z=null,k.value=zs,ls=!1,li=!1),J()}}};function $i(S){return S.reduce((W,q)=>W.then(()=>D(q)),Promise.resolve())}return ws}function ou(i,s){const l=[],e=[],n=[],t=Math.max(s.matched.length,i.matched.length);for(let a=0;a<t;a++){const h=s.matched[a];h&&(i.matched.find(d=>ne(d,h))?e.push(h):l.push(h));const k=i.matched[a];k&&(s.matched.find(d=>ne(d,k))||n.push(k))}return[l,e,n]}function Xs(){return bi(Hn)}function Ms(i){return bi(Ea)}var ba=Symbol(""),Ns=()=>{const i=bi(ba);if(!i)throw new Error("useClientData() is called without provider.");return i},uu=()=>Ns().pageComponent,Au=()=>Ns().pageData,vp=()=>Ns().pageFrontmatter,yu=()=>Ns().pageHead,mp=()=>Ns().pageLang,Bu=()=>Ns().pageLayout,_a=()=>Ns().routeLocale,vu=()=>Ns().routePath,mu=()=>Ns().siteData,wl=Ns,ks=vp,Fp=mp,Ke=Au,Mt=new Set,As=i=>{Mt.add(i),Ds(()=>{Mt.delete(i)})},Fu=Symbol(""),Nt=ei(p2),Zl=ei(d2),fp=(i,s)=>{const l=Xo(i,s);if(Zl.value[l])return l;const e=encodeURI(l);if(Zl.value[e])return e;const n=Nt.value[l]||Nt.value[e];return n||l},os=(i,s)=>{const{pathname:l,hashAndQueries:e}=np(i),n=fp(l,s),t=n+e;return Zl.value[n]?{...Zl.value[n],path:t,notFound:!1}:{...Zl.value["/404.html"],path:t,notFound:!0}},fu=(i,s)=>{const{pathname:l,hashAndQueries:e}=np(i);return fp(l,s)+e},Cu=i=>{if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)&&!(i.currentTarget&&i.currentTarget.getAttribute("target")?.match(/\b_blank\b/i)))return i.preventDefault(),!0},Li=O({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(i,{slots:s}){const l=Xs(),e=Ms(),n=C(()=>i.to.startsWith("#")||i.to.startsWith("?")?i.to:`/blog-middleware/${fu(i.to,e.path).substring(1)}`);return()=>r("a",{class:["route-link",{[i.activeClass]:i.active}],href:n.value,onClick:(t={})=>{Cu(t)&&l.push(i.to).catch()}},s.default())}}),Eu=O({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(i,{slots:s}){const l=he(i,"config"),e=Ms(),n=mu(),t=C(()=>We(l.value.link)),a=C(()=>l.value.target||(t.value?"_blank":void 0)),h=C(()=>a.value==="_blank"),k=C(()=>!t.value&&!h.value),d=C(()=>l.value.rel||(h.value?"noopener noreferrer":null)),p=C(()=>l.value.ariaLabel??l.value.text),c=C(()=>{if(l.value.exact)return!1;const o=Object.keys(n.value.locales);return o.length?o.every(B=>B!==l.value.link):l.value.link!=="/"}),g=C(()=>k.value?l.value.activeMatch?(l.value.activeMatch instanceof RegExp?l.value.activeMatch:new RegExp(l.value.activeMatch,"u")).test(e.path):c.value?e.path.startsWith(l.value.link):e.path===l.value.link:!1);return()=>{const{before:o,after:B,default:m}=s,E=m?.(l.value)??[o?.(l.value),l.value.text,B?.(l.value)];return k.value?r(Li,{class:"auto-link",to:l.value.link,active:g.value,"aria-label":p.value},()=>E):r("a",{class:"auto-link external-link",href:l.value.link,"aria-label":p.value,rel:d.value,target:a.value},E)}}}),Da=O({name:"ClientOnly",setup(i,s){const l=ii(!1);return oi(()=>{l.value=!0}),()=>l.value?s.slots.default?.():null}}),cn=i=>{Mt.forEach(s=>s(i))},Cp=O({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(i){const s=uu(),l=C(()=>{if(!i.path)return s.value;const n=os(i.path);return Bg(async()=>n.loader().then(({comp:t})=>t))}),e=vp();return Si(e,()=>{cn("updated")},{deep:!0,flush:"post"}),()=>r(l.value,{onVnodeMounted:()=>{cn("mounted")},onVnodeUpdated:()=>{cn("updated")},onVnodeBeforeUnmount:()=>{cn("beforeUnmount")}})}}),bu="Layout",_u="en-US",Bl=bl({resolveLayouts:i=>i.reduce((s,l)=>({...s,...l.layouts}),{}),resolvePageHead:(i,s,l)=>{const e=Bi(s.description)?s.description:l.description,n=[...Array.isArray(s.head)?s.head:[],...l.head,["title",{},i],["meta",{name:"description",content:e}]];return t2(n)},resolvePageHeadTitle:(i,s)=>[i.title,s.title].filter(l=>!!l).join(" | "),resolvePageLang:(i,s)=>i.lang||s.lang||_u,resolvePageLayout:(i,s)=>{const l=Bi(i.frontmatter.layout)?i.frontmatter.layout:bu;if(!s[l])throw new Error(`[vuepress] Cannot resolve layout: ${l}`);return s[l]},resolveRouteLocale:(i,s)=>i2(i,decodeURI(s)),resolveSiteLocaleData:({base:i,locales:s,...l},e)=>({...l,...s[e],head:[...s[e]?.head??[],...l.head]})}),Ss=(i={})=>i,mi=i=>re(i)?i:`/blog-middleware/${ap(i)}`,Du=Object.defineProperty,Su=(i,s)=>{for(var l in s)Du(i,l,{get:s[l],enumerable:!0})},Tu={};Su(Tu,{COMPONENT_STATE_TYPE:()=>wu,INSPECTOR_ID:()=>xu,INSPECTOR_LABEL:()=>Lu,INSPECTOR_NODES:()=>Ru,INSPECTOR_STATE_SECTION_NAME:()=>Pu,PLUGIN_ID:()=>Ep,PLUGIN_LABEL:()=>Sa});var Ep="org.vuejs.vuepress",Sa="VuePress",wu=Sa,xu=Ep,Lu=Sa,hr={id:"INTERNAL",label:"Internal",keys:["layouts","routes","redirects"]},rr={id:"SITE",label:"Site",keys:["siteData","siteLocaleData"]},kr={id:"ROUTE",label:"Route",keys:["routePath","routeLocale"]},pr={id:"PAGE",label:"Page",keys:["pageData","pageFrontmatter","pageLang","pageHead","pageHeadTitle","pageLayout","pageComponent"]},Ru={[hr.id]:hr,[rr.id]:rr,[kr.id]:kr,[pr.id]:pr},Pu="State";const dr=i=>typeof i=="number"?`${i}px`:i,xl=({size:i=48,stroke:s=4,wrapper:l=!0,height:e=2*i})=>{const n=r("span",{style:`--loading-icon: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='xMidYMid' viewBox='25 25 50 50'%3E%3CanimateTransform attributeName='transform' type='rotate' dur='2s' keyTimes='0;1' repeatCount='indefinite' values='0;360'%3E%3C/animateTransform%3E%3Ccircle cx='50' cy='50' r='20' fill='none' stroke='currentColor' stroke-width='${s}' stroke-linecap='round'%3E%3Canimate attributeName='stroke-dasharray' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='1,200;90,200;1,200'%3E%3C/animate%3E%3Canimate attributeName='stroke-dashoffset' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='0;-35px;-125px'%3E%3C/animate%3E%3C/circle%3E%3C/svg%3E");--icon-size: ${dr(i)};display: inline-block;width: var(--icon-size);height: var(--icon-size);background-color: currentcolor;-webkit-mask-image: var(--loading-icon);mask-image: var(--loading-icon)`});return l?r("div",{style:`display: flex;align-items: center;justify-content: center;height: ${dr(e)}`},n):n};xl.displayName="LoadingIcon";const Ta=(i,{slots:s})=>s.default();var as=Uint8Array,ql=Uint16Array,Iu=Int32Array,bp=new as([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),_p=new as([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ou=new as([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Dp=function(i,s){for(var l=new ql(31),e=0;e<31;++e)l[e]=s+=1<<i[e-1];for(var n=new Iu(l[30]),e=1;e<30;++e)for(var t=l[e];t<l[e+1];++t)n[t]=t-l[e]<<5|e;return{b:l,r:n}},Sp=Dp(bp,2),Tp=Sp.b,Mu=Sp.r;Tp[28]=258,Mu[258]=28;var Nu=Dp(_p,0),$u=Nu.b,$t=new ql(32768);for(var _i=0;_i<32768;++_i){var el=(_i&43690)>>1|(_i&21845)<<1;el=(el&52428)>>2|(el&13107)<<2,el=(el&61680)>>4|(el&3855)<<4,$t[_i]=((el&65280)>>8|(el&255)<<8)>>1}var _e=(function(i,s,l){for(var e=i.length,n=0,t=new ql(s);n<e;++n)i[n]&&++t[i[n]-1];var a=new ql(s);for(n=1;n<s;++n)a[n]=a[n-1]+t[n-1]<<1;var h;if(l){h=new ql(1<<s);var k=15-s;for(n=0;n<e;++n)if(i[n])for(var d=n<<4|i[n],p=s-i[n],c=a[i[n]-1]++<<p,g=c|(1<<p)-1;c<=g;++c)h[$t[c]>>k]=d}else for(h=new ql(e),n=0;n<e;++n)i[n]&&(h[n]=$t[a[i[n]-1]++]>>15-i[n]);return h}),Qe=new as(288);for(var _i=0;_i<144;++_i)Qe[_i]=8;for(var _i=144;_i<256;++_i)Qe[_i]=9;for(var _i=256;_i<280;++_i)Qe[_i]=7;for(var _i=280;_i<288;++_i)Qe[_i]=8;var wp=new as(32);for(var _i=0;_i<32;++_i)wp[_i]=5;var ju=_e(Qe,9,1),Vu=_e(wp,5,1),dt=function(i){for(var s=i[0],l=1;l<i.length;++l)i[l]>s&&(s=i[l]);return s},vs=function(i,s,l){var e=s/8|0;return(i[e]|i[e+1]<<8)>>(s&7)&l},ct=function(i,s){var l=s/8|0;return(i[l]|i[l+1]<<8|i[l+2]<<16)>>(s&7)},Hu=function(i){return(i+7)/8|0},xp=function(i,s,l){return(s==null||s<0)&&(s=0),(l==null||l>i.length)&&(l=i.length),new as(i.subarray(s,l))},zu=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],cs=function(i,s,l){var e=new Error(s||zu[i]);if(e.code=i,Error.captureStackTrace&&Error.captureStackTrace(e,cs),!l)throw e;return e},qu=function(i,s,l,e){var n=i.length,t=0;if(!n||s.f&&!s.l)return l||new as(0);var a=!l,h=a||s.i!=2,k=s.i;a&&(l=new as(n*3));var d=function(gi){var vi=l.length;if(gi>vi){var u=new as(Math.max(vi*2,gi));u.set(l),l=u}},p=s.f||0,c=s.p||0,g=s.b||0,o=s.l,B=s.d,m=s.m,E=s.n,_=n*8;do{if(!o){p=vs(i,c,1);var f=vs(i,c+1,3);if(c+=3,f)if(f==1)o=ju,B=Vu,m=9,E=5;else if(f==2){var j=vs(i,c,31)+257,M=vs(i,c+10,15)+4,z=j+vs(i,c+5,31)+1;c+=14;for(var D=new as(z),P=new as(19),H=0;H<M;++H)P[Ou[H]]=vs(i,c+H*3,7);c+=M*3;for(var R=dt(P),Z=(1<<R)-1,G=_e(P,R,1),H=0;H<z;){var Y=G[vs(i,c,Z)];c+=Y&15;var A=Y>>4;if(A<16)D[H++]=A;else{var N=0,li=0;for(A==16?(li=3+vs(i,c,3),c+=2,N=D[H-1]):A==17?(li=3+vs(i,c,7),c+=3):A==18&&(li=11+vs(i,c,127),c+=7);li--;)D[H++]=N}}var Q=D.subarray(0,j),hi=D.subarray(j);m=dt(Q),E=dt(hi),o=_e(Q,m,1),B=_e(hi,E,1)}else cs(1);else{var A=Hu(c)+4,F=i[A-4]|i[A-3]<<8,w=A+F;if(w>n){k&&cs(0);break}h&&d(g+F),l.set(i.subarray(A,w),g),s.b=g+=F,s.p=c=w*8,s.f=p;continue}if(c>_){k&&cs(0);break}}h&&d(g+131072);for(var ss=(1<<m)-1,zi=(1<<E)-1,Mi=c;;Mi=c){var N=o[ct(i,c)&ss],ls=N>>4;if(c+=N&15,c>_){k&&cs(0);break}if(N||cs(2),ls<256)l[g++]=ls;else if(ls==256){Mi=c,o=null;break}else{var $s=ls-254;if(ls>264){var H=ls-257,ws=bp[H];$s=vs(i,c,(1<<ws)-1)+Tp[H],c+=ws}var $i=B[ct(i,c)&zi],S=$i>>4;$i||cs(3),c+=$i&15;var hi=$u[S];if(S>3){var ws=_p[S];hi+=ct(i,c)&(1<<ws)-1,c+=ws}if(c>_){k&&cs(0);break}h&&d(g+131072);var W=g+$s;if(g<hi){var q=t-hi,J=Math.min(hi,W);for(q+g<0&&cs(3);g<J;++g)l[g]=e[q+g]}for(;g<W;++g)l[g]=l[g-hi]}}s.l=o,s.p=Mi,s.b=g,s.f=p,o&&(p=1,s.m=m,s.d=B,s.n=E)}while(!p);return g!=l.length&&a?xp(l,0,g):l.subarray(0,g)},Uu=new as(0),Gu=function(i,s){return((i[0]&15)!=8||i[0]>>4>7||(i[0]<<8|i[1])%31)&&cs(6,"invalid zlib data"),(i[1]>>5&1)==1&&cs(6,"invalid zlib data: "+(i[1]&32?"need":"unexpected")+" dictionary"),(i[1]>>3&4)+2};function Wu(i,s){return qu(i.subarray(Gu(i),-4),{i:2},s,s)}var jt=typeof TextDecoder<"u"&&new TextDecoder,Ku=0;try{jt.decode(Uu,{stream:!0}),Ku=1}catch{}var Qu=function(i){for(var s="",l=0;;){var e=i[l++],n=(e>127)+(e>223)+(e>239);if(l+n>i.length)return{s,r:xp(i,l-1)};n?n==3?(e=((e&15)<<18|(i[l++]&63)<<12|(i[l++]&63)<<6|i[l++]&63)-65536,s+=String.fromCharCode(55296|e>>10,56320|e&1023)):n&1?s+=String.fromCharCode((e&31)<<6|i[l++]&63):s+=String.fromCharCode((e&15)<<12|(i[l++]&63)<<6|i[l++]&63):s+=String.fromCharCode(e)}};function Ju(i,s){{for(var l=new as(i.length),e=0;e<i.length;++e)l[e]=i.charCodeAt(e);return l}for(var n=i.length,e=0;e<n;++e);}function Zu(i,s){var l;if(jt)return jt.decode(i);var e=Qu(i),n=e.s,l=e.r;return l.length&&cs(8),n}const gl=i=>{const s=atob(i);return Zu(Wu(Ju(s)))},cr=()=>document.documentElement.getAttribute("data-theme")==="dark",Lp=[...new Array(6)].map((i,s)=>`[vp-content] h${s+1}`).join(","),Yu=(i,s=2)=>{if(s===!1)return[];const[l,e]=typeof s=="number"?[s,s]:s==="deep"?[2,6]:s,n=i.filter(a=>a.level>=l&&a.level<=e),t=[];i:for(let a=0;a<n.length;a++){const h=n[a];if(a===0)t.push(h);else{for(let k=a-1;k>=0;k--){const d=n[k];if(d.level<h.level){d.children.push(h);continue i}}t.push(h)}}return t},Xu=(i,s=[])=>{let l;if(s.length){const e=i.cloneNode(!0);e.querySelectorAll(s.join(",")).forEach(n=>{n.remove()}),l=e.textContent||""}else l=i.textContent||"";return l.trim()},i3=(i=Lp,s=[])=>Array.from(document.querySelectorAll(i)).filter(l=>l.id&&l.hasChildNodes()).map(l=>({element:l,title:Xu(l,s),link:`#${l.id}`,slug:l.id,level:Number(l.tagName[1]),children:[]})),s3=({selector:i=Lp,levels:s=2,ignore:l=[]}={})=>Yu(i3(i,l),s),l3=i=>i instanceof Element?document.activeElement===i&&(["TEXTAREA","SELECT","INPUT"].includes(i.tagName)||i.hasAttribute("contenteditable")):!1,wa=i=>typeof i<"u",mn=i=>typeof i=="number",{isArray:Qs}=Array,Oe=(i,s)=>Bi(i)&&i.startsWith(s),e3=(i,s)=>Bi(i)&&i.endsWith(s),{entries:ke}=Object,{keys:_s}=Object,xa=i=>{if(i){if(typeof i=="number")return new Date(i);const s=Date.parse(i.toString());if(!Number.isNaN(s))return new Date(s)}return null},zn=i=>Oe(i,"/")&&i[1]!=="/",Rp=i=>i.every(s=>s.type===Wi?!0:s.type===Zi?s.children==null||Qs(s.children)&&Rp(s.children):!1),Yl=i=>i==null?!0:Qs(i)?Rp(i):!1,n3=(i,s)=>s.some(l=>{if(Bi(l))return l===i.key;const{key:e,ctrl:n=!1,shift:t=!1,alt:a=!1}=l;return e===i.key&&n===i.ctrlKey&&t===i.shiftKey&&a===i.altKey}),Xi=(i,s)=>{const l=(s?._instance??Ys())?.appContext.components;return l?i in l||Yi(i)in l||Ve(Yi(i))in l:!1},gt="message-container";class La{elements;constructor(){this.elements={}}static get containerElement(){let s=document.getElementById(gt);return s||(s=document.createElement("div"),s.id=gt,document.body.appendChild(s),s)}getElement(s){return this.elements[s]}pop(s,l=2e3,e=!0){const n=Date.now(),t=document.createElement("div");return t.className="message-item move-in",t.innerHTML=s,La.containerElement.appendChild(t),this.elements[n]=t,e&&t.addEventListener("click",()=>{this.close(n)}),l>0&&setTimeout(()=>{this.close(n)},l),n}close(s){if(s){const l=this.elements[s];l.classList.remove("move-in"),l.classList.add("move-out"),l.addEventListener("animationend",()=>{l.remove(),delete this.elements[s]})}else _s(this.elements).forEach(l=>{this.close(Number(l))})}destroy(){const s=document.getElementById(gt);s&&document.body.removeChild(s),this.elements={}}}const t3=Symbol(""),Vt=ii(!1);typeof document<"u"&&(Vt.value=cr(),new MutationObserver(()=>{Vt.value=cr()}).observe(document.documentElement,{attributeFilter:["data-theme"],attributes:!0}));const Pp=()=>Tl(bi(t3,Vt)),a3=(i={})=>{const s=ii([]);return As(l=>{s.value=l==="beforeUnmount"?[]:s3(pi(i))}),s},h3=i=>{const s=_a();return C(()=>pi(i)[s.value]??{})},Ll=h3;function Rl(i){return Ur()?(Tc(i),!0):!1}const ot=new WeakMap,r3=(...i)=>{var s;const l=i[0],e=(s=Ys())==null?void 0:s.proxy;if(e==null&&!Sk())throw new Error("injectLocal must be called in setup");return e&&ot.has(e)&&l in ot.get(e)?ot.get(e)[l]:bi(...i)},Je=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const k3=i=>i!=null,p3=Object.prototype.toString,d3=i=>p3.call(i)==="[object Object]",Js=()=>{},gr=c3();function c3(){var i,s;return Je&&((i=window?.navigator)==null?void 0:i.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((s=window?.navigator)==null?void 0:s.maxTouchPoints)>2&&/iPad|Macintosh/.test(window?.navigator.userAgent))}function Ip(...i){if(i.length!==1)return he(...i);const s=i[0];return typeof s=="function"?Tl(dk(()=>({get:s,set:Js}))):ii(s)}function Ra(i,s){function l(...e){return new Promise((n,t)=>{Promise.resolve(i(()=>s.apply(this,e),{fn:s,thisArg:this,args:e})).then(n).catch(t)})}return l}const Op=i=>i();function g3(i,s={}){let l,e,n=Js;const t=k=>{clearTimeout(k),n(),n=Js};let a;return k=>{const d=pi(i),p=pi(s.maxWait);return l&&t(l),d<=0||p!==void 0&&p<=0?(e&&(t(e),e=void 0),Promise.resolve(k())):new Promise((c,g)=>{n=s.rejectOnCancel?g:c,a=k,p&&!e&&(e=setTimeout(()=>{l&&t(l),e=void 0,c(a())},p)),l=setTimeout(()=>{e&&t(e),e=void 0,c(k())},d)})}}function o3(...i){let s=0,l,e=!0,n=Js,t,a,h,k,d;!Ri(i[0])&&typeof i[0]=="object"?{delay:a,trailing:h=!0,leading:k=!0,rejectOnCancel:d=!1}=i[0]:[a,h=!0,k=!0,d=!1]=i;const p=()=>{l&&(clearTimeout(l),l=void 0,n(),n=Js)};return g=>{const o=pi(a),B=Date.now()-s,m=()=>t=g();return p(),o<=0?(s=Date.now(),m()):(B>o&&(k||!e)?(s=Date.now(),m()):h&&(t=new Promise((E,_)=>{n=d?_:E,l=setTimeout(()=>{s=Date.now(),e=!0,E(m()),p()},Math.max(0,o-B))})),!k&&!l&&(l=setTimeout(()=>e=!0,o)),e=!1,t)}}function u3(i=Op,s={}){const{initialState:l="active"}=s,e=Ip(l==="active");function n(){e.value=!1}function t(){e.value=!0}const a=(...h)=>{e.value&&i(...h)};return{isActive:Tl(e),pause:n,resume:t,eventFilter:a}}function A3(i){let s;function l(){return s||(s=i()),s}return l.reset=async()=>{const e=s;s=void 0,e&&await e},l}function or(i){return i.endsWith("rem")?Number.parseFloat(i)*16:Number.parseFloat(i)}function De(i){return Array.isArray(i)?i:[i]}function Mp(i){return Ys()}function Ze(i,s=200,l={}){return Ra(g3(s,l),i)}function Np(i,s=200,l=!1,e=!0,n=!1){return Ra(o3(s,l,e,n),i)}function y3(i,s,l={}){const{eventFilter:e=Op,...n}=l;return Si(i,Ra(e,s),n)}function B3(i,s,l={}){const{eventFilter:e,initialState:n="active",...t}=l,{eventFilter:a,pause:h,resume:k,isActive:d}=u3(e,{initialState:n});return{stop:y3(i,s,{...t,eventFilter:a}),pause:h,resume:k,isActive:d}}function pe(i,s=!0,l){Mp()?oi(i,l):s?i():Os(i)}function v3(i,s){Mp()&&Ds(i,s)}function m3(i,s,l={}){const{immediate:e=!0,immediateCallback:n=!1}=l,t=ei(!1);let a;function h(){a&&(clearTimeout(a),a=void 0)}function k(){t.value=!1,h()}function d(...p){n&&i(),h(),t.value=!0,a=setTimeout(()=>{t.value=!1,a=void 0,i(...p)},pi(s))}return e&&(t.value=!0,Je&&d()),Rl(k),{isPending:Qc(t),start:d,stop:k}}function Me(i=!1,s={}){const{truthyValue:l=!0,falsyValue:e=!1}=s,n=Ri(i),t=ei(i);function a(h){if(arguments.length)return t.value=h,t.value;{const k=pi(l);return t.value=t.value===k?pi(e):k,t.value}}return n?a:[t,a]}function us(i,s,l){return Si(i,s,{...l,immediate:!0})}const Qi=Je?window:void 0,$p=Je?window.document:void 0,jp=Je?window.navigator:void 0;function rs(i){var s;const l=pi(i);return(s=l?.$el)!=null?s:l}function ki(...i){const s=[],l=()=>{s.forEach(h=>h()),s.length=0},e=(h,k,d,p)=>(h.addEventListener(k,d,p),()=>h.removeEventListener(k,d,p)),n=C(()=>{const h=De(pi(i[0])).filter(k=>k!=null);return h.every(k=>typeof k!="string")?h:void 0}),t=us(()=>{var h,k;return[(k=(h=n.value)==null?void 0:h.map(d=>rs(d)))!=null?k:[Qi].filter(d=>d!=null),De(pi(n.value?i[1]:i[0])),De(dl(n.value?i[2]:i[1])),pi(n.value?i[3]:i[2])]},([h,k,d,p])=>{if(l(),!h?.length||!k?.length||!d?.length)return;const c=d3(p)?{...p}:p;s.push(...h.flatMap(g=>k.flatMap(o=>d.map(B=>e(g,o,B,c)))))},{flush:"post"}),a=()=>{t(),l()};return Rl(l),a}function F3(){const i=ei(!1),s=Ys();return s&&oi(()=>{i.value=!0},s),i}function de(i){const s=F3();return C(()=>(s.value,!!i()))}function Vp(i,s,l={}){const{window:e=Qi,...n}=l;let t;const a=de(()=>e&&"MutationObserver"in e),h=()=>{t&&(t.disconnect(),t=void 0)},k=C(()=>{const g=pi(i),o=De(g).map(rs).filter(k3);return new Set(o)}),d=Si(k,g=>{h(),a.value&&g.size&&(t=new MutationObserver(s),g.forEach(o=>t.observe(o,n)))},{immediate:!0,flush:"post"}),p=()=>t?.takeRecords(),c=()=>{d(),h()};return Rl(c),{isSupported:a,stop:c,takeRecords:p}}function f3(i,s,l={}){const{window:e=Qi,document:n=e?.document,flush:t="sync"}=l;if(!e||!n)return Js;let a;const h=p=>{a?.(),a=p},k=Ba(()=>{const p=rs(i);if(p){const{stop:c}=Vp(n,g=>{g.map(B=>[...B.removedNodes]).flat().some(B=>B===p||B.contains(p))&&s(g)},{window:e,childList:!0,subtree:!0});h(c)}},{flush:t}),d=()=>{k(),h()};return Rl(d),d}const C3=Symbol("vueuse-ssr-width");function E3(){const i=Sk()?r3(C3,null):null;return typeof i=="number"?i:void 0}function Pa(i,s={}){const{window:l=Qi,ssrWidth:e=E3()}=s,n=de(()=>l&&"matchMedia"in l&&typeof l.matchMedia=="function"),t=ei(typeof e=="number"),a=ei(),h=ei(!1),k=d=>{h.value=d.matches};return Ba(()=>{if(t.value){t.value=!n.value;const d=pi(i).split(",");h.value=d.some(p=>{const c=p.includes("not all"),g=p.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),o=p.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let B=!!(g||o);return g&&B&&(B=e>=or(g[1])),o&&B&&(B=e<=or(o[1])),c?!B:B});return}n.value&&(a.value=l.matchMedia(pi(i)),h.value=a.value.matches)}),ki(a,"change",k,{passive:!0}),C(()=>h.value)}function ur(i,s={}){const{controls:l=!1,navigator:e=jp}=s,n=de(()=>e&&"permissions"in e),t=ei(),a=typeof i=="string"?{name:i}:i,h=ei(),k=()=>{var p,c;h.value=(c=(p=t.value)==null?void 0:p.state)!=null?c:"prompt"};ki(t,"change",k,{passive:!0});const d=A3(async()=>{if(n.value){if(!t.value)try{t.value=await e.permissions.query(a)}catch{t.value=void 0}finally{k()}if(l)return ci(t.value)}});return d(),l?{state:h,isSupported:n,query:d}:h}function b3(i={}){const{navigator:s=jp,read:l=!1,source:e,copiedDuring:n=1500,legacy:t=!1}=i,a=de(()=>s&&"clipboard"in s),h=ur("clipboard-read"),k=ur("clipboard-write"),d=C(()=>a.value||t),p=ei(""),c=ei(!1),g=m3(()=>c.value=!1,n,{immediate:!1});async function o(){let f=!(a.value&&_(h.value));if(!f)try{p.value=await s.clipboard.readText()}catch{f=!0}f&&(p.value=E())}d.value&&l&&ki(["copy","cut"],o,{passive:!0});async function B(f=pi(e)){if(d.value&&f!=null){let A=!(a.value&&_(k.value));if(!A)try{await s.clipboard.writeText(f)}catch{A=!0}A&&m(f),p.value=f,c.value=!0,g.start()}}function m(f){const A=document.createElement("textarea");A.value=f??"",A.style.position="absolute",A.style.opacity="0",document.body.appendChild(A),A.select(),document.execCommand("copy"),A.remove()}function E(){var f,A,F;return(F=(A=(f=document?.getSelection)==null?void 0:f.call(document))==null?void 0:A.toString())!=null?F:""}function _(f){return f==="granted"||f==="prompt"}return{isSupported:d,text:p,copied:c,copy:B}}const gn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},on="__vueuse_ssr_handlers__",_3=D3();function D3(){return on in gn||(gn[on]=gn[on]||{}),gn[on]}function S3(i,s){return _3[i]||s}function T3(i){return Pa("(prefers-color-scheme: dark)",i)}function w3(i){return i==null?"any":i instanceof Set?"set":i instanceof Map?"map":i instanceof Date?"date":typeof i=="boolean"?"boolean":typeof i=="string"?"string":typeof i=="object"?"object":Number.isNaN(i)?"any":"number"}const x3={boolean:{read:i=>i==="true",write:i=>String(i)},object:{read:i=>JSON.parse(i),write:i=>JSON.stringify(i)},number:{read:i=>Number.parseFloat(i),write:i=>String(i)},any:{read:i=>i,write:i=>String(i)},string:{read:i=>i,write:i=>String(i)},map:{read:i=>new Map(JSON.parse(i)),write:i=>JSON.stringify(Array.from(i.entries()))},set:{read:i=>new Set(JSON.parse(i)),write:i=>JSON.stringify(Array.from(i))},date:{read:i=>new Date(i),write:i=>i.toISOString()}},Ar="vueuse-storage";function Pl(i,s,l,e={}){var n;const{flush:t="pre",deep:a=!0,listenToStorageChanges:h=!0,writeDefaults:k=!0,mergeDefaults:d=!1,shallow:p,window:c=Qi,eventFilter:g,onError:o=G=>{console.error(G)},initOnMounted:B}=e,m=(p?ei:ii)(typeof s=="function"?s():s),E=C(()=>pi(i));if(!l)try{l=S3("getDefaultStorage",()=>{var G;return(G=Qi)==null?void 0:G.localStorage})()}catch(G){o(G)}if(!l)return m;const _=pi(s),f=w3(_),A=(n=e.serializer)!=null?n:x3[f],{pause:F,resume:w}=B3(m,G=>P(G),{flush:t,deep:a,eventFilter:g});Si(E,()=>R(),{flush:t});let j=!1;const M=G=>{B&&!j||R(G)},z=G=>{B&&!j||Z(G)};c&&h&&(l instanceof Storage?ki(c,"storage",M,{passive:!0}):ki(c,Ar,z)),B?pe(()=>{j=!0,R()}):R();function D(G,Y){if(c){const N={key:E.value,oldValue:G,newValue:Y,storageArea:l};c.dispatchEvent(l instanceof Storage?new StorageEvent("storage",N):new CustomEvent(Ar,{detail:N}))}}function P(G){try{const Y=l.getItem(E.value);if(G==null)D(Y,null),l.removeItem(E.value);else{const N=A.write(G);Y!==N&&(l.setItem(E.value,N),D(Y,N))}}catch(Y){o(Y)}}function H(G){const Y=G?G.newValue:l.getItem(E.value);if(Y==null)return k&&_!=null&&l.setItem(E.value,A.write(_)),_;if(!G&&d){const N=A.read(Y);return typeof d=="function"?d(N,_):f==="object"&&!Array.isArray(N)?{..._,...N}:N}else return typeof Y!="string"?Y:A.read(Y)}function R(G){if(!(G&&G.storageArea!==l)){if(G&&G.key==null){m.value=_;return}if(!(G&&G.key!==E.value)){F();try{const Y=A.write(m.value);(G===void 0||G?.newValue!==Y)&&(m.value=H(G))}catch(Y){o(Y)}finally{G?Os(w):w()}}}}function Z(G){R(G.detail)}return m}function Ia(i,s,l={}){const{window:e=Qi,...n}=l;let t;const a=de(()=>e&&"ResizeObserver"in e),h=()=>{t&&(t.disconnect(),t=void 0)},k=C(()=>{const c=pi(i);return Array.isArray(c)?c.map(g=>rs(g)):[rs(c)]}),d=Si(k,c=>{if(h(),a.value&&e){t=new ResizeObserver(s);for(const g of c)g&&t.observe(g,n)}},{immediate:!0,flush:"post"}),p=()=>{h(),d()};return Rl(p),{isSupported:a,stop:p}}function L3(i,s={}){const{delayEnter:l=0,delayLeave:e=0,triggerOnRemoval:n=!1,window:t=Qi}=s,a=ei(!1);let h;const k=d=>{const p=d?l:e;h&&(clearTimeout(h),h=void 0),p?h=setTimeout(()=>a.value=d,p):a.value=d};return t&&(ki(i,"mouseenter",()=>k(!0),{passive:!0}),ki(i,"mouseleave",()=>k(!1),{passive:!0}),n&&f3(C(()=>rs(i)),()=>k(!1))),a}function R3(i,s={width:0,height:0},l={}){const{window:e=Qi,box:n="content-box"}=l,t=C(()=>{var c,g;return(g=(c=rs(i))==null?void 0:c.namespaceURI)==null?void 0:g.includes("svg")}),a=ei(s.width),h=ei(s.height),{stop:k}=Ia(i,([c])=>{const g=n==="border-box"?c.borderBoxSize:n==="content-box"?c.contentBoxSize:c.devicePixelContentBoxSize;if(e&&t.value){const o=rs(i);if(o){const B=o.getBoundingClientRect();a.value=B.width,h.value=B.height}}else if(g){const o=De(g);a.value=o.reduce((B,{inlineSize:m})=>B+m,0),h.value=o.reduce((B,{blockSize:m})=>B+m,0)}else a.value=c.contentRect.width,h.value=c.contentRect.height},l);pe(()=>{const c=rs(i);c&&(a.value="offsetWidth"in c?c.offsetWidth:s.width,h.value="offsetHeight"in c?c.offsetHeight:s.height)});const d=Si(()=>rs(i),c=>{a.value=c?s.width:0,h.value=c?s.height:0});function p(){k(),d()}return{width:a,height:h,stop:p}}const yr=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function qn(i,s={}){const{document:l=$p,autoExit:e=!1}=s,n=C(()=>{var f;return(f=rs(i))!=null?f:l?.documentElement}),t=ei(!1),a=C(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(f=>l&&f in l||n.value&&f in n.value)),h=C(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(f=>l&&f in l||n.value&&f in n.value)),k=C(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(f=>l&&f in l||n.value&&f in n.value)),d=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(f=>l&&f in l),p=de(()=>n.value&&l&&a.value!==void 0&&h.value!==void 0&&k.value!==void 0),c=()=>d?l?.[d]===n.value:!1,g=()=>{if(k.value){if(l&&l[k.value]!=null)return l[k.value];{const f=n.value;if(f?.[k.value]!=null)return!!f[k.value]}}return!1};async function o(){if(!(!p.value||!t.value)){if(h.value)if(l?.[h.value]!=null)await l[h.value]();else{const f=n.value;f?.[h.value]!=null&&await f[h.value]()}t.value=!1}}async function B(){if(!p.value||t.value)return;g()&&await o();const f=n.value;a.value&&f?.[a.value]!=null&&(await f[a.value](),t.value=!0)}async function m(){await(t.value?o():B())}const E=()=>{const f=g();(!f||f&&c())&&(t.value=f)},_={capture:!1,passive:!0};return ki(l,yr,E,_),ki(()=>rs(n),yr,E,_),pe(E,!1),e&&Rl(o),{isSupported:p,isFullscreen:t,enter:B,exit:o,toggle:m}}function ut(i){return typeof Window<"u"&&i instanceof Window?i.document.documentElement:typeof Document<"u"&&i instanceof Document?i.documentElement:i}const Br=1;function P3(i,s={}){const{throttle:l=0,idle:e=200,onStop:n=Js,onScroll:t=Js,offset:a={left:0,right:0,top:0,bottom:0},observe:h={mutation:!1},eventListenerOptions:k={capture:!1,passive:!0},behavior:d="auto",window:p=Qi,onError:c=D=>{console.error(D)}}=s,g=typeof h=="boolean"?{mutation:h}:h,o=ei(0),B=ei(0),m=C({get(){return o.value},set(D){_(D,void 0)}}),E=C({get(){return B.value},set(D){_(void 0,D)}});function _(D,P){var H,R,Z,G;if(!p)return;const Y=pi(i);if(!Y)return;(Z=Y instanceof Document?p.document.body:Y)==null||Z.scrollTo({top:(H=pi(P))!=null?H:E.value,left:(R=pi(D))!=null?R:m.value,behavior:pi(d)});const N=((G=Y?.document)==null?void 0:G.documentElement)||Y?.documentElement||Y;m!=null&&(o.value=N.scrollLeft),E!=null&&(B.value=N.scrollTop)}const f=ei(!1),A=bl({left:!0,right:!1,top:!0,bottom:!1}),F=bl({left:!1,right:!1,top:!1,bottom:!1}),w=D=>{f.value&&(f.value=!1,F.left=!1,F.right=!1,F.top=!1,F.bottom=!1,n(D))},j=Ze(w,l+e),M=D=>{var P;if(!p)return;const H=((P=D?.document)==null?void 0:P.documentElement)||D?.documentElement||rs(D),{display:R,flexDirection:Z,direction:G}=getComputedStyle(H),Y=G==="rtl"?-1:1,N=H.scrollLeft;F.left=N<o.value,F.right=N>o.value;const li=Math.abs(N*Y)<=(a.left||0),Q=Math.abs(N*Y)+H.clientWidth>=H.scrollWidth-(a.right||0)-Br;R==="flex"&&Z==="row-reverse"?(A.left=Q,A.right=li):(A.left=li,A.right=Q),o.value=N;let hi=H.scrollTop;D===p.document&&!hi&&(hi=p.document.body.scrollTop),F.top=hi<B.value,F.bottom=hi>B.value;const ss=Math.abs(hi)<=(a.top||0),zi=Math.abs(hi)+H.clientHeight>=H.scrollHeight-(a.bottom||0)-Br;R==="flex"&&Z==="column-reverse"?(A.top=zi,A.bottom=ss):(A.top=ss,A.bottom=zi),B.value=hi},z=D=>{var P;if(!p)return;const H=(P=D.target.documentElement)!=null?P:D.target;M(H),f.value=!0,j(D),t(D)};return ki(i,"scroll",l?Np(z,l,!0,!1):z,k),pe(()=>{try{const D=pi(i);if(!D)return;M(D)}catch(D){c(D)}}),g?.mutation&&i!=null&&i!==p&&i!==document&&Vp(i,()=>{const D=pi(i);D&&M(D)},{attributes:!0,childList:!0,subtree:!0}),ki(i,"scrollend",w,k),{x:m,y:E,isScrolling:f,arrivedState:A,directions:F,measure(){const D=pi(i);p&&D&&M(D)}}}function I3(i,s,l={}){const{window:e=Qi}=l;return Pl(i,s,e?.localStorage,l)}function O3(i={}){const{window:s=Qi}=i;if(!s)return ii(["en"]);const l=s.navigator,e=ii(l.languages);return ki(s,"languagechange",()=>{e.value=l.languages},{passive:!0}),e}function M3(i,s=Js,l={}){const{immediate:e=!0,manual:n=!1,type:t="text/javascript",async:a=!0,crossOrigin:h,referrerPolicy:k,noModule:d,defer:p,document:c=$p,attrs:g={},nonce:o=void 0}=l,B=ei(null);let m=null;const E=A=>new Promise((F,w)=>{const j=P=>(B.value=P,F(P),P);if(!c){F(!1);return}let M=!1,z=c.querySelector(`script[src="${pi(i)}"]`);z?z.hasAttribute("data-loaded")&&j(z):(z=c.createElement("script"),z.type=t,z.async=a,z.src=pi(i),p&&(z.defer=p),h&&(z.crossOrigin=h),d&&(z.noModule=d),k&&(z.referrerPolicy=k),o&&(z.nonce=o),Object.entries(g).forEach(([P,H])=>z?.setAttribute(P,H)),M=!0);const D={passive:!0};ki(z,"error",P=>w(P),D),ki(z,"abort",P=>w(P),D),ki(z,"load",()=>{z.setAttribute("data-loaded","true"),s(z),j(z)},D),M&&(z=c.head.appendChild(z)),A||j(z)}),_=(A=!0)=>(m||(m=E(A)),m),f=()=>{if(!c)return;m=null,B.value&&(B.value=null);const A=c.querySelector(`script[src="${pi(i)}"]`);A&&c.head.removeChild(A)};return e&&!n&&pe(_),n||v3(f),{scriptTag:B,load:_,unload:f}}function Hp(i){const s=window.getComputedStyle(i);if(s.overflowX==="scroll"||s.overflowY==="scroll"||s.overflowX==="auto"&&i.clientWidth<i.scrollWidth||s.overflowY==="auto"&&i.clientHeight<i.scrollHeight)return!0;{const l=i.parentNode;return!l||l.tagName==="BODY"?!1:Hp(l)}}function N3(i){const s=i||window.event,l=s.target;return Hp(l)?!1:s.touches.length>1?!0:(s.preventDefault&&s.preventDefault(),!1)}const At=new WeakMap;function Oa(i,s=!1){const l=ei(s);let e=null,n="";Si(Ip(i),h=>{const k=ut(pi(h));if(k){const d=k;if(At.get(d)||At.set(d,d.style.overflow),d.style.overflow!=="hidden"&&(n=d.style.overflow),d.style.overflow==="hidden")return l.value=!0;if(l.value)return d.style.overflow="hidden"}},{immediate:!0});const t=()=>{const h=ut(pi(i));!h||l.value||(gr&&(e=ki(h,"touchmove",k=>{N3(k)},{passive:!1})),h.style.overflow="hidden",l.value=!0)},a=()=>{const h=ut(pi(i));!h||!l.value||(gr&&e?.(),h.style.overflow=n,At.delete(h),l.value=!1)};return Rl(a),C({get(){return l.value},set(h){h?t():a()}})}function Ma(i,s,l={}){const{window:e=Qi}=l;return Pl(i,s,e?.sessionStorage,l)}function $3(i={}){const{window:s=Qi,...l}=i;return P3(s,l)}function j3(i={}){const{window:s=Qi,initialWidth:l=Number.POSITIVE_INFINITY,initialHeight:e=Number.POSITIVE_INFINITY,listenOrientation:n=!0,includeScrollbar:t=!0,type:a="inner"}=i,h=ei(l),k=ei(e),d=()=>{if(s)if(a==="outer")h.value=s.outerWidth,k.value=s.outerHeight;else if(a==="visual"&&s.visualViewport){const{width:c,height:g,scale:o}=s.visualViewport;h.value=Math.round(c*o),k.value=Math.round(g*o)}else t?(h.value=s.innerWidth,k.value=s.innerHeight):(h.value=s.document.documentElement.clientWidth,k.value=s.document.documentElement.clientHeight)};d(),pe(d);const p={passive:!0};if(ki("resize",d,p),s&&a==="visual"&&s.visualViewport&&ki(s.visualViewport,"resize",d,p),n){const c=Pa("(orientation: portrait)");Si(c,()=>d())}return{width:h,height:k}}const V3=(i,s)=>{ki("keydown",e=>{const n=pi(i);n?.length&&n3(e,n)&&!l3(e.target)&&(e.preventDefault(),s())})},zp=(i=!0)=>{const{frontmatter:s,page:l}=wl();return C(()=>s.value.contributors===!1||!pi(i)?[]:l.value.git.contributors??[])};var vr={"/":{contributors:"贡献者",changelog:"更新日志",timeOn:"于",viewChangelog:"查看所有更新日志",latestUpdateAt:"最近更新"}};const H3=typeof vr>"u"?{}:vr,qp=()=>Ll(H3),z3=(i=!0)=>{const{lang:s,page:l}=wl(),e=qp();return C(()=>{if(!pi(i))return null;const n=l.value.git?.updatedTime??l.value.git?.changelog?.[0].time;if(!n)return null;const t=new Date(n),a=new Intl.DateTimeFormat(s.value,{dateStyle:"short",timeStyle:"short"}).format(n);return{date:t,text:a,iso:t.toISOString(),locale:e.value.latestUpdateAt}})},q3=({level:i=2,text:s,anchor:l})=>r(`h${i||2}`,{id:l,tabindex:"-1"},r("a",{href:`#${l}`,class:"header-anchor"},r("span",s))),U3=({name:i,url:s,avatar:l})=>r(s?"a":"span",{href:s,target:"_blank",rel:"noreferrer",class:"vp-contributor"},[l?r("img",{src:l,alt:"",class:"vp-contributor-avatar"}):null,r("span",{class:"vp-contributor-name"},i)]),G3=O({name:"GitContributors",props:{title:String,headerLevel:{type:Number,default:2}},setup(i){const s=zp(),l=qp();return()=>s.value.length?[r(q3,{level:i.headerLevel,anchor:"doc-contributors",text:i.title||l.value.contributors}),r("div",{class:"vp-contributors"},s.value.map(e=>r(U3,e)))]:null}}),W3={enhance:({app:i})=>{i.component("GitContributors",G3)}},K3=Object.freeze(Object.defineProperty({__proto__:null,default:W3},Symbol.toStringTag,{value:"Module"})),Q3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),J3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Z3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Y3=Ss({setup(){ki("beforeprint",()=>{document.querySelectorAll("details").forEach(i=>{i.open=!0})},{passive:!0})}}),X3=Object.freeze(Object.defineProperty({__proto__:null,default:Y3},Symbol.toStringTag,{value:"Module"})),iA="VUEPRESS_CODE_TAB_STORE",un=Pl(iA,{}),sA=O({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},tabId:String},slots:Object,setup(i,{slots:s}){let l=i.data.map(()=>qe());const e=ii(i.active),n=ei([]),t=()=>{i.tabId&&(un.value[i.tabId]=i.data[e.value].id)},a=(p=e.value)=>{e.value=p<n.value.length-1?p+1:0,n.value[e.value].focus()},h=(p=e.value)=>{e.value=p>0?p-1:n.value.length-1,n.value[e.value].focus()},k=(p,c)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),e.value=c):p.key==="ArrowRight"?(p.preventDefault(),a()):p.key==="ArrowLeft"&&(p.preventDefault(),h()),i.tabId&&(un.value[i.tabId]=i.data[e.value].id)},d=()=>{if(i.tabId){const p=i.data.findIndex(({id:c})=>un.value[i.tabId]===c);if(p!==-1)return p}return i.active};return oi(()=>{e.value=d(),Si(()=>i.tabId&&un.value[i.tabId],(p,c)=>{if(i.tabId&&p!==c){const g=i.data.findIndex(({id:o})=>o===p);g!==-1&&(e.value=g)}})}),()=>i.data.length?r("div",{class:"vp-code-tabs"},[r("div",{class:"vp-code-tabs-nav",role:"tablist"},i.data.map(({id:p},c)=>{const g=c===e.value;return r("button",{type:"button",ref:o=>{o&&(n.value[c]=o)},class:["vp-code-tab-nav",{active:g}],role:"tab","aria-controls":l[c],"aria-selected":g,onClick:()=>{e.value=c,t()},onKeydown:o=>{k(o,c)}},s[`title${c}`]({value:p,isActive:g}))})),i.data.map(({id:p},c)=>{const g=c===e.value;return r("div",{class:["vp-code-tab",{active:g}],id:l[c],role:"tabpanel","aria-expanded":g},[r("div",{class:"vp-code-tab-title"},s[`title${c}`]({value:p,isActive:g})),s[`tab${c}`]({value:p,isActive:g})])})]):null}}),lA="VUEPRESS_TAB_STORE",yt=Pl(lA,{}),eA=O({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},tabId:String},slots:Object,setup(i,{slots:s}){let l=i.data.map(()=>qe());const e=ii(i.active),n=ei([]),t=()=>{i.tabId&&(yt.value[i.tabId]=i.data[e.value].id)},a=(p=e.value)=>{e.value=p<n.value.length-1?p+1:0,n.value[e.value].focus()},h=(p=e.value)=>{e.value=p>0?p-1:n.value.length-1,n.value[e.value].focus()},k=(p,c)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),e.value=c):p.key==="ArrowRight"?(p.preventDefault(),a()):p.key==="ArrowLeft"&&(p.preventDefault(),h()),t()},d=()=>{if(i.tabId){const p=i.data.findIndex(({id:c})=>yt.value[i.tabId]===c);if(p!==-1)return p}return i.active};return oi(()=>{e.value=d(),Si(()=>i.tabId&&yt.value[i.tabId],(p,c)=>{if(i.tabId&&p!==c){const g=i.data.findIndex(({id:o})=>o===p);g!==-1&&(e.value=g)}})}),()=>i.data.length?r("div",{class:"vp-tabs"},[r("div",{class:"vp-tabs-nav",role:"tablist"},i.data.map(({id:p},c)=>{const g=c===e.value;return r("button",{type:"button",ref:o=>{o&&(n.value[c]=o)},class:["vp-tab-nav",{active:g}],role:"tab","aria-controls":l[c],"aria-selected":g,onClick:()=>{e.value=c,t()},onKeydown:o=>{k(o,c)}},s[`title${c}`]({value:p,isActive:g}))})),i.data.map(({id:p},c)=>{const g=c===e.value;return r("div",{class:["vp-tab",{active:g}],id:l[c],role:"tabpanel","aria-expanded":g},[r("div",{class:"vp-tab-title"},s[`title${c}`]({value:p,isActive:g})),s[`tab${c}`]({value:p,isActive:g})])})]):null}}),nA={enhance:({app:i})=>{i.component("CodeTabs",sA),i.component("Tabs",eA)}},tA=Object.freeze(Object.defineProperty({__proto__:null,default:nA},Symbol.toStringTag,{value:"Module"})),aA='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',hA='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var rA={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const Bt=rA,mr={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},kA=(i,s,l)=>{const e=document.createElement(i);return ol(s)&&_s(s).forEach(n=>{if(n.indexOf("data"))e[n]=s[n];else{const t=n.replace("data","");e.dataset[t]=s[n]}}),e},Na=i=>({...Bt,...i,jsLib:Array.from(new Set([Bt.jsLib,i.jsLib??[]].flat())),cssLib:Array.from(new Set([Bt.cssLib,i.cssLib??[]].flat()))}),Xl=(i,s)=>{if(wa(i[s]))return i[s];const l=new Promise(e=>{const n=document.createElement("script");n.src=s,document.querySelector("body")?.appendChild(n),n.onload=()=>{e()}});return i[s]=l,l},pA=(i,s)=>{if(s.css&&Array.from(i.childNodes).every(l=>l.nodeName!=="STYLE")){const l=kA("style",{innerHTML:s.css});i.appendChild(l)}},dA=(i,s,l)=>{const e=l.getScript();if(e&&Array.from(s.childNodes).every(n=>n.nodeName!=="SCRIPT")){const n=document.createElement("script");n.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${i} .vp-code-demo-display').shadowRoot;
${e}}`)),s.appendChild(n)}},cA=["html","js","css"],gA=i=>{const s=_s(i),l={html:[],js:[],css:[],isLegal:!1};return cA.forEach(e=>{const n=s.filter(t=>mr[e].types.includes(t));if(n.length){const t=n[0];l[e]=[i[t].replace(/^\n|\n$/g,""),mr[e].map[t]??t]}}),l.isLegal=(!l.html.length||l.html[1]==="none")&&(!l.js.length||l.js[1]==="none")&&(!l.css.length||l.css[1]==="none"),l},Up=i=>i.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),Gp=i=>`<div id="app">
${Up(i)}
</div>`,oA=i=>`${i.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,uA=i=>i.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),Wp=i=>`(function(exports){var module={};module.exports=exports;${i};return module.exports.__esModule?exports.default:module.exports;})({})`,AA=(i,s)=>{const l=Na(s),e=i.js[0]??"";return{...l,html:Up(i.html[0]??""),js:e,css:i.css[0]??"",isLegal:i.isLegal,getScript:()=>l.useBabel?window.Babel?.transform(e,{presets:["es2015"]})?.code??"":e}},yA=/<template>([\s\S]+)<\/template>/u,BA=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,vA=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,mA=(i,s)=>{const l=Na(s),e=i.html[0]??"",n=yA.exec(e),t=BA.exec(e),a=vA.exec(e),h=n?.[1].replace(/^\n|\n$/g,"")??"",[k="",d=""]=t?[t[4].replace(/^\n|\n$/g,""),t[3]]:[],[p="",c=""]=a?[a[4].replace(/^\n|\n$/g,""),a[3]]:[],g=d===""&&(c===""||c==="css");return{...l,html:Gp(h),js:uA(k),css:p,isLegal:g,jsLib:[l.vue,...l.jsLib],getScript:()=>{const o=s.useBabel?window.Babel?.transform(k,{presets:["es2015"]})?.code??"":k.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${Wp(o)};appOptions.template=\`${h.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},FA=(i,s)=>{const l=Na(s),e=i.js[0]??"";return{...l,html:Gp(""),js:oA(e),css:i.css[0]??i.js[0]?.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim()??"",isLegal:i.isLegal,jsLib:[l.react,l.reactDOM,...l.jsLib],jsx:!0,getScript:()=>{const n=window.Babel?.transform(e,{presets:["es2015","react"]})?.code??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${Wp(n)}))`}}},ie={},fA=i=>Promise.all([Xl(ie,i.babel),Xl(ie,i.react),Xl(ie,i.reactDOM)]),CA=i=>{const s=[Xl(ie,i.vue)];return i.useBabel&&s.push(Xl(ie,i.babel)),Promise.all(s)},EA=i=>i.useBabel?Xl(ie,i.babel):Promise.resolve();var bA=O({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:String,config:String,code:{type:String,required:!0}},slots:Object,setup(i,{slots:s}){const[l,e]=Me(!1),n=ei(),t=ei(),a=ii("0"),h=ii(!1),k=C(()=>JSON.parse(i.config?gl(i.config):"{}")),d=C(()=>{const m=JSON.parse(gl(i.code));return gA(m)}),p=C(()=>i.type==="react"?FA(d.value,k.value):i.type==="vue"?mA(d.value,k.value):AA(d.value,k.value)),c=C(()=>p.value.isLegal),g=(m=!1)=>{const E=n.value.attachShadow({mode:"open"}),_=document.createElement("div");_.classList.add("code-demo-app"),E.appendChild(_),c.value?(m&&(_.innerHTML=p.value.html),pA(E,p.value),dA(i.id,E,p.value),a.value="0"):a.value="auto",h.value=!0},o=()=>{switch(i.type){case"react":return fA(p.value).then(()=>{g()});case"vue":return CA(p.value).then(()=>{g()});default:return EA(p.value).then(()=>{g(!0)})}};let B=null;return ki("beforeprint",()=>{e(!0)}),ki("afterprint",()=>{B!==null&&e(B),B=null}),Ia(t,()=>{l.value&&(a.value=`${t.value.clientHeight+14}px`)}),oi(async()=>{await o()}),()=>r("div",{class:"vp-container vp-code-demo",id:i.id},[r("div",{class:"vp-container-header"},[p.value.isLegal?r("button",{type:"button",title:"toggle",class:["vp-code-demo-toggle-button",l.value?"down":"end"],onClick:()=>{a.value=l.value?"0":`${t.value.clientHeight+14}px`,e()}}):null,i.title?r("span",{class:"vp-container-title"},decodeURIComponent(i.title)):null,p.value.isLegal&&(p.value.jsfiddle??!0)?r("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[r("input",{type:"hidden",name:"html",value:p.value.html}),r("input",{type:"hidden",name:"js",value:p.value.js}),r("input",{type:"hidden",name:"css",value:p.value.css}),r("input",{type:"hidden",name:"wrap",value:"1"}),r("input",{type:"hidden",name:"panel_js",value:"3"}),r("input",{type:"hidden",name:"resources",value:[...p.value.cssLib,...p.value.jsLib].join(",")}),r("button",{type:"submit",class:"jsfiddle-button",innerHTML:hA,"aria-label":"JSFiddle","data-balloon-pos":"down"})]):null,!p.value.isLegal||(p.value.codepen??!0)?r("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[r("input",{type:"hidden",name:"data",value:JSON.stringify({html:p.value.html,js:p.value.js,css:p.value.css,js_external:p.value.jsLib.join(";"),css_external:p.value.cssLib.join(";"),layout:p.value.codepenLayout,html_pre_processor:d.value.html[1]??"none",js_pre_processor:d.value.js[1]??(p.value.jsx?"babel":"none"),css_pre_processor:d.value.css[1]??"none",editors:p.value.codepenEditors})}),r("button",{type:"submit",innerHTML:aA,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"down"})]):null]),h.value?null:r(xl,{class:"vp-code-demo-loading"}),r("div",{ref:n,class:"vp-code-demo-display",style:{display:c.value&&h.value?"block":"none"}}),r("div",{class:"vp-code-demo-code-wrapper",style:{height:a.value}},r("div",{ref:t,class:"vp-code-demo-codes"},s.default()))])}}),_A=O({name:"MdDemo",props:{id:{type:String,required:!0},title:String},slots:Object,setup(i,{slots:s}){const[l,e]=Me(!1),n=ei(),t=ii("0");let a=null;return ki("beforeprint",()=>{e(!0)}),ki("afterprint",()=>{a!==null&&e(a),a=null}),Ia(n,()=>{l.value&&(t.value=`${n.value.clientHeight+14}px`)}),()=>r("div",{class:"vp-container vp-md-demo",id:i.id},[r("div",{class:"vp-container-header"},[r("button",{type:"button",title:"toggle",class:["vp-md-demo-toggle-button",l.value?"down":"end"],onClick:()=>{t.value=l.value?"0":`${n.value.clientHeight+14}px`,e()}}),i.title?r("div",{class:"vp-container-title"},decodeURIComponent(i.title)):null]),r("div",{class:"vp-md-demo-display"},s.default()),r("div",{class:"vp-md-demo-code-wrapper",style:{height:t.value}},r("div",{ref:n,class:"vp-md-demo-codes"},s.code()))])}});const DA={enhance:({app:i})=>{i.component("CodeDemo",bA),i.component("MdDemo",_A)}},SA=Object.freeze(Object.defineProperty({__proto__:null,default:DA},Symbol.toStringTag,{value:"Module"})),TA=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),wA=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),xA=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":{"tokens":["$2b$10$bpF7h2USp8bwzAj79mnMy.ImBIWFzIvGSh5K8rFrG1henr4JL3umm"],"hint":"Password: 1234"},"/zh/demo/encrypt.html":{"tokens":["$2b$10$mkdVj5XpcqwSkB7VV1en9utkmomIWrzZHiRGDcLuCw40YRZ2AuaOm"],"hint":"Password: 1234"}}},"author":{"name":"老马啸西风","url":"https://houbb.github.io"},"logo":"/assets/images/lmxxf.png","repo":"bbhou/lmxxf-notes","docsDir":"src","blog":{"medias":{"GitHub":"https://houbb.github.com","Zhihu":"https://www.zhihu.com/people/xi-jue-3-28","Gitee":"https://gitee.com/houbinbin","Gitlab":"https://gitlab.com/houbb","Gmail":"houbinbin.echo@gmail.com","Wechat":"https://mp.weixin.qq.com/s/rkSvXxiiLGjl3S-ZOZCr0Q","VuePressThemeHope":{"icon":"https://theme-hope-assets.vuejs.press/logo.svg","link":"https://theme-hope.vuejs.press"}}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","contributors":"贡献者","editLink":"Edit this page on GitHub","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routerLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":[{"text":"个人成长","icon":"fa6-solid:user-graduate","children":[{"text":"老马随笔","icon":"fa6-solid:pen-nib","link":"/category/notes/"},{"text":"职业发展","icon":"fa6-solid:user-tie","link":"/category/company/"},{"text":"方法模型","icon":"fa6-solid:diagram-project","link":"/category/methodsandmodel/"}]},{"text":"财务自由","icon":"fa6-solid:sack-dollar","children":[{"text":"财富自由","icon":"fa6-solid:sack-dollar","link":"/category/money/"},{"text":"商业思考","icon":"fa6-solid:briefcase","link":"/category/business/"}]},{"text":"推广营销","icon":"fa6-solid:bullhorn","children":[{"text":"市场营销","icon":"fa6-solid:bullhorn","link":"/category/marketing/"},{"text":"媒体运营","icon":"fa6-solid:photo-film","link":"/category/fans/"}]},{"text":"生活兴趣","icon":"fa6-solid:heart","children":[{"text":"环游世界","icon":"fa6-solid:globe","link":"/category/travel/"},{"text":"电影影视","icon":"fa6-solid:film","link":"/category/moive/"},{"text":"读书笔记","icon":"fa6-solid:book-open","link":"/category/reading/"}]},{"text":"全部文章","icon":"fa6-solid:pen-to-square","link":"/posts/"}],"sidebar":{"/zh/":["",{"text":"如何使用","icon":"laptop-code","prefix":"demo/","link":"demo/","children":"structure"},{"text":"文章","icon":"book","prefix":"posts/","children":"structure"},"intro",{"text":"幻灯片","icon":"person-chalkboard","link":"https://ecosystem.vuejs.press/zh/plugins/markdown/revealjs/demo.html"}]},"footer":"我是老马，期待与你的下次重逢","displayFooter":true,"blog":{"description":"一个兴趣使然的技术爱好者","intro":"/intro.html"}}}}'),LA=ii(xA),Kp=()=>LA,Qp=Symbol(""),RA=()=>{const i=bi(Qp);if(!i)throw new Error("useThemeLocaleData() is called without provider.");return i},PA=(i,s)=>{const{locales:l,...e}=i;return{...e,...l?.[s]}},IA=Ss({enhance({app:i}){const s=Kp(),l=i._context.provides[ba],e=C(()=>PA(s.value,l.routeLocale.value));i.provide(Qp,e),Object.defineProperties(i.config.globalProperties,{$theme:{get(){return s.value}},$themeLocale:{get(){return e.value}}})}}),OA=Object.freeze(Object.defineProperty({__proto__:null,default:IA},Symbol.toStringTag,{value:"Module"}));var MA={"/":{backToTop:"返回顶部"}};const NA=O({name:"BackToTop",setup(){const i=ks(),s=Ll(MA),l=ei(),{height:e}=R3(l),{height:n}=j3(),{y:t}=$3(),a=C(()=>(i.value.backToTop??!0)&&t.value>100),h=C(()=>t.value/(e.value-n.value)*100);return oi(()=>{l.value=document.body}),()=>r(ee,{name:"fade-in"},()=>a.value?r("button",{type:"button",class:"vp-back-to-top-button","aria-label":s.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[r("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":h.value},r("svg",r("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*h.value*.48} ${Math.PI*(100-h.value)*.48}`}))),r("div",{class:"back-to-top-icon"})]):null)}}),$A=Ss({rootComponents:[NA]}),jA=Object.freeze(Object.defineProperty({__proto__:null,default:$A},Symbol.toStringTag,{value:"Module"})),VA=/language-(shellscript|shell|bash|sh|zsh)/,HA=({selector:i,ignoreSelector:s,inlineSelector:l,duration:e=2e3,locales:n,showInMobile:t,transform:a})=>{const h=Pa("(max-width: 419px)"),k=C(()=>!h.value||t),d=Ll(n),p=m=>{if(m.hasAttribute("copy-code"))return;const E=document.createElement("button");E.type="button",E.classList.add("vp-copy-code-button"),E.setAttribute("aria-label",d.value.copy),E.setAttribute("data-copied",d.value.copied),m.parentElement?.insertBefore(E,m),m.setAttribute("copy-code","")},c=()=>{document.body.classList.toggle("no-copy-code",!k.value),k.value&&document.querySelectorAll(i).forEach(p)};us(k,()=>Os(c),{flush:"post"}),As(m=>{m!=="beforeUnmount"&&c()});const{copy:g}=b3({legacy:!0}),o=new WeakMap,B=async(m,E,_)=>{const f=E.cloneNode(!0);a&&a(f);let A=f.textContent||"";if(VA.test(m.className)&&(A=A.replace(/^ *(\$|>) /gm,"")),await g(A),e<=0)return;_.classList.add("copied"),clearTimeout(o.get(_));const F=setTimeout(()=>{_.classList.remove("copied"),_.blur(),o.delete(_)},e);o.set(_,F)};ki("click",m=>{const E=m.target;if(k.value&&E.matches('div[class*="language-"] > button.vp-copy-code-button')){const _=E.parentElement,f=E.nextElementSibling;if(!_||!f)return;B(_,f,E)}},{passive:!0})};var zA={"/":{copy:"复制代码",copied:"已复制"}};const qA=Ss({setup:()=>{HA({selector:'[vp-content] div[class*="language-"] pre',ignoreSelector:"",inlineSelector:"",locales:zA,duration:2e3,showInMobile:!1})}}),UA=Object.freeze(Object.defineProperty({__proto__:null,default:qA},Symbol.toStringTag,{value:"Module"})),GA=O({name:"VPIcon",props:{type:{type:String,default:"unknown"},prefix:String,icon:String,color:String,size:[String,Number],verticalAlign:String,sizing:{type:String,default:"height"}},setup(i){const s=C(()=>i.icon?re(i.icon)?i.icon:zn(i.icon)?mi(i.icon):null:null),l=C(()=>{const n={},{type:t,verticalAlign:a,size:h,sizing:k}=i,d={sizing:k};return i.color&&(n.color=i.color),h&&(n["--icon-size"]=Number.isNaN(Number(h))?h:`${h}px`),a&&(n["--icon-vertical-align"]=a),t==="iconify"&&(k!=="height"&&(d.width=i.size||"1em"),k!=="width"&&(d.height=i.size||"1em")),_s(n).length&&(d.style=n),d}),e=n=>n.includes("fa-")||/^fa.$/.test(n)?n:`fa-${n}`;return()=>{const{type:n,icon:t,prefix:a="",sizing:h}=i;if(!t)return null;if(s.value)return r("img",{class:"vp-icon",src:s.value,alt:"","aria-hidden":"","no-view":"",...l.value});if(n==="iconify")return r("iconify-icon",{key:t,class:"vp-icon",icon:t.includes(":")?t:`${a}${t}`,...l.value});if(n==="fontawesome"){const[k,d]=t.includes(":")?t.split(":",2):["fas",t];return r("i",{key:t,class:["vp-icon",k.length===1?`fa${k}`:e(k),...d.split(" ").map(e),h==="height"?"":"fa-fw"],...l.value})}return r("i",{key:t,class:["vp-icon",t.includes(" ")?t:`${a}${t}`],...l.value})}}}),WA={enhance:({app:i})=>{Xi("VPIcon")||i.component("VPIcon",s=>r(GA,{type:"iconify",prefix:"fa6-solid:",...s}))},setup:()=>{M3("https://cdn.jsdelivr.net/npm/iconify-icon@2")}},KA=Object.freeze(Object.defineProperty({__proto__:null,default:WA},Symbol.toStringTag,{value:"Module"})),QA=ii({}),Jp=Symbol(""),JA=()=>bi(Jp),ZA=i=>{i.provide(Jp,QA)},Zp=i=>new Promise((s,l)=>{i.complete?s({type:"image",element:i,src:i.src,width:i.naturalWidth,height:i.naturalHeight,alt:i.alt,msrc:i.src}):(i.onload=()=>{s(Zp(i))},i.onerror=()=>{l()})}),YA='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',XA=(i,{download:s=!0,fullscreen:l=!0}={})=>{i.on("uiRegister",()=>{if(i.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:e=>{const n=[];let t=-1;for(let a=0;a<i.getNumItems();a++){const h=document.createElement("div");h.className="photo-swipe-bullet",h.onclick=k=>{i.goTo(n.indexOf(k.target))},n.push(h),e.appendChild(h)}i.on("change",()=>{t>=0&&n[t].classList.remove("active"),n[i.currIndex].classList.add("active"),t=i.currIndex})}}),l){const{isSupported:e,toggle:n}=qn();e.value&&i.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{n()}})}s&&i.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:e=>{e.setAttribute("download",""),e.setAttribute("target","_blank"),e.setAttribute("rel","noopener"),i.on("change",()=>{e.setAttribute("href",i.currSlide.data.src)})}})})},i4=({selector:i,locales:s,download:l=!0,fullscreen:e=!0,scrollToClose:n=!0})=>{const t=JA(),a=Ll(s),h=ks(),k=C(()=>{const{photoSwipe:o}=h.value;return o===!1?null:Bi(o)?o:Qs(i)?i.join(", "):i}),d=C(()=>({...t.value,...a.value,download:l,fullscreen:e,scrollToClose:n}));let p=null,c=0,g=null;ki("click",async o=>{const B=o.target;if(!k.value||!p||!B.matches(k.value))return;c!==0&&g.destroy();const m=Date.now(),E=await p,_=Array.from(document.querySelectorAll(k.value)),f=_.map(F=>({html:YA,element:F,msrc:F.src})),A=_.findIndex(F=>F===B);g=new E({preloaderDelay:0,showHideAnimationType:"zoom",...d.value,dataSource:f,index:A,...n?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),c=m,XA(g,{download:l,fullscreen:e}),g.init(),g.on("destroy",()=>{g=null,c=0}),_.map((F,w)=>Zp(F).then(j=>{c===m&&(f.splice(w,1,j),g?.refreshSlideContent(w))}))},{passive:!0}),ki("wheel",()=>{d.value.scrollToClose&&g?.close()}),oi(()=>{("requestIdleCallback"in window?window.requestIdleCallback:setTimeout)(()=>{p=y(async()=>{const{default:o}=await import("./photoswipe.esm-CKV1Bsxh.js");return{default:o}},[]).then(({default:o})=>o)})}),Ds(()=>{g?.destroy()})};var s4={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const l4="[vp-content] :not(a) > img:not([no-view])",e4=s4,n4=!0,t4=!0,a4=!0;var h4=Ss({enhance:({app:i})=>{ZA(i)},setup:()=>{i4({selector:l4,locales:e4,download:n4,fullscreen:t4,scrollToClose:a4})}});const r4=Object.freeze(Object.defineProperty({__proto__:null,default:h4},Symbol.toStringTag,{value:"Module"})),Yp=({type:i="info",text:s="",vertical:l,color:e,bgColor:n},{slots:t})=>r("span",{class:["vp-badge",i,{diy:!!(e||n)}],style:{backgroundColor:n??!1,color:e??!1,verticalAlign:l??!1}},t.default?.()??s);Yp.displayName="Badge";const Xp=({title:i,desc:s="",logo:l,background:e,color:n,link:t})=>{const a=[l?r("img",{class:"vp-card-logo",src:mi(l),loading:"lazy","no-view":""}):null,r("div",{class:"vp-card-content"},[r("div",{class:"vp-card-title",innerHTML:i}),r("hr"),r("div",{class:"vp-card-desc",innerHTML:s})])],h={};return e&&(h.background=e),n&&(h.color=n),t?jn(t)?r("a",{class:"vp-card",href:t,target:"_blank",style:h},a):r(Li,{to:t,class:"vp-card",style:h},()=>a):r("div",{class:"vp-card",style:h},a)};Xp.displayName="VPCard";const k4={enhance:({app:i})=>{Xi("Badge")||i.component("Badge",Yp),Xi("VPCard")||i.component("VPCard",Xp)},setup:()=>{},rootComponents:[]},p4=Object.freeze(Object.defineProperty({__proto__:null,default:k4},Symbol.toStringTag,{value:"Module"})),Fr=async(i,s)=>{const{path:l,query:e}=i.currentRoute.value,{scrollBehavior:n}=i.options;i.options.scrollBehavior=void 0,await i.replace({path:l,query:e,hash:s}),i.options.scrollBehavior=n},d4=({headerLinkSelector:i,headerAnchorSelector:s,delay:l,offset:e=5})=>{const n=Xs();ki("scroll",Ze(()=>{const a=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(a)<e){Fr(n,"");return}const k=window.innerHeight+a,d=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),p=Math.abs(d-k)<e,c=Array.from(document.querySelectorAll(i)),o=Array.from(document.querySelectorAll(s)).filter(B=>c.some(m=>m.hash===B.hash));for(let B=0;B<o.length;B++){const m=o[B],E=o[B+1],_=a>=(m.parentElement?.offsetTop??0)-e,f=!E||a<(E.parentElement?.offsetTop??0)-e;if(!(_&&f))continue;const F=decodeURIComponent(n.currentRoute.value.hash),w=decodeURIComponent(m.hash);if(F===w)return;if(p){for(let j=B+1;j<o.length;j++)if(F===decodeURIComponent(o[j].hash))return}Fr(n,w);return}},l))},c4=".vp-sidebar-link, .vp-toc-link",g4=".header-anchor",o4=200,u4=5,A4=Ss({setup(){d4({headerLinkSelector:c4,headerAnchorSelector:g4,delay:o4,offset:u4})}}),y4=Object.freeze(Object.defineProperty({__proto__:null,default:A4},Symbol.toStringTag,{value:"Module"}));let id=i=>Bi(i.title)?{title:i.title}:null;const sd=Symbol(""),B4=i=>{id=i},v4=()=>bi(sd),m4=i=>{i.provide(sd,id)};var F4={"/":{title:"目录",empty:"暂无目录"}},f4=O({name:"Catalog",props:{base:String,level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(i){const{page:s,routes:l,site:e}=wl(),n=v4(),t=Ll(F4),a=ei(ke(l.value).map(([k,{meta:d}])=>{const p=n(d);if(!p)return null;const c=k.split("/").length;return{level:e3(k,"/")?c-2:c-1,base:k.replace(/\/[^/]+\/?$/,"/"),path:k,...p}}).filter(k=>ol(k)&&Bi(k.title))),h=C(()=>{const k=i.base?a2(tp(i.base)):s.value.path.replace(/\/[^/]+$/,"/"),d=k.split("/").length-2,p=[];return a.value.filter(({level:c,path:g})=>{if(!Oe(g,k)||g===k)return!1;if(k==="/"){const o=_s(e.value.locales).filter(B=>B!=="/");if(g==="/404.html"||o.some(B=>Oe(g,B)))return!1}return c-d<=i.level}).sort(({title:c,level:g,order:o},{title:B,level:m,order:E})=>g-m||(mn(o)?mn(E)?o>0?E>0?o-E:-1:E<0?o-E:1:o:mn(E)?E:c.localeCompare(B))).forEach(c=>{const{base:g,level:o}=c;switch(o-d){case 1:{p.push(c);break}case 2:{const B=p.find(m=>m.path===g);B&&(B.children??=[]).push(c);break}default:{const B=p.find(m=>m.path===g.replace(/\/[^/]+\/$/,"/"));if(B){const m=B.children?.find(E=>E.path===g);m&&(m.children??=[]).push(c)}}}}),p});return()=>{const k=h.value.some(d=>d.children);return r("div",{class:["vp-catalog",{index:i.index}]},[i.hideHeading?null:r("h2",{class:"vp-catalog-main-title"},t.value.title),h.value.length?r(i.index?"ol":"ul",{class:["vp-catalog-list",{deep:k}]},h.value.map(({children:d=[],title:p,path:c,content:g})=>{const o=r(Li,{class:"vp-catalog-title",to:c},()=>g?r(g):p);return r("li",{class:"vp-catalog-item"},k?[r("h3",{id:p,class:["vp-catalog-child-title",{"has-children":d.length}]},[r("a",{href:`#${p}`,class:"vp-catalog-header-anchor","aria-hidden":!0}),o]),d.length?r(i.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:B=[],content:m,path:E,title:_})=>r("li",{class:"vp-child-catalog"},[r("div",{class:["vp-catalog-sub-title",{"has-children":B.length}]},[r("a",{href:`#${_}`,class:"vp-catalog-header-anchor"}),r(Li,{class:"vp-catalog-title",to:E},()=>m?r(m):_)]),B.length?r(i.index?"ol":"div",{class:i.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},B.map(({content:f,path:A,title:F})=>i.index?r("li",{class:"vp-sub-catalog"},r(Li,{to:A},()=>f?r(f):F)):r(Li,{class:"vp-sub-catalog-link",to:A},()=>f?r(f):F))):null]))):null]:r("div",{class:"vp-catalog-child-title"},o))})):r("p",{class:"vp-empty-catalog"},t.value.empty)])}}}),C4=Ss({enhance:({app:i})=>{m4(i),Xi("Catalog",i)||i.component("Catalog",f4)}});const E4=Object.freeze(Object.defineProperty({__proto__:null,default:C4},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const fr=(i,s)=>{i.classList.add(s)},Cr=(i,s)=>{i.classList.remove(s)},b4=i=>{i?.parentNode?.removeChild(i)},vt=(i,s,l)=>i<s?s:i>l?l:i,Er=i=>(-1+i)*100,_4=(()=>{const i=[],s=()=>{const l=i.shift();l&&l(s)};return l=>{i.push(l),i.length===1&&s()}})(),D4=i=>i.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(s,l)=>l.toUpperCase()),An=(()=>{const i=["Webkit","O","Moz","ms"],s={},l=t=>{const{style:a}=document.body;if(t in a)return t;const h=t.charAt(0).toUpperCase()+t.slice(1);let k=i.length;for(;k--;){const d=`${i[k]}${h}`;if(d in a)return d}return t},e=t=>{const a=D4(t);return s[a]??=l(a)},n=(t,a,h)=>{t.style[e(a)]=h};return(t,a)=>{for(const h in a){const k=a[h];Object.hasOwn(a,h)&&wa(k)&&n(t,h,k)}}})(),Hs={minimum:.08,easing:"ease",speed:200,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},wi={percent:null,isRendered:()=>!!document.getElementById("nprogress"),set:i=>{const{speed:s,easing:l}=Hs,e=wi.isStarted(),n=vt(i,Hs.minimum,1);wi.percent=n===1?null:n;const t=wi.render(!e),a=t.querySelector(Hs.barSelector);return t.offsetWidth,_4(h=>{An(a,{transform:`translate3d(${Er(n)}%,0,0)`,transition:`all ${s}ms ${l}`}),n===1?(An(t,{transition:"none",opacity:"1"}),t.offsetWidth,setTimeout(()=>{An(t,{transition:`all ${s}ms linear`,opacity:"0"}),setTimeout(()=>{wi.remove(),h()},s)},s)):setTimeout(()=>{h()},s)}),wi},isStarted:()=>typeof wi.percent=="number",start:()=>{wi.percent||wi.set(0);const i=()=>{setTimeout(()=>{wi.percent&&(wi.trickle(),i())},Hs.trickleSpeed)};return i(),wi},done:i=>!i&&!wi.percent?wi:wi.increase(.3+.5*Math.random()).set(1),increase:i=>{let{percent:s}=wi;return s?(s=vt(s+(typeof i=="number"?i:(1-s)*vt(Math.random()*s,.1,.95)),0,.994),wi.set(s)):wi.start()},trickle:()=>wi.increase(Math.random()*Hs.trickleRate),render:i=>{if(wi.isRendered())return document.getElementById("nprogress");fr(document.documentElement,"nprogress-busy");const s=document.createElement("div");s.id="nprogress",s.innerHTML=Hs.template;const l=s.querySelector(Hs.barSelector),e=document.querySelector(Hs.parent),n=i?"-100":Er(wi.percent??0);return An(l,{transition:"all 0 linear",transform:`translate3d(${n}%,0,0)`}),e&&(e!==document.body&&fr(e,"nprogress-custom-parent"),e.appendChild(s)),s},remove:()=>{Cr(document.documentElement,"nprogress-busy"),Cr(document.querySelector(Hs.parent),"nprogress-custom-parent"),b4(document.getElementById("nprogress"))}},S4=()=>{oi(()=>{const i=Xs(),s=new Set;s.add(i.currentRoute.value.path),i.beforeEach(l=>{s.has(l.path)||wi.start()}),i.afterEach(l=>{s.add(l.path),wi.done()})})},T4=Ss({setup(){S4()}}),w4=Object.freeze(Object.defineProperty({__proto__:null,default:T4},Symbol.toStringTag,{value:"Module"})),x4=[{title:"老马啸西风",headers:[],path:"/",pathLocale:"/",extraFields:[]},{title:"介绍页",headers:[{level:2,title:"关于我",slug:"关于我",link:"#关于我",children:[]},{level:2,title:"个人公众号",slug:"个人公众号",link:"#个人公众号",children:[]}],path:"/intro.html",pathLocale:"/",extraFields:[]},{title:"API 网关的定义与定位：微服务架构的统一入口",headers:[{level:2,title:"什么是 API 网关",slug:"什么是-api-网关",link:"#什么是-api-网关",children:[]},{level:2,title:"API 网关的核心特征",slug:"api-网关的核心特征",link:"#api-网关的核心特征",children:[{level:3,title:"1. 统一入口点",slug:"_1-统一入口点",link:"#_1-统一入口点",children:[]},{level:3,title:"2. 协议转换能力",slug:"_2-协议转换能力",link:"#_2-协议转换能力",children:[]},{level:3,title:"3. 请求/响应聚合",slug:"_3-请求-响应聚合",link:"#_3-请求-响应聚合",children:[]}]},{level:2,title:"API 网关的架构定位",slug:"api-网关的架构定位",link:"#api-网关的架构定位",children:[{level:3,title:"在微服务架构中的位置",slug:"在微服务架构中的位置",link:"#在微服务架构中的位置",children:[]},{level:3,title:"与其它组件的关系",slug:"与其它组件的关系",link:"#与其它组件的关系",children:[]}]},{level:2,title:"API 网关的分类",slug:"api-网关的分类",link:"#api-网关的分类",children:[{level:3,title:"按部署模式分类",slug:"按部署模式分类",link:"#按部署模式分类",children:[]},{level:3,title:"按功能范围分类",slug:"按功能范围分类",link:"#按功能范围分类",children:[]}]},{level:2,title:"API 网关的技术实现",slug:"api-网关的技术实现",link:"#api-网关的技术实现",children:[{level:3,title:"基于反向代理的实现",slug:"基于反向代理的实现",link:"#基于反向代理的实现",children:[]},{level:3,title:"基于编程框架的实现",slug:"基于编程框架的实现",link:"#基于编程框架的实现",children:[]}]},{level:2,title:"API 网关的选型考虑",slug:"api-网关的选型考虑",link:"#api-网关的选型考虑",children:[{level:3,title:"性能要求",slug:"性能要求",link:"#性能要求",children:[]},{level:3,title:"功能需求",slug:"功能需求",link:"#功能需求",children:[]},{level:3,title:"运维复杂度",slug:"运维复杂度",link:"#运维复杂度",children:[]}]},{level:2,title:"实践建议",slug:"实践建议",link:"#实践建议",children:[{level:3,title:"设计原则",slug:"设计原则",link:"#设计原则",children:[]},{level:3,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-1-1-api-gateway-definition-and-positioning.html",pathLocale:"/",extraFields:[]},{title:"单体到微服务演进中的 API 网关角色：从架构变迁看网关价值",headers:[{level:2,title:"单体应用的挑战",slug:"单体应用的挑战",link:"#单体应用的挑战",children:[{level:3,title:"单体架构的特点",slug:"单体架构的特点",link:"#单体架构的特点",children:[]},{level:3,title:"单体架构面临的问题",slug:"单体架构面临的问题",link:"#单体架构面临的问题",children:[]}]},{level:2,title:"微服务架构的兴起",slug:"微服务架构的兴起",link:"#微服务架构的兴起",children:[{level:3,title:"微服务的核心理念",slug:"微服务的核心理念",link:"#微服务的核心理念",children:[]},{level:3,title:"微服务带来的新挑战",slug:"微服务带来的新挑战",link:"#微服务带来的新挑战",children:[]}]},{level:2,title:"API 网关在架构演进中的关键作用",slug:"api-网关在架构演进中的关键作用",link:"#api-网关在架构演进中的关键作用",children:[{level:3,title:"解决客户端与服务间通信的复杂性",slug:"解决客户端与服务间通信的复杂性",link:"#解决客户端与服务间通信的复杂性",children:[]},{level:3,title:"提供统一的安全边界",slug:"提供统一的安全边界",link:"#提供统一的安全边界",children:[]},{level:3,title:"实现流量管理和控制",slug:"实现流量管理和控制",link:"#实现流量管理和控制",children:[]},{level:3,title:"提供统一的监控和日志",slug:"提供统一的监控和日志",link:"#提供统一的监控和日志",children:[]}]},{level:2,title:"API 网关在不同演进阶段的价值",slug:"api-网关在不同演进阶段的价值",link:"#api-网关在不同演进阶段的价值",children:[{level:3,title:"初期阶段：简化架构迁移",slug:"初期阶段-简化架构迁移",link:"#初期阶段-简化架构迁移",children:[]},{level:3,title:"成熟阶段：提升系统能力",slug:"成熟阶段-提升系统能力",link:"#成熟阶段-提升系统能力",children:[]},{level:3,title:"演进阶段：适应新需求",slug:"演进阶段-适应新需求",link:"#演进阶段-适应新需求",children:[]}]},{level:2,title:"实际案例分析",slug:"实际案例分析",link:"#实际案例分析",children:[{level:3,title:"电商平台的架构演进",slug:"电商平台的架构演进",link:"#电商平台的架构演进",children:[]},{level:3,title:"金融服务的架构演进",slug:"金融服务的架构演进",link:"#金融服务的架构演进",children:[]}]},{level:2,title:"未来发展趋势",slug:"未来发展趋势",link:"#未来发展趋势",children:[{level:3,title:"与服务网格的融合",slug:"与服务网格的融合",link:"#与服务网格的融合",children:[]},{level:3,title:"智能化发展",slug:"智能化发展",link:"#智能化发展",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-1-2-api-gateway-role-in-microservices-evolution.html",pathLocale:"/",extraFields:[]},{title:"API 网关与反向代理、负载均衡、服务网关的区别：技术组件的边界与协同",headers:[{level:2,title:"反向代理（Reverse Proxy）",slug:"反向代理-reverse-proxy",link:"#反向代理-reverse-proxy",children:[{level:3,title:"定义与核心功能",slug:"定义与核心功能",link:"#定义与核心功能",children:[]},{level:3,title:"技术实现",slug:"技术实现",link:"#技术实现",children:[]},{level:3,title:"应用场景",slug:"应用场景",link:"#应用场景",children:[]},{level:3,title:"局限性",slug:"局限性",link:"#局限性",children:[]}]},{level:2,title:"负载均衡器（Load Balancer）",slug:"负载均衡器-load-balancer",link:"#负载均衡器-load-balancer",children:[{level:3,title:"定义与核心功能",slug:"定义与核心功能-1",link:"#定义与核心功能-1",children:[]},{level:3,title:"负载均衡算法",slug:"负载均衡算法",link:"#负载均衡算法",children:[]},{level:3,title:"技术实现",slug:"技术实现-1",link:"#技术实现-1",children:[]},{level:3,title:"应用场景",slug:"应用场景-1",link:"#应用场景-1",children:[]},{level:3,title:"局限性",slug:"局限性-1",link:"#局限性-1",children:[]}]},{level:2,title:"服务网关（Service Gateway）",slug:"服务网关-service-gateway",link:"#服务网关-service-gateway",children:[{level:3,title:"定义与核心功能",slug:"定义与核心功能-2",link:"#定义与核心功能-2",children:[]},{level:3,title:"技术实现",slug:"技术实现-2",link:"#技术实现-2",children:[]},{level:3,title:"应用场景",slug:"应用场景-2",link:"#应用场景-2",children:[]},{level:3,title:"局限性",slug:"局限性-2",link:"#局限性-2",children:[]}]},{level:2,title:"API 网关（API Gateway）",slug:"api-网关-api-gateway",link:"#api-网关-api-gateway",children:[{level:3,title:"定义与核心功能",slug:"定义与核心功能-3",link:"#定义与核心功能-3",children:[]},{level:3,title:"技术实现",slug:"技术实现-3",link:"#技术实现-3",children:[]},{level:3,title:"应用场景",slug:"应用场景-3",link:"#应用场景-3",children:[]},{level:3,title:"优势",slug:"优势",link:"#优势",children:[]}]},{level:2,title:"组件间的关系与协同",slug:"组件间的关系与协同",link:"#组件间的关系与协同",children:[{level:3,title:"架构中的位置关系",slug:"架构中的位置关系",link:"#架构中的位置关系",children:[]},{level:3,title:"功能互补",slug:"功能互补",link:"#功能互补",children:[]},{level:3,title:"协同工作示例",slug:"协同工作示例",link:"#协同工作示例",children:[]}]},{level:2,title:"选择建议",slug:"选择建议",link:"#选择建议",children:[{level:3,title:"根据需求选择",slug:"根据需求选择",link:"#根据需求选择",children:[]},{level:3,title:"组合使用",slug:"组合使用",link:"#组合使用",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-1-3-differences-between-api-gateway-and-other-components.html",pathLocale:"/",extraFields:[]},{title:"什么是 API 网关：微服务架构的入口与大脑",headers:[{level:2,title:"API 网关的定义与定位",slug:"api-网关的定义与定位",link:"#api-网关的定义与定位",children:[]},{level:2,title:"单体到微服务演进中的角色",slug:"单体到微服务演进中的角色",link:"#单体到微服务演进中的角色",children:[]},{level:2,title:"与反向代理、负载均衡、服务网关的区别",slug:"与反向代理、负载均衡、服务网关的区别",link:"#与反向代理、负载均衡、服务网关的区别",children:[{level:3,title:"反向代理",slug:"反向代理",link:"#反向代理",children:[]},{level:3,title:"负载均衡器",slug:"负载均衡器",link:"#负载均衡器",children:[]},{level:3,title:"服务网关",slug:"服务网关",link:"#服务网关",children:[]},{level:3,title:"API 网关",slug:"api-网关",link:"#api-网关",children:[]}]},{level:2,title:"API 网关的核心功能",slug:"api-网关的核心功能",link:"#api-网关的核心功能",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-1-what-is-api-gateway.html",pathLocale:"/",extraFields:[]},{title:"API 网关的请求路由功能：智能流量分发的核心机制",headers:[{level:2,title:"请求路由的基本概念",slug:"请求路由的基本概念",link:"#请求路由的基本概念",children:[{level:3,title:"什么是请求路由",slug:"什么是请求路由",link:"#什么是请求路由",children:[]},{level:3,title:"路由的核心要素",slug:"路由的核心要素",link:"#路由的核心要素",children:[]}]},{level:2,title:"路由匹配机制",slug:"路由匹配机制",link:"#路由匹配机制",children:[{level:3,title:"基于路径的路由",slug:"基于路径的路由",link:"#基于路径的路由",children:[]},{level:3,title:"基于方法的路由",slug:"基于方法的路由",link:"#基于方法的路由",children:[]},{level:3,title:"基于请求头的路由",slug:"基于请求头的路由",link:"#基于请求头的路由",children:[]},{level:3,title:"基于查询参数的路由",slug:"基于查询参数的路由",link:"#基于查询参数的路由",children:[]},{level:3,title:"组合匹配",slug:"组合匹配",link:"#组合匹配",children:[]}]},{level:2,title:"动态路由机制",slug:"动态路由机制",link:"#动态路由机制",children:[{level:3,title:"服务发现集成",slug:"服务发现集成",link:"#服务发现集成",children:[]},{level:3,title:"负载均衡策略",slug:"负载均衡策略",link:"#负载均衡策略",children:[]},{level:3,title:"健康检查",slug:"健康检查",link:"#健康检查",children:[]}]},{level:2,title:"路由转换机制",slug:"路由转换机制",link:"#路由转换机制",children:[{level:3,title:"路径重写",slug:"路径重写",link:"#路径重写",children:[]},{level:3,title:"请求头修改",slug:"请求头修改",link:"#请求头修改",children:[]},{level:3,title:"查询参数修改",slug:"查询参数修改",link:"#查询参数修改",children:[]}]},{level:2,title:"高级路由功能",slug:"高级路由功能",link:"#高级路由功能",children:[{level:3,title:"权重路由",slug:"权重路由",link:"#权重路由",children:[]},{level:3,title:"蓝绿部署路由",slug:"蓝绿部署路由",link:"#蓝绿部署路由",children:[]},{level:3,title:"金丝雀发布路由",slug:"金丝雀发布路由",link:"#金丝雀发布路由",children:[]}]},{level:2,title:"路由性能优化",slug:"路由性能优化",link:"#路由性能优化",children:[{level:3,title:"路由缓存",slug:"路由缓存",link:"#路由缓存",children:[]},{level:3,title:"预编译正则表达式",slug:"预编译正则表达式",link:"#预编译正则表达式",children:[]},{level:3,title:"路由表优化",slug:"路由表优化",link:"#路由表优化",children:[]}]},{level:2,title:"路由监控与调试",slug:"路由监控与调试",link:"#路由监控与调试",children:[{level:3,title:"路由匹配日志",slug:"路由匹配日志",link:"#路由匹配日志",children:[]},{level:3,title:"路由指标收集",slug:"路由指标收集",link:"#路由指标收集",children:[]},{level:3,title:"路由可视化",slug:"路由可视化",link:"#路由可视化",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"路由设计原则",slug:"路由设计原则",link:"#路由设计原则",children:[]},{level:3,title:"错误处理",slug:"错误处理",link:"#错误处理",children:[]},{level:3,title:"安全考虑",slug:"安全考虑",link:"#安全考虑",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-2-1-api-gateway-request-routing.html",pathLocale:"/",extraFields:[]},{title:"API 网关的协议转换功能：构建多协议兼容的统一接口",headers:[{level:2,title:"协议转换的基本概念",slug:"协议转换的基本概念",link:"#协议转换的基本概念",children:[{level:3,title:"什么是协议转换",slug:"什么是协议转换",link:"#什么是协议转换",children:[]},{level:3,title:"协议转换的价值",slug:"协议转换的价值",link:"#协议转换的价值",children:[]}]},{level:2,title:"支持的协议类型",slug:"支持的协议类型",link:"#支持的协议类型",children:[{level:3,title:"HTTP/HTTPS 协议",slug:"http-https-协议",link:"#http-https-协议",children:[]},{level:3,title:"gRPC 协议",slug:"grpc-协议",link:"#grpc-协议",children:[]},{level:3,title:"WebSocket 协议",slug:"websocket-协议",link:"#websocket-协议",children:[]},{level:3,title:"GraphQL 协议",slug:"graphql-协议",link:"#graphql-协议",children:[]}]},{level:2,title:"协议转换的实现机制",slug:"协议转换的实现机制",link:"#协议转换的实现机制",children:[{level:3,title:"编解码器机制",slug:"编解码器机制",link:"#编解码器机制",children:[]},{level:3,title:"过滤器链机制",slug:"过滤器链机制",link:"#过滤器链机制",children:[]},{level:3,title:"消息转换器机制",slug:"消息转换器机制",link:"#消息转换器机制",children:[]}]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"连接池优化",slug:"连接池优化",link:"#连接池优化",children:[]},{level:3,title:"缓存机制",slug:"缓存机制",link:"#缓存机制",children:[]},{level:3,title:"异步处理",slug:"异步处理",link:"#异步处理",children:[]}]},{level:2,title:"监控与调试",slug:"监控与调试",link:"#监控与调试",children:[{level:3,title:"协议转换日志",slug:"协议转换日志",link:"#协议转换日志",children:[]},{level:3,title:"性能指标收集",slug:"性能指标收集",link:"#性能指标收集",children:[]},{level:3,title:"错误处理",slug:"错误处理",link:"#错误处理",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"协议选择原则",slug:"协议选择原则",link:"#协议选择原则",children:[]},{level:3,title:"转换策略设计",slug:"转换策略设计",link:"#转换策略设计",children:[]},{level:3,title:"安全考虑",slug:"安全考虑",link:"#安全考虑",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-2-2-api-gateway-protocol-conversion.html",pathLocale:"/",extraFields:[]},{title:"API 网关的安全认证与鉴权功能：构建可信的微服务边界",headers:[{level:2,title:"安全认证的基本概念",slug:"安全认证的基本概念",link:"#安全认证的基本概念",children:[{level:3,title:"什么是身份认证",slug:"什么是身份认证",link:"#什么是身份认证",children:[]},{level:3,title:"什么是权限控制",slug:"什么是权限控制",link:"#什么是权限控制",children:[]},{level:3,title:"认证与鉴权的关系",slug:"认证与鉴权的关系",link:"#认证与鉴权的关系",children:[]}]},{level:2,title:"常见的身份认证方式",slug:"常见的身份认证方式",link:"#常见的身份认证方式",children:[{level:3,title:"API Key 认证",slug:"api-key-认证",link:"#api-key-认证",children:[]},{level:3,title:"OAuth2 认证",slug:"oauth2-认证",link:"#oauth2-认证",children:[]},{level:3,title:"JWT 认证",slug:"jwt-认证",link:"#jwt-认证",children:[]},{level:3,title:"OIDC 认证",slug:"oidc-认证",link:"#oidc-认证",children:[]}]},{level:2,title:"权限控制机制",slug:"权限控制机制",link:"#权限控制机制",children:[{level:3,title:"基于角色的访问控制（RBAC）",slug:"基于角色的访问控制-rbac",link:"#基于角色的访问控制-rbac",children:[]},{level:3,title:"基于属性的访问控制（ABAC）",slug:"基于属性的访问控制-abac",link:"#基于属性的访问控制-abac",children:[]},{level:3,title:"基于资源的访问控制",slug:"基于资源的访问控制",link:"#基于资源的访问控制",children:[]}]},{level:2,title:"安全最佳实践",slug:"安全最佳实践",link:"#安全最佳实践",children:[{level:3,title:"多层安全防护",slug:"多层安全防护",link:"#多层安全防护",children:[]},{level:3,title:"安全配置",slug:"安全配置",link:"#安全配置",children:[]},{level:3,title:"安全监控",slug:"安全监控",link:"#安全监控",children:[]},{level:3,title:"定期安全审计",slug:"定期安全审计",link:"#定期安全审计",children:[]}]},{level:2,title:"性能优化",slug:"性能优化",link:"#性能优化",children:[{level:3,title:"缓存机制",slug:"缓存机制",link:"#缓存机制",children:[]},{level:3,title:"异步处理",slug:"异步处理",link:"#异步处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-2-3-api-gateway-security-authentication-authorization.html",pathLocale:"/",extraFields:[]},{title:"API 网关的限流、熔断与降级功能：构建高可用微服务系统的防护机制",headers:[{level:2,title:"限流机制（Rate Limiting）",slug:"限流机制-rate-limiting",link:"#限流机制-rate-limiting",children:[{level:3,title:"什么是限流",slug:"什么是限流",link:"#什么是限流",children:[]},{level:3,title:"限流算法",slug:"限流算法",link:"#限流算法",children:[]},{level:3,title:"限流维度",slug:"限流维度",link:"#限流维度",children:[]}]},{level:2,title:"熔断机制（Circuit Breaker）",slug:"熔断机制-circuit-breaker",link:"#熔断机制-circuit-breaker",children:[{level:3,title:"什么是熔断",slug:"什么是熔断",link:"#什么是熔断",children:[]},{level:3,title:"熔断器状态",slug:"熔断器状态",link:"#熔断器状态",children:[]},{level:3,title:"Hystrix 熔断器实现",slug:"hystrix-熔断器实现",link:"#hystrix-熔断器实现",children:[]},{level:3,title:"Resilience4j 熔断器实现",slug:"resilience4j-熔断器实现",link:"#resilience4j-熔断器实现",children:[]},{level:3,title:"熔断策略配置",slug:"熔断策略配置",link:"#熔断策略配置",children:[]}]},{level:2,title:"降级机制（Degradation）",slug:"降级机制-degradation",link:"#降级机制-degradation",children:[{level:3,title:"什么是降级",slug:"什么是降级",link:"#什么是降级",children:[]},{level:3,title:"降级策略",slug:"降级策略",link:"#降级策略",children:[]}]},{level:2,title:"综合防护策略",slug:"综合防护策略",link:"#综合防护策略",children:[{level:3,title:"流量控制过滤器",slug:"流量控制过滤器",link:"#流量控制过滤器",children:[]},{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]}]},{level:2,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[{level:3,title:"指标收集",slug:"指标收集",link:"#指标收集",children:[]},{level:3,title:"告警配置",slug:"告警配置",link:"#告警配置",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"策略设计原则",slug:"策略设计原则",link:"#策略设计原则",children:[]},{level:3,title:"性能优化",slug:"性能优化",link:"#性能优化",children:[]},{level:3,title:"故障恢复",slug:"故障恢复",link:"#故障恢复",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-2-4-api-gateway-rate-limiting-circuit-breaker-degradation.html",pathLocale:"/",extraFields:[]},{title:"API 网关的日志与监控功能：构建可观测的微服务系统",headers:[{level:2,title:"日志记录机制",slug:"日志记录机制",link:"#日志记录机制",children:[{level:3,title:"日志的重要性",slug:"日志的重要性",link:"#日志的重要性",children:[]},{level:3,title:"日志分类",slug:"日志分类",link:"#日志分类",children:[]},{level:3,title:"日志格式标准化",slug:"日志格式标准化",link:"#日志格式标准化",children:[]},{level:3,title:"日志配置管理",slug:"日志配置管理",link:"#日志配置管理",children:[]}]},{level:2,title:"监控指标收集",slug:"监控指标收集",link:"#监控指标收集",children:[{level:3,title:"核心监控指标",slug:"核心监控指标",link:"#核心监控指标",children:[]},{level:3,title:"自定义监控指标",slug:"自定义监控指标",link:"#自定义监控指标",children:[]}]},{level:2,title:"分布式追踪",slug:"分布式追踪",link:"#分布式追踪",children:[{level:3,title:"追踪机制实现",slug:"追踪机制实现",link:"#追踪机制实现",children:[]},{level:3,title:"追踪数据收集",slug:"追踪数据收集",link:"#追踪数据收集",children:[]}]},{level:2,title:"告警机制",slug:"告警机制",link:"#告警机制",children:[{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]},{level:3,title:"告警通知",slug:"告警通知",link:"#告警通知",children:[]}]},{level:2,title:"日志与监控集成",slug:"日志与监控集成",link:"#日志与监控集成",children:[{level:3,title:"与 ELK 栈集成",slug:"与-elk-栈集成",link:"#与-elk-栈集成",children:[]},{level:3,title:"与 Prometheus 集成",slug:"与-prometheus-集成",link:"#与-prometheus-集成",children:[]}]},{level:2,title:"性能优化",slug:"性能优化",link:"#性能优化",children:[{level:3,title:"异步日志处理",slug:"异步日志处理",link:"#异步日志处理",children:[]},{level:3,title:"批量指标上报",slug:"批量指标上报",link:"#批量指标上报",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"日志管理最佳实践",slug:"日志管理最佳实践",link:"#日志管理最佳实践",children:[]},{level:3,title:"监控最佳实践",slug:"监控最佳实践",link:"#监控最佳实践",children:[]},{level:3,title:"故障排查最佳实践",slug:"故障排查最佳实践",link:"#故障排查最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-2-5-api-gateway-logging-monitoring.html",pathLocale:"/",extraFields:[]},{title:"API 网关的核心职责：构建稳定高效微服务系统的基石",headers:[{level:2,title:"请求路由：智能的交通指挥官",slug:"请求路由-智能的交通指挥官",link:"#请求路由-智能的交通指挥官",children:[{level:3,title:"路由策略",slug:"路由策略",link:"#路由策略",children:[]},{level:3,title:"动态路由",slug:"动态路由",link:"#动态路由",children:[]}]},{level:2,title:"协议转换：连接不同世界的桥梁",slug:"协议转换-连接不同世界的桥梁",link:"#协议转换-连接不同世界的桥梁",children:[{level:3,title:"支持的协议类型",slug:"支持的协议类型",link:"#支持的协议类型",children:[]},{level:3,title:"转换机制",slug:"转换机制",link:"#转换机制",children:[]}]},{level:2,title:"安全认证与鉴权：系统的守护者",slug:"安全认证与鉴权-系统的守护者",link:"#安全认证与鉴权-系统的守护者",children:[{level:3,title:"身份认证",slug:"身份认证",link:"#身份认证",children:[]},{level:3,title:"权限控制",slug:"权限控制",link:"#权限控制",children:[]}]},{level:2,title:"限流、熔断与降级：系统的稳定器",slug:"限流、熔断与降级-系统的稳定器",link:"#限流、熔断与降级-系统的稳定器",children:[{level:3,title:"限流机制",slug:"限流机制",link:"#限流机制",children:[]},{level:3,title:"熔断机制",slug:"熔断机制",link:"#熔断机制",children:[]},{level:3,title:"降级策略",slug:"降级策略",link:"#降级策略",children:[]}]},{level:2,title:"日志与监控：系统的透视眼",slug:"日志与监控-系统的透视眼",link:"#日志与监控-系统的透视眼",children:[{level:3,title:"日志收集",slug:"日志收集",link:"#日志收集",children:[]},{level:3,title:"性能监控",slug:"性能监控",link:"#性能监控",children:[]},{level:3,title:"分布式追踪",slug:"分布式追踪",link:"#分布式追踪",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-2-api-gateway-core-responsibilities.html",pathLocale:"/",extraFields:[]},{title:"与服务注册发现的协作：构建动态路由的微服务网关",headers:[{level:2,title:"服务注册发现的基本概念",slug:"服务注册发现的基本概念",link:"#服务注册发现的基本概念",children:[{level:3,title:"什么是服务注册发现",slug:"什么是服务注册发现",link:"#什么是服务注册发现",children:[]},{level:3,title:"服务注册发现的工作流程",slug:"服务注册发现的工作流程",link:"#服务注册发现的工作流程",children:[]}]},{level:2,title:"主流服务注册发现组件",slug:"主流服务注册发现组件",link:"#主流服务注册发现组件",children:[{level:3,title:"Eureka",slug:"eureka",link:"#eureka",children:[]},{level:3,title:"Consul",slug:"consul",link:"#consul",children:[]},{level:3,title:"Nacos",slug:"nacos",link:"#nacos",children:[]}]},{level:2,title:"API 网关与服务注册发现的集成",slug:"api-网关与服务注册发现的集成",link:"#api-网关与服务注册发现的集成",children:[{level:3,title:"Spring Cloud Gateway 与 Eureka 集成",slug:"spring-cloud-gateway-与-eureka-集成",link:"#spring-cloud-gateway-与-eureka-集成",children:[]},{level:3,title:"动态路由实现",slug:"动态路由实现",link:"#动态路由实现",children:[]},{level:3,title:"服务实例健康检查",slug:"服务实例健康检查",link:"#服务实例健康检查",children:[]}]},{level:2,title:"负载均衡与服务发现",slug:"负载均衡与服务发现",link:"#负载均衡与服务发现",children:[{level:3,title:"Ribbon 负载均衡器",slug:"ribbon-负载均衡器",link:"#ribbon-负载均衡器",children:[]},{level:3,title:"Reactor LoadBalancer",slug:"reactor-loadbalancer",link:"#reactor-loadbalancer",children:[]}]},{level:2,title:"服务元数据管理",slug:"服务元数据管理",link:"#服务元数据管理",children:[{level:3,title:"服务标签与元数据",slug:"服务标签与元数据",link:"#服务标签与元数据",children:[]},{level:3,title:"基于元数据的路由",slug:"基于元数据的路由",link:"#基于元数据的路由",children:[]}]},{level:2,title:"服务发现缓存与优化",slug:"服务发现缓存与优化",link:"#服务发现缓存与优化",children:[{level:3,title:"本地缓存实现",slug:"本地缓存实现",link:"#本地缓存实现",children:[]},{level:3,title:"缓存更新监听",slug:"缓存更新监听",link:"#缓存更新监听",children:[]}]},{level:2,title:"故障处理与容错机制",slug:"故障处理与容错机制",link:"#故障处理与容错机制",children:[{level:3,title:"服务不可用处理",slug:"服务不可用处理",link:"#服务不可用处理",children:[]},{level:3,title:"熔断与降级",slug:"熔断与降级",link:"#熔断与降级",children:[]}]},{level:2,title:"监控与指标收集",slug:"监控与指标收集",link:"#监控与指标收集",children:[{level:3,title:"服务发现指标",slug:"服务发现指标",link:"#服务发现指标",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"配置优化",slug:"配置优化",link:"#配置优化",children:[]},{level:3,title:"健康检查优化",slug:"健康检查优化",link:"#健康检查优化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-3-1-collaboration-with-service-registration-discovery.html",pathLocale:"/",extraFields:[]},{title:"与配置中心、消息队列的关系：构建动态可配置的微服务网关",headers:[{level:2,title:"配置中心的作用与价值",slug:"配置中心的作用与价值",link:"#配置中心的作用与价值",children:[{level:3,title:"什么是配置中心",slug:"什么是配置中心",link:"#什么是配置中心",children:[]},{level:3,title:"配置中心的核心功能",slug:"配置中心的核心功能",link:"#配置中心的核心功能",children:[]}]},{level:2,title:"主流配置中心组件",slug:"主流配置中心组件",link:"#主流配置中心组件",children:[{level:3,title:"Spring Cloud Config",slug:"spring-cloud-config",link:"#spring-cloud-config",children:[]},{level:3,title:"Apollo",slug:"apollo",link:"#apollo",children:[]},{level:3,title:"Nacos",slug:"nacos",link:"#nacos",children:[]}]},{level:2,title:"API 网关与配置中心的集成",slug:"api-网关与配置中心的集成",link:"#api-网关与配置中心的集成",children:[{level:3,title:"动态路由配置",slug:"动态路由配置",link:"#动态路由配置",children:[]},{level:3,title:"动态限流配置",slug:"动态限流配置",link:"#动态限流配置",children:[]},{level:3,title:"动态安全配置",slug:"动态安全配置",link:"#动态安全配置",children:[]}]},{level:2,title:"消息队列的作用与价值",slug:"消息队列的作用与价值",link:"#消息队列的作用与价值",children:[{level:3,title:"什么是消息队列",slug:"什么是消息队列",link:"#什么是消息队列",children:[]},{level:3,title:"消息队列的核心功能",slug:"消息队列的核心功能",link:"#消息队列的核心功能",children:[]}]},{level:2,title:"主流消息队列组件",slug:"主流消息队列组件",link:"#主流消息队列组件",children:[{level:3,title:"Kafka",slug:"kafka",link:"#kafka",children:[]},{level:3,title:"RabbitMQ",slug:"rabbitmq",link:"#rabbitmq",children:[]},{level:3,title:"RocketMQ",slug:"rocketmq",link:"#rocketmq",children:[]}]},{level:2,title:"API 网关与消息队列的集成",slug:"api-网关与消息队列的集成",link:"#api-网关与消息队列的集成",children:[{level:3,title:"异步日志处理",slug:"异步日志处理",link:"#异步日志处理",children:[]},{level:3,title:"事件驱动的路由更新",slug:"事件驱动的路由更新",link:"#事件驱动的路由更新",children:[]},{level:3,title:"异步通知与告警",slug:"异步通知与告警",link:"#异步通知与告警",children:[]}]},{level:2,title:"配置中心与消息队列的协同",slug:"配置中心与消息队列的协同",link:"#配置中心与消息队列的协同",children:[{level:3,title:"配置变更事件通知",slug:"配置变更事件通知",link:"#配置变更事件通知",children:[]},{level:3,title:"基于事件的配置更新",slug:"基于事件的配置更新",link:"#基于事件的配置更新",children:[]}]},{level:2,title:"性能优化与最佳实践",slug:"性能优化与最佳实践",link:"#性能优化与最佳实践",children:[{level:3,title:"配置缓存优化",slug:"配置缓存优化",link:"#配置缓存优化",children:[]},{level:3,title:"消息队列性能优化",slug:"消息队列性能优化",link:"#消息队列性能优化",children:[]}]},{level:2,title:"监控与指标收集",slug:"监控与指标收集",link:"#监控与指标收集",children:[{level:3,title:"配置中心指标",slug:"配置中心指标",link:"#配置中心指标",children:[]},{level:3,title:"消息队列指标",slug:"消息队列指标",link:"#消息队列指标",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-3-2-relationship-with-configuration-center-message-queue.html",pathLocale:"/",extraFields:[]},{title:"API 网关在服务治理体系中的位置：构建完整的微服务治理生态",headers:[{level:2,title:"服务治理体系概述",slug:"服务治理体系概述",link:"#服务治理体系概述",children:[{level:3,title:"什么是服务治理",slug:"什么是服务治理",link:"#什么是服务治理",children:[]},{level:3,title:"服务治理的核心组件",slug:"服务治理的核心组件",link:"#服务治理的核心组件",children:[]}]},{level:2,title:"API 网关在服务治理体系中的战略位置",slug:"api-网关在服务治理体系中的战略位置",link:"#api-网关在服务治理体系中的战略位置",children:[{level:3,title:"流量入口与出口控制",slug:"流量入口与出口控制",link:"#流量入口与出口控制",children:[]},{level:3,title:"安全边界与认证授权",slug:"安全边界与认证授权",link:"#安全边界与认证授权",children:[]},{level:3,title:"监控与可观测性",slug:"监控与可观测性",link:"#监控与可观测性",children:[]}]},{level:2,title:"API 网关与服务注册发现的协同",slug:"api-网关与服务注册发现的协同",link:"#api-网关与服务注册发现的协同",children:[{level:3,title:"动态路由与服务发现",slug:"动态路由与服务发现",link:"#动态路由与服务发现",children:[]},{level:3,title:"服务发现指标收集",slug:"服务发现指标收集",link:"#服务发现指标收集",children:[]}]},{level:2,title:"API 网关与配置中心的协同",slug:"api-网关与配置中心的协同",link:"#api-网关与配置中心的协同",children:[{level:3,title:"动态配置管理",slug:"动态配置管理",link:"#动态配置管理",children:[]},{level:3,title:"配置变更指标收集",slug:"配置变更指标收集",link:"#配置变更指标收集",children:[]}]},{level:2,title:"API 网关与监控告警系统的协同",slug:"api-网关与监控告警系统的协同",link:"#api-网关与监控告警系统的协同",children:[{level:3,title:"指标上报与告警",slug:"指标上报与告警",link:"#指标上报与告警",children:[]},{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]}]},{level:2,title:"API 网关与链路追踪系统的协同",slug:"api-网关与链路追踪系统的协同",link:"#api-网关与链路追踪系统的协同",children:[{level:3,title:"分布式追踪实现",slug:"分布式追踪实现",link:"#分布式追踪实现",children:[]},{level:3,title:"链路追踪指标收集",slug:"链路追踪指标收集",link:"#链路追踪指标收集",children:[]}]},{level:2,title:"服务治理生态的完整视图",slug:"服务治理生态的完整视图",link:"#服务治理生态的完整视图",children:[{level:3,title:"治理组件协同工作流程",slug:"治理组件协同工作流程",link:"#治理组件协同工作流程",children:[]},{level:3,title:"治理策略统一管理",slug:"治理策略统一管理",link:"#治理策略统一管理",children:[]}]},{level:2,title:"最佳实践与优化策略",slug:"最佳实践与优化策略",link:"#最佳实践与优化策略",children:[{level:3,title:"治理组件集成优化",slug:"治理组件集成优化",link:"#治理组件集成优化",children:[]},{level:3,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[]},{level:3,title:"故障处理与容错",slug:"故障处理与容错",link:"#故障处理与容错",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-3-3-api-gateway-position-in-service-governance-system.html",pathLocale:"/",extraFields:[]},{title:"API 网关与微服务架构：构建现代化分布式系统的关键纽带",headers:[{level:2,title:"微服务架构的核心特征",slug:"微服务架构的核心特征",link:"#微服务架构的核心特征",children:[]},{level:2,title:"API 网关在微服务架构中的作用",slug:"api-网关在微服务架构中的作用",link:"#api-网关在微服务架构中的作用",children:[]},{level:2,title:"与服务注册发现的协作",slug:"与服务注册发现的协作",link:"#与服务注册发现的协作",children:[]},{level:2,title:"与配置中心、消息队列的关系",slug:"与配置中心、消息队列的关系",link:"#与配置中心、消息队列的关系",children:[]},{level:2,title:"API 网关在服务治理体系中的位置",slug:"api-网关在服务治理体系中的位置",link:"#api-网关在服务治理体系中的位置",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-3-api-gateway-and-microservices-architecture.html",pathLocale:"/",extraFields:[]},{title:"静态路由与动态路由的实现：构建灵活的 API 路由系统",headers:[{level:2,title:"静态路由的实现",slug:"静态路由的实现",link:"#静态路由的实现",children:[{level:3,title:"静态路由的概念",slug:"静态路由的概念",link:"#静态路由的概念",children:[]},{level:3,title:"静态路由的配置方式",slug:"静态路由的配置方式",link:"#静态路由的配置方式",children:[]},{level:3,title:"静态路由的匹配机制",slug:"静态路由的匹配机制",link:"#静态路由的匹配机制",children:[]},{level:3,title:"静态路由的优缺点",slug:"静态路由的优缺点",link:"#静态路由的优缺点",children:[]}]},{level:2,title:"动态路由的实现",slug:"动态路由的实现",link:"#动态路由的实现",children:[{level:3,title:"动态路由的概念",slug:"动态路由的概念",link:"#动态路由的概念",children:[]},{level:3,title:"动态路由的实现机制",slug:"动态路由的实现机制",link:"#动态路由的实现机制",children:[]},{level:3,title:"动态路由的存储与同步",slug:"动态路由的存储与同步",link:"#动态路由的存储与同步",children:[]},{level:3,title:"动态路由的优缺点",slug:"动态路由的优缺点",link:"#动态路由的优缺点",children:[]}]},{level:2,title:"静态路由与动态路由的结合使用",slug:"静态路由与动态路由的结合使用",link:"#静态路由与动态路由的结合使用",children:[]},{level:2,title:"路由性能优化",slug:"路由性能优化",link:"#路由性能优化",children:[{level:3,title:"路由缓存机制",slug:"路由缓存机制",link:"#路由缓存机制",children:[]},{level:3,title:"路由匹配算法优化",slug:"路由匹配算法优化",link:"#路由匹配算法优化",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"路由设计原则",slug:"路由设计原则",link:"#路由设计原则",children:[]},{level:3,title:"配置管理策略",slug:"配置管理策略",link:"#配置管理策略",children:[]},{level:3,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-4-1-static-and-dynamic-routing-implementation.html",pathLocale:"/",extraFields:[]},{title:"反向代理的实现原理：构建高性能的请求转发引擎",headers:[{level:2,title:"反向代理的基本概念",slug:"反向代理的基本概念",link:"#反向代理的基本概念",children:[{level:3,title:"什么是反向代理",slug:"什么是反向代理",link:"#什么是反向代理",children:[]},{level:3,title:"反向代理与正向代理的区别",slug:"反向代理与正向代理的区别",link:"#反向代理与正向代理的区别",children:[]},{level:3,title:"反向代理的核心功能",slug:"反向代理的核心功能",link:"#反向代理的核心功能",children:[]}]},{level:2,title:"反向代理的技术实现",slug:"反向代理的技术实现",link:"#反向代理的技术实现",children:[{level:3,title:"基于 Netty 的实现",slug:"基于-netty-的实现",link:"#基于-netty-的实现",children:[]},{level:3,title:"基于 Spring Cloud Gateway 的实现",slug:"基于-spring-cloud-gateway-的实现",link:"#基于-spring-cloud-gateway-的实现",children:[]},{level:3,title:"基于 Nginx 的实现",slug:"基于-nginx-的实现",link:"#基于-nginx-的实现",children:[]}]},{level:2,title:"负载均衡机制",slug:"负载均衡机制",link:"#负载均衡机制",children:[{level:3,title:"负载均衡算法",slug:"负载均衡算法",link:"#负载均衡算法",children:[]}]},{level:2,title:"连接管理与优化",slug:"连接管理与优化",link:"#连接管理与优化",children:[{level:3,title:"连接池管理",slug:"连接池管理",link:"#连接池管理",children:[]},{level:3,title:"长连接与短连接",slug:"长连接与短连接",link:"#长连接与短连接",children:[]}]},{level:2,title:"SSL/TLS 终止",slug:"ssl-tls-终止",link:"#ssl-tls-终止",children:[{level:3,title:"SSL 终止实现",slug:"ssl-终止实现",link:"#ssl-终止实现",children:[]}]},{level:2,title:"缓存机制",slug:"缓存机制",link:"#缓存机制",children:[{level:3,title:"响应缓存实现",slug:"响应缓存实现",link:"#响应缓存实现",children:[]}]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"异步非阻塞处理",slug:"异步非阻塞处理",link:"#异步非阻塞处理",children:[]},{level:3,title:"内存优化",slug:"内存优化",link:"#内存优化",children:[]}]},{level:2,title:"监控与调试",slug:"监控与调试",link:"#监控与调试",children:[{level:3,title:"性能指标收集",slug:"性能指标收集",link:"#性能指标收集",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]},{level:3,title:"错误处理",slug:"错误处理",link:"#错误处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-4-2-reverse-proxy-implementation-principles.html",pathLocale:"/",extraFields:[]},{title:"多协议支持的实现：构建统一的多协议 API 网关",headers:[{level:2,title:"多协议支持的重要性",slug:"多协议支持的重要性",link:"#多协议支持的重要性",children:[{level:3,title:"协议多样性的挑战",slug:"协议多样性的挑战",link:"#协议多样性的挑战",children:[]},{level:3,title:"统一入口的价值",slug:"统一入口的价值",link:"#统一入口的价值",children:[]}]},{level:2,title:"HTTP/HTTPS 协议支持",slug:"http-https-协议支持",link:"#http-https-协议支持",children:[{level:3,title:"RESTful API 支持",slug:"restful-api-支持",link:"#restful-api-支持",children:[]},{level:3,title:"HTTP/2 支持",slug:"http-2-支持",link:"#http-2-支持",children:[]}]},{level:2,title:"gRPC 协议支持",slug:"grpc-协议支持",link:"#grpc-协议支持",children:[{level:3,title:"gRPC 网关实现",slug:"grpc-网关实现",link:"#grpc-网关实现",children:[]},{level:3,title:"gRPC 到 REST 转换",slug:"grpc-到-rest-转换",link:"#grpc-到-rest-转换",children:[]}]},{level:2,title:"WebSocket 协议支持",slug:"websocket-协议支持",link:"#websocket-协议支持",children:[{level:3,title:"WebSocket 网关实现",slug:"websocket-网关实现",link:"#websocket-网关实现",children:[]},{level:3,title:"WebSocket 路由配置",slug:"websocket-路由配置",link:"#websocket-路由配置",children:[]}]},{level:2,title:"GraphQL 协议支持",slug:"graphql-协议支持",link:"#graphql-协议支持",children:[{level:3,title:"GraphQL 网关实现",slug:"graphql-网关实现",link:"#graphql-网关实现",children:[]},{level:3,title:"GraphQL HTTP 端点",slug:"graphql-http-端点",link:"#graphql-http-端点",children:[]}]},{level:2,title:"协议识别与路由",slug:"协议识别与路由",link:"#协议识别与路由",children:[{level:3,title:"协议识别机制",slug:"协议识别机制",link:"#协议识别机制",children:[]},{level:3,title:"协议路由过滤器",slug:"协议路由过滤器",link:"#协议路由过滤器",children:[]}]},{level:2,title:"协议转换机制",slug:"协议转换机制",link:"#协议转换机制",children:[{level:3,title:"通用协议转换器",slug:"通用协议转换器",link:"#通用协议转换器",children:[]}]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"连接池优化",slug:"连接池优化",link:"#连接池优化",children:[]},{level:3,title:"协议特定优化",slug:"协议特定优化",link:"#协议特定优化",children:[]}]},{level:2,title:"监控与调试",slug:"监控与调试",link:"#监控与调试",children:[{level:3,title:"协议特定指标",slug:"协议特定指标",link:"#协议特定指标",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"协议选择指南",slug:"协议选择指南",link:"#协议选择指南",children:[]},{level:3,title:"错误处理",slug:"错误处理",link:"#错误处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-4-3-multi-protocol-support-implementation.html",pathLocale:"/",extraFields:[]},{title:"请求路由与转发机制：API 网关的核心路由引擎",headers:[{level:2,title:"静态路由与动态路由",slug:"静态路由与动态路由",link:"#静态路由与动态路由",children:[]},{level:2,title:"反向代理的实现原理",slug:"反向代理的实现原理",link:"#反向代理的实现原理",children:[]},{level:2,title:"多协议支持",slug:"多协议支持",link:"#多协议支持",children:[]},{level:2,title:"路由性能优化",slug:"路由性能优化",link:"#路由性能优化",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/1-4-request-routing-and-forwarding-mechanisms.html",pathLocale:"/",extraFields:[]},{title:"身份认证机制：构建多层次的 API 网关认证体系",headers:[{level:2,title:"身份认证的基本概念",slug:"身份认证的基本概念",link:"#身份认证的基本概念",children:[{level:3,title:"什么是身份认证",slug:"什么是身份认证",link:"#什么是身份认证",children:[]},{level:3,title:"身份认证与授权的区别",slug:"身份认证与授权的区别",link:"#身份认证与授权的区别",children:[]}]},{level:2,title:"API Key 认证机制",slug:"api-key-认证机制",link:"#api-key-认证机制",children:[{level:3,title:"API Key 认证原理",slug:"api-key-认证原理",link:"#api-key-认证原理",children:[]},{level:3,title:"实现机制",slug:"实现机制",link:"#实现机制",children:[]},{level:3,title:"配置方式",slug:"配置方式",link:"#配置方式",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析",link:"#优缺点分析",children:[]}]},{level:2,title:"OAuth2 认证机制",slug:"oauth2-认证机制",link:"#oauth2-认证机制",children:[{level:3,title:"OAuth2 认证原理",slug:"oauth2-认证原理",link:"#oauth2-认证原理",children:[]},{level:3,title:"实现机制",slug:"实现机制-1",link:"#实现机制-1",children:[]},{level:3,title:"配置方式",slug:"配置方式-1",link:"#配置方式-1",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析-1",link:"#优缺点分析-1",children:[]}]},{level:2,title:"JWT 认证机制",slug:"jwt-认证机制",link:"#jwt-认证机制",children:[{level:3,title:"JWT 认证原理",slug:"jwt-认证原理",link:"#jwt-认证原理",children:[]},{level:3,title:"实现机制",slug:"实现机制-2",link:"#实现机制-2",children:[]},{level:3,title:"配置方式",slug:"配置方式-2",link:"#配置方式-2",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析-2",link:"#优缺点分析-2",children:[]}]},{level:2,title:"OIDC 认证机制",slug:"oidc-认证机制",link:"#oidc-认证机制",children:[{level:3,title:"OIDC 认证原理",slug:"oidc-认证原理",link:"#oidc-认证原理",children:[]},{level:3,title:"实现机制",slug:"实现机制-3",link:"#实现机制-3",children:[]},{level:3,title:"配置方式",slug:"配置方式-3",link:"#配置方式-3",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析-3",link:"#优缺点分析-3",children:[]}]},{level:2,title:"多重认证机制",slug:"多重认证机制",link:"#多重认证机制",children:[{level:3,title:"组合认证策略",slug:"组合认证策略",link:"#组合认证策略",children:[]}]},{level:2,title:"认证缓存与优化",slug:"认证缓存与优化",link:"#认证缓存与优化",children:[{level:3,title:"令牌缓存机制",slug:"令牌缓存机制",link:"#令牌缓存机制",children:[]},{level:3,title:"异步认证处理",slug:"异步认证处理",link:"#异步认证处理",children:[]}]},{level:2,title:"安全最佳实践",slug:"安全最佳实践",link:"#安全最佳实践",children:[{level:3,title:"多层安全防护",slug:"多层安全防护",link:"#多层安全防护",children:[]},{level:3,title:"安全配置",slug:"安全配置",link:"#安全配置",children:[]},{level:3,title:"安全监控",slug:"安全监控",link:"#安全监控",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/2-5-1-identity-authentication-mechanisms.html",pathLocale:"/",extraFields:[]},{title:"鉴权与 RBAC 模型：构建细粒度的 API 网关权限控制体系",headers:[{level:2,title:"鉴权的基本概念",slug:"鉴权的基本概念",link:"#鉴权的基本概念",children:[{level:3,title:"什么是鉴权",slug:"什么是鉴权",link:"#什么是鉴权",children:[]},{level:3,title:"鉴权与身份认证的关系",slug:"鉴权与身份认证的关系",link:"#鉴权与身份认证的关系",children:[]}]},{level:2,title:"权限控制模型概述",slug:"权限控制模型概述",link:"#权限控制模型概述",children:[{level:3,title:"ACL 模型",slug:"acl-模型",link:"#acl-模型",children:[]},{level:3,title:"RBAC 模型",slug:"rbac-模型",link:"#rbac-模型",children:[]},{level:3,title:"ABAC 模型",slug:"abac-模型",link:"#abac-模型",children:[]}]},{level:2,title:"RBAC 模型详解",slug:"rbac-模型详解",link:"#rbac-模型详解",children:[{level:3,title:"RBAC 模型的核心组件",slug:"rbac-模型的核心组件",link:"#rbac-模型的核心组件",children:[]},{level:3,title:"RBAC 模型的优势",slug:"rbac-模型的优势",link:"#rbac-模型的优势",children:[]}]},{level:2,title:"RBAC 模型在 API 网关中的实现",slug:"rbac-模型在-api-网关中的实现",link:"#rbac-模型在-api-网关中的实现",children:[{level:3,title:"基础数据结构",slug:"基础数据结构",link:"#基础数据结构",children:[]},{level:3,title:"RBAC 权限管理服务",slug:"rbac-权限管理服务",link:"#rbac-权限管理服务",children:[]},{level:3,title:"RBAC 鉴权过滤器",slug:"rbac-鉴权过滤器",link:"#rbac-鉴权过滤器",children:[]}]},{level:2,title:"基于注解的权限控制",slug:"基于注解的权限控制",link:"#基于注解的权限控制",children:[{level:3,title:"权限注解定义",slug:"权限注解定义",link:"#权限注解定义",children:[]},{level:3,title:"注解解析器",slug:"注解解析器",link:"#注解解析器",children:[]}]},{level:2,title:"动态权限配置",slug:"动态权限配置",link:"#动态权限配置",children:[{level:3,title:"权限配置管理",slug:"权限配置管理",link:"#权限配置管理",children:[]}]},{level:2,title:"权限缓存与优化",slug:"权限缓存与优化",link:"#权限缓存与优化",children:[{level:3,title:"权限缓存实现",slug:"权限缓存实现",link:"#权限缓存实现",children:[]},{level:3,title:"异步权限检查",slug:"异步权限检查",link:"#异步权限检查",children:[]}]},{level:2,title:"权限审计与监控",slug:"权限审计与监控",link:"#权限审计与监控",children:[{level:3,title:"权限审计日志",slug:"权限审计日志",link:"#权限审计日志",children:[]},{level:3,title:"权限监控指标",slug:"权限监控指标",link:"#权限监控指标",children:[]}]},{level:2,title:"安全最佳实践",slug:"安全最佳实践",link:"#安全最佳实践",children:[{level:3,title:"权限设计原则",slug:"权限设计原则",link:"#权限设计原则",children:[]},{level:3,title:"权限配置示例",slug:"权限配置示例",link:"#权限配置示例",children:[]},{level:3,title:"错误处理与降级",slug:"错误处理与降级",link:"#错误处理与降级",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/2-5-2-authorization-and-rbac-model.html",pathLocale:"/",extraFields:[]},{title:"API 网关的安全机制：构建可信的微服务边界",headers:[{level:2,title:"身份认证机制",slug:"身份认证机制",link:"#身份认证机制",children:[]},{level:2,title:"鉴权与 RBAC 模型",slug:"鉴权与-rbac-模型",link:"#鉴权与-rbac-模型",children:[]},{level:2,title:"数据加密与传输安全",slug:"数据加密与传输安全",link:"#数据加密与传输安全",children:[]},{level:2,title:"安全最佳实践",slug:"安全最佳实践",link:"#安全最佳实践",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/api-gateway/2-5-api-gateway-security-mechanisms.html",pathLocale:"/",extraFields:[]},{title:"📖《API 网关 从入门到精通》文档索引",headers:[{level:2,title:"第 1 篇 基础篇 · 初识 API 网关",slug:"第-1-篇-基础篇-·-初识-api-网关",link:"#第-1-篇-基础篇-·-初识-api-网关",children:[{level:3,title:"第 1 章 什么是 API 网关",slug:"第-1-章-什么是-api-网关",link:"#第-1-章-什么是-api-网关",children:[]},{level:3,title:"第 2 章 API 网关的核心职责",slug:"第-2-章-api-网关的核心职责",link:"#第-2-章-api-网关的核心职责",children:[]}]},{level:2,title:"待更新章节",slug:"待更新章节",link:"#待更新章节",children:[{level:3,title:"第 3 章 API 网关与微服务架构",slug:"第-3-章-api-网关与微服务架构",link:"#第-3-章-api-网关与微服务架构",children:[]},{level:3,title:"第 4 章 请求路由与转发机制",slug:"第-4-章-请求路由与转发机制",link:"#第-4-章-请求路由与转发机制",children:[]},{level:3,title:"第 5 章 API 网关的安全机制",slug:"第-5-章-api-网关的安全机制",link:"#第-5-章-api-网关的安全机制",children:[]},{level:3,title:"第 6 章 高可用与高性能设计",slug:"第-6-章-高可用与高性能设计",link:"#第-6-章-高可用与高性能设计",children:[]},{level:3,title:"第 7 章 API 网关的扩展与插件化",slug:"第-7-章-api-网关的扩展与插件化",link:"#第-7-章-api-网关的扩展与插件化",children:[]},{level:3,title:"第 8 章 开源 API 网关解析",slug:"第-8-章-开源-api-网关解析",link:"#第-8-章-开源-api-网关解析",children:[]},{level:3,title:"第 9 章 自研 API 网关设计与实现",slug:"第-9-章-自研-api-网关设计与实现",link:"#第-9-章-自研-api-网关设计与实现",children:[]},{level:3,title:"第 10 章 API 网关与服务网格（Service Mesh）",slug:"第-10-章-api-网关与服务网格-service-mesh",link:"#第-10-章-api-网关与服务网格-service-mesh",children:[]},{level:3,title:"第 11 章 API 生命周期管理（APIM）",slug:"第-11-章-api-生命周期管理-apim",link:"#第-11-章-api-生命周期管理-apim",children:[]},{level:3,title:"第 12 章 企业级 API 网关实践",slug:"第-12-章-企业级-api-网关实践",link:"#第-12-章-企业级-api-网关实践",children:[]},{level:3,title:"第 13 章 云原生与 API 网关",slug:"第-13-章-云原生与-api-网关",link:"#第-13-章-云原生与-api-网关",children:[]},{level:3,title:"第 14 章 API 网关的可观测性",slug:"第-14-章-api-网关的可观测性",link:"#第-14-章-api-网关的可观测性",children:[]},{level:3,title:"第 15 章 API 网关的智能化发展",slug:"第-15-章-api-网关的智能化发展",link:"#第-15-章-api-网关的智能化发展",children:[]},{level:3,title:"第 16 章 API 网关的未来趋势",slug:"第-16-章-api-网关的未来趋势",link:"#第-16-章-api-网关的未来趋势",children:[]}]}],path:"/posts/api-gateway/",pathLocale:"/",extraFields:[]},{title:"📖《API 网关 从入门到精通》",headers:[{level:2,title:"第 1 篇 基础篇 · 初识 API 网关",slug:"第-1-篇-基础篇-·-初识-api-网关",link:"#第-1-篇-基础篇-·-初识-api-网关",children:[]},{level:2,title:"第 2 篇 原理篇 · 深入理解 API 网关",slug:"第-2-篇-原理篇-·-深入理解-api-网关",link:"#第-2-篇-原理篇-·-深入理解-api-网关",children:[]},{level:2,title:"第 3 篇 技术实现篇",slug:"第-3-篇-技术实现篇",link:"#第-3-篇-技术实现篇",children:[]},{level:2,title:"第 4 篇 生态与实践篇",slug:"第-4-篇-生态与实践篇",link:"#第-4-篇-生态与实践篇",children:[]},{level:2,title:"第 5 篇 进阶与未来篇",slug:"第-5-篇-进阶与未来篇",link:"#第-5-篇-进阶与未来篇",children:[]},{level:2,title:"附录",slug:"附录",link:"#附录",children:[]}],path:"/posts/api-gateway/index-desc.html",pathLocale:"/",extraFields:[]},{title:"什么是分布式事务：从单体到分布式的数据一致性挑战",headers:[{level:2,title:"从单体事务到分布式事务",slug:"从单体事务到分布式事务",link:"#从单体事务到分布式事务",children:[{level:3,title:"单体事务的简单世界",slug:"单体事务的简单世界",link:"#单体事务的简单世界",children:[]},{level:3,title:"分布式事务的复杂挑战",slug:"分布式事务的复杂挑战",link:"#分布式事务的复杂挑战",children:[]}]},{level:2,title:"分布式系统中的数据一致性问题",slug:"分布式系统中的数据一致性问题",link:"#分布式系统中的数据一致性问题",children:[{level:3,title:"一致性的重要性",slug:"一致性的重要性",link:"#一致性的重要性",children:[]},{level:3,title:"一致性的挑战",slug:"一致性的挑战",link:"#一致性的挑战",children:[]},{level:3,title:"一致性模型",slug:"一致性模型",link:"#一致性模型",children:[]}]},{level:2,title:"事务的ACID属性与微服务挑战",slug:"事务的acid属性与微服务挑战",link:"#事务的acid属性与微服务挑战",children:[{level:3,title:"ACID属性回顾",slug:"acid属性回顾",link:"#acid属性回顾",children:[]},{level:3,title:"微服务架构下的挑战",slug:"微服务架构下的挑战",link:"#微服务架构下的挑战",children:[]}]},{level:2,title:"分布式事务的核心概念",slug:"分布式事务的核心概念",link:"#分布式事务的核心概念",children:[{level:3,title:"事务参与者",slug:"事务参与者",link:"#事务参与者",children:[]},{level:3,title:"事务协调者",slug:"事务协调者",link:"#事务协调者",children:[]},{level:3,title:"事务状态",slug:"事务状态",link:"#事务状态",children:[]}]},{level:2,title:"分布式事务的实现模式",slug:"分布式事务的实现模式",link:"#分布式事务的实现模式",children:[{level:3,title:"两阶段提交（2PC）",slug:"两阶段提交-2pc",link:"#两阶段提交-2pc",children:[]},{level:3,title:"三阶段提交（3PC）",slug:"三阶段提交-3pc",link:"#三阶段提交-3pc",children:[]},{level:3,title:"补偿事务",slug:"补偿事务",link:"#补偿事务",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[{level:3,title:"电商系统",slug:"电商系统",link:"#电商系统",children:[]},{level:3,title:"金融服务",slug:"金融服务",link:"#金融服务",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/1-1-what-is-distributed-transaction.html",pathLocale:"/",extraFields:[]},{title:"分布式事务的痛点与挑战：构建可靠系统的必经之路",headers:[{level:2,title:"网络分区、延迟与异常",slug:"网络分区、延迟与异常",link:"#网络分区、延迟与异常",children:[{level:3,title:"网络分区的挑战",slug:"网络分区的挑战",link:"#网络分区的挑战",children:[]},{level:3,title:"网络延迟的挑战",slug:"网络延迟的挑战",link:"#网络延迟的挑战",children:[]},{level:3,title:"网络异常的挑战",slug:"网络异常的挑战",link:"#网络异常的挑战",children:[]}]},{level:2,title:"跨服务、跨数据库、跨存储系统的事务",slug:"跨服务、跨数据库、跨存储系统的事务",link:"#跨服务、跨数据库、跨存储系统的事务",children:[{level:3,title:"服务边界带来的挑战",slug:"服务边界带来的挑战",link:"#服务边界带来的挑战",children:[]},{level:3,title:"跨数据库事务的复杂性",slug:"跨数据库事务的复杂性",link:"#跨数据库事务的复杂性",children:[]},{level:3,title:"跨存储系统的挑战",slug:"跨存储系统的挑战",link:"#跨存储系统的挑战",children:[]}]},{level:2,title:"CAP定理与一致性选择",slug:"cap定理与一致性选择",link:"#cap定理与一致性选择",children:[{level:3,title:"CAP定理的核心思想",slug:"cap定理的核心思想",link:"#cap定理的核心思想",children:[]},{level:3,title:"一致性模型的选择",slug:"一致性模型的选择",link:"#一致性模型的选择",children:[]},{level:3,title:"实际选择的考量因素",slug:"实际选择的考量因素",link:"#实际选择的考量因素",children:[]}]},{level:2,title:"性能与可扩展性挑战",slug:"性能与可扩展性挑战",link:"#性能与可扩展性挑战",children:[{level:3,title:"性能瓶颈",slug:"性能瓶颈",link:"#性能瓶颈",children:[]},{level:3,title:"可扩展性限制",slug:"可扩展性限制",link:"#可扩展性限制",children:[]}]},{level:2,title:"故障处理与恢复",slug:"故障处理与恢复",link:"#故障处理与恢复",children:[{level:3,title:"故障类型",slug:"故障类型",link:"#故障类型",children:[]},{level:3,title:"恢复策略",slug:"恢复策略",link:"#恢复策略",children:[]}]},{level:2,title:"监控与调试困难",slug:"监控与调试困难",link:"#监控与调试困难",children:[{level:3,title:"监控挑战",slug:"监控挑战",link:"#监控挑战",children:[]},{level:3,title:"调试困难",slug:"调试困难",link:"#调试困难",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/1-2-distributed-transaction-pain-points.html",pathLocale:"/",extraFields:[]},{title:"分布式事务的理论模型：从2PC到BASE理论的全面解析",headers:[{level:2,title:"二阶段提交（2PC）",slug:"二阶段提交-2pc",link:"#二阶段提交-2pc",children:[{level:3,title:"2PC的基本原理",slug:"_2pc的基本原理",link:"#_2pc的基本原理",children:[]},{level:3,title:"2PC的优缺点",slug:"_2pc的优缺点",link:"#_2pc的优缺点",children:[]},{level:3,title:"2PC的异常处理",slug:"_2pc的异常处理",link:"#_2pc的异常处理",children:[]}]},{level:2,title:"三阶段提交（3PC）",slug:"三阶段提交-3pc",link:"#三阶段提交-3pc",children:[{level:3,title:"3PC的设计思路",slug:"_3pc的设计思路",link:"#_3pc的设计思路",children:[]},{level:3,title:"3PC的优势",slug:"_3pc的优势",link:"#_3pc的优势",children:[]},{level:3,title:"3PC的局限性",slug:"_3pc的局限性",link:"#_3pc的局限性",children:[]}]},{level:2,title:"Paxos一致性协议",slug:"paxos一致性协议",link:"#paxos一致性协议",children:[{level:3,title:"Paxos的基本概念",slug:"paxos的基本概念",link:"#paxos的基本概念",children:[]},{level:3,title:"Paxos的角色定义",slug:"paxos的角色定义",link:"#paxos的角色定义",children:[]},{level:3,title:"Paxos的执行流程",slug:"paxos的执行流程",link:"#paxos的执行流程",children:[]},{level:3,title:"Paxos的特点",slug:"paxos的特点",link:"#paxos的特点",children:[]}]},{level:2,title:"Raft一致性协议",slug:"raft一致性协议",link:"#raft一致性协议",children:[{level:3,title:"Raft的设计目标",slug:"raft的设计目标",link:"#raft的设计目标",children:[]},{level:3,title:"Raft的核心概念",slug:"raft的核心概念",link:"#raft的核心概念",children:[]},{level:3,title:"Raft的工作流程",slug:"raft的工作流程",link:"#raft的工作流程",children:[]},{level:3,title:"Raft的优势",slug:"raft的优势",link:"#raft的优势",children:[]}]},{level:2,title:"BASE理论与最终一致性",slug:"base理论与最终一致性",link:"#base理论与最终一致性",children:[{level:3,title:"BASE理论概述",slug:"base理论概述",link:"#base理论概述",children:[]},{level:3,title:"BASE的核心概念",slug:"base的核心概念",link:"#base的核心概念",children:[]},{level:3,title:"最终一致性模型",slug:"最终一致性模型",link:"#最终一致性模型",children:[]},{level:3,title:"BASE与ACID的对比",slug:"base与acid的对比",link:"#base与acid的对比",children:[]}]},{level:2,title:"理论模型的选择策略",slug:"理论模型的选择策略",link:"#理论模型的选择策略",children:[{level:3,title:"根据业务场景选择",slug:"根据业务场景选择",link:"#根据业务场景选择",children:[]},{level:3,title:"根据系统规模选择",slug:"根据系统规模选择",link:"#根据系统规模选择",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"数据库集群",slug:"数据库集群",link:"#数据库集群",children:[]},{level:3,title:"分布式存储系统",slug:"分布式存储系统",link:"#分布式存储系统",children:[]},{level:3,title:"消息队列",slug:"消息队列",link:"#消息队列",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/1-3-distributed-transaction-theoretical-models.html",pathLocale:"/",extraFields:[]},{title:"本地事务 + 消息队列模式：实现可靠消息最终一致性的利器",headers:[{level:2,title:"模式概述",slug:"模式概述",link:"#模式概述",children:[{level:3,title:"核心思想",slug:"核心思想",link:"#核心思想",children:[]},{level:3,title:"基本流程",slug:"基本流程",link:"#基本流程",children:[]}]},{level:2,title:"可靠消息最终一致性",slug:"可靠消息最终一致性",link:"#可靠消息最终一致性",children:[{level:3,title:"实现原理",slug:"实现原理",link:"#实现原理",children:[]},{level:3,title:"典型实现流程",slug:"典型实现流程",link:"#典型实现流程",children:[]},{level:3,title:"异常处理机制",slug:"异常处理机制",link:"#异常处理机制",children:[]}]},{level:2,title:"Transactional Outbox 模式",slug:"transactional-outbox-模式",link:"#transactional-outbox-模式",children:[{level:3,title:"模式介绍",slug:"模式介绍",link:"#模式介绍",children:[]},{level:3,title:"实现机制",slug:"实现机制",link:"#实现机制",children:[]},{level:3,title:"优势与劣势",slug:"优势与劣势",link:"#优势与劣势",children:[]}]},{level:2,title:"消息重试与幂等设计",slug:"消息重试与幂等设计",link:"#消息重试与幂等设计",children:[{level:3,title:"消息重试机制",slug:"消息重试机制",link:"#消息重试机制",children:[]},{level:3,title:"幂等性设计",slug:"幂等性设计",link:"#幂等性设计",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[{level:3,title:"电商订单处理",slug:"电商订单处理",link:"#电商订单处理",children:[]},{level:3,title:"支付系统",slug:"支付系统",link:"#支付系统",children:[]}]},{level:2,title:"与其他模式的对比",slug:"与其他模式的对比",link:"#与其他模式的对比",children:[{level:3,title:"与2PC对比",slug:"与2pc对比",link:"#与2pc对比",children:[]},{level:3,title:"与TCC对比",slug:"与tcc对比",link:"#与tcc对比",children:[]},{level:3,title:"与Saga对比",slug:"与saga对比",link:"#与saga对比",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"设计原则",slug:"设计原则",link:"#设计原则",children:[]},{level:3,title:"性能优化",slug:"性能优化",link:"#性能优化",children:[]},{level:3,title:"故障处理",slug:"故障处理",link:"#故障处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/2-1-local-transaction-message-queue.html",pathLocale:"/",extraFields:[]},{title:"TCC（Try-Confirm-Cancel）模式：构建高性能分布式事务的三步法",headers:[{level:2,title:"TCC模式概述",slug:"tcc模式概述",link:"#tcc模式概述",children:[{level:3,title:"TCC的核心概念",slug:"tcc的核心概念",link:"#tcc的核心概念",children:[]},{level:3,title:"TCC与传统事务的区别",slug:"tcc与传统事务的区别",link:"#tcc与传统事务的区别",children:[]}]},{level:2,title:"三步操作解析",slug:"三步操作解析",link:"#三步操作解析",children:[{level:3,title:"Try阶段：资源预留",slug:"try阶段-资源预留",link:"#try阶段-资源预留",children:[]},{level:3,title:"Confirm阶段：确认执行",slug:"confirm阶段-确认执行",link:"#confirm阶段-确认执行",children:[]},{level:3,title:"Cancel阶段：取消回滚",slug:"cancel阶段-取消回滚",link:"#cancel阶段-取消回滚",children:[]}]},{level:2,title:"幂等性与补偿逻辑",slug:"幂等性与补偿逻辑",link:"#幂等性与补偿逻辑",children:[{level:3,title:"幂等性设计的重要性",slug:"幂等性设计的重要性",link:"#幂等性设计的重要性",children:[]},{level:3,title:"补偿逻辑设计",slug:"补偿逻辑设计",link:"#补偿逻辑设计",children:[]}]},{level:2,title:"实现注意事项与陷阱",slug:"实现注意事项与陷阱",link:"#实现注意事项与陷阱",children:[{level:3,title:"常见实现陷阱",slug:"常见实现陷阱",link:"#常见实现陷阱",children:[]},{level:3,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[]}]},{level:2,title:"TCC模式的应用场景",slug:"tcc模式的应用场景",link:"#tcc模式的应用场景",children:[{level:3,title:"金融支付场景",slug:"金融支付场景",link:"#金融支付场景",children:[]},{level:3,title:"电商订单场景",slug:"电商订单场景",link:"#电商订单场景",children:[]}]},{level:2,title:"TCC与其他模式的对比",slug:"tcc与其他模式的对比",link:"#tcc与其他模式的对比",children:[{level:3,title:"TCC vs 2PC",slug:"tcc-vs-2pc",link:"#tcc-vs-2pc",children:[]},{level:3,title:"TCC vs Saga",slug:"tcc-vs-saga",link:"#tcc-vs-saga",children:[]},{level:3,title:"TCC vs 本地消息表",slug:"tcc-vs-本地消息表",link:"#tcc-vs-本地消息表",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/2-2-tcc-try-confirm-cancel.html",pathLocale:"/",extraFields:[]},{title:"SAGA 模式：长事务的优雅解决方案",headers:[{level:2,title:"SAGA模式概述",slug:"saga模式概述",link:"#saga模式概述",children:[{level:3,title:"SAGA的核心概念",slug:"saga的核心概念",link:"#saga的核心概念",children:[]},{level:3,title:"SAGA的基本特征",slug:"saga的基本特征",link:"#saga的基本特征",children:[]}]},{level:2,title:"顺序执行与补偿事务",slug:"顺序执行与补偿事务",link:"#顺序执行与补偿事务",children:[{level:3,title:"顺序执行机制",slug:"顺序执行机制",link:"#顺序执行机制",children:[]},{level:3,title:"补偿事务设计",slug:"补偿事务设计",link:"#补偿事务设计",children:[]}]},{level:2,title:"编排式 vs 协作式 SAGA",slug:"编排式-vs-协作式-saga",link:"#编排式-vs-协作式-saga",children:[{level:3,title:"编排式SAGA（Orchestration）",slug:"编排式saga-orchestration",link:"#编排式saga-orchestration",children:[]},{level:3,title:"协作式SAGA（Choreography）",slug:"协作式saga-choreography",link:"#协作式saga-choreography",children:[]}]},{level:2,title:"与微服务调用链结合",slug:"与微服务调用链结合",link:"#与微服务调用链结合",children:[{level:3,title:"SAGA在微服务架构中的应用",slug:"saga在微服务架构中的应用",link:"#saga在微服务架构中的应用",children:[]},{level:3,title:"分布式追踪集成",slug:"分布式追踪集成",link:"#分布式追踪集成",children:[]}]},{level:2,title:"SAGA模式的优缺点",slug:"saga模式的优缺点",link:"#saga模式的优缺点",children:[{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商订单处理",slug:"电商订单处理",link:"#电商订单处理",children:[]},{level:3,title:"金融转账场景",slug:"金融转账场景",link:"#金融转账场景",children:[]}]},{level:2,title:"SAGA模式的最佳实践",slug:"saga模式的最佳实践",link:"#saga模式的最佳实践",children:[{level:3,title:"1. 合理设计补偿逻辑",slug:"_1-合理设计补偿逻辑",link:"#_1-合理设计补偿逻辑",children:[]},{level:3,title:"2. 实现幂等性",slug:"_2-实现幂等性",link:"#_2-实现幂等性",children:[]},{level:3,title:"3. 状态持久化",slug:"_3-状态持久化",link:"#_3-状态持久化",children:[]},{level:3,title:"4. 监控和告警",slug:"_4-监控和告警",link:"#_4-监控和告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/2-3-saga-pattern.html",pathLocale:"/",extraFields:[]},{title:"分布式事务的其他模式与实践：事务日志、异步补偿与策略比较",headers:[{level:2,title:"事务日志与重放",slug:"事务日志与重放",link:"#事务日志与重放",children:[{level:3,title:"事务日志的核心概念",slug:"事务日志的核心概念",link:"#事务日志的核心概念",children:[]},{level:3,title:"实现机制",slug:"实现机制",link:"#实现机制",children:[]},{level:3,title:"重放机制",slug:"重放机制",link:"#重放机制",children:[]},{level:3,title:"应用场景",slug:"应用场景",link:"#应用场景",children:[]}]},{level:2,title:"异步补偿策略",slug:"异步补偿策略",link:"#异步补偿策略",children:[{level:3,title:"异步补偿的核心思想",slug:"异步补偿的核心思想",link:"#异步补偿的核心思想",children:[]},{level:3,title:"实现机制",slug:"实现机制-1",link:"#实现机制-1",children:[]},{level:3,title:"应用场景",slug:"应用场景-1",link:"#应用场景-1",children:[]}]},{level:2,title:"最终一致性策略比较",slug:"最终一致性策略比较",link:"#最终一致性策略比较",children:[{level:3,title:"策略对比维度",slug:"策略对比维度",link:"#策略对比维度",children:[]},{level:3,title:"详细对比分析",slug:"详细对比分析",link:"#详细对比分析",children:[]},{level:3,title:"实际选择指南",slug:"实际选择指南",link:"#实际选择指南",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 混合使用多种策略",slug:"_1-混合使用多种策略",link:"#_1-混合使用多种策略",children:[]},{level:3,title:"2. 完善的监控和告警",slug:"_2-完善的监控和告警",link:"#_2-完善的监控和告警",children:[]},{level:3,title:"3. 故障恢复机制",slug:"_3-故障恢复机制",link:"#_3-故障恢复机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/2-4-other-patterns-and-practices.html",pathLocale:"/",extraFields:[]},{title:"Seata 深度解析：阿里巴巴开源的分布式事务解决方案",headers:[{level:2,title:"Seata概述",slug:"seata概述",link:"#seata概述",children:[{level:3,title:"Seata的诞生背景",slug:"seata的诞生背景",link:"#seata的诞生背景",children:[]},{level:3,title:"Seata的核心特性",slug:"seata的核心特性",link:"#seata的核心特性",children:[]}]},{level:2,title:"AT模式、TCC模式、SAGA模式",slug:"at模式、tcc模式、saga模式",link:"#at模式、tcc模式、saga模式",children:[{level:3,title:"AT模式（Auto Transaction）",slug:"at模式-auto-transaction",link:"#at模式-auto-transaction",children:[]},{level:3,title:"TCC模式（Try-Confirm-Cancel）",slug:"tcc模式-try-confirm-cancel",link:"#tcc模式-try-confirm-cancel",children:[]},{level:3,title:"SAGA模式",slug:"saga模式",link:"#saga模式",children:[]}]},{level:2,title:"架构与Coordinator/Resource/Client",slug:"架构与coordinator-resource-client",link:"#架构与coordinator-resource-client",children:[{level:3,title:"Seata的整体架构",slug:"seata的整体架构",link:"#seata的整体架构",children:[]},{level:3,title:"核心组件详解",slug:"核心组件详解",link:"#核心组件详解",children:[]},{level:3,title:"组件间通信",slug:"组件间通信",link:"#组件间通信",children:[]}]},{level:2,title:"使用案例与最佳实践",slug:"使用案例与最佳实践",link:"#使用案例与最佳实践",children:[{level:3,title:"电商系统案例",slug:"电商系统案例",link:"#电商系统案例",children:[]},{level:3,title:"配置最佳实践",slug:"配置最佳实践",link:"#配置最佳实践",children:[]},{level:3,title:"性能优化建议",slug:"性能优化建议",link:"#性能优化建议",children:[]},{level:3,title:"监控与运维",slug:"监控与运维",link:"#监控与运维",children:[]}]},{level:2,title:"Seata与其他框架的集成",slug:"seata与其他框架的集成",link:"#seata与其他框架的集成",children:[{level:3,title:"与Spring Boot集成",slug:"与spring-boot集成",link:"#与spring-boot集成",children:[]},{level:3,title:"与Dubbo集成",slug:"与dubbo集成",link:"#与dubbo集成",children:[]},{level:3,title:"与Spring Cloud集成",slug:"与spring-cloud集成",link:"#与spring-cloud集成",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/3-1-seata-deep-dive.html",pathLocale:"/",extraFields:[]},{title:"Spring Cloud + 事务管理：构建可靠的微服务分布式事务体系",headers:[{level:2,title:"分布式事务在 Spring Cloud 中的支持",slug:"分布式事务在-spring-cloud-中的支持",link:"#分布式事务在-spring-cloud-中的支持",children:[{level:3,title:"Spring Cloud事务管理概述",slug:"spring-cloud事务管理概述",link:"#spring-cloud事务管理概述",children:[]},{level:3,title:"核心组件支持",slug:"核心组件支持",link:"#核心组件支持",children:[]},{level:3,title:"集成Seata示例",slug:"集成seata示例",link:"#集成seata示例",children:[]}]},{level:2,title:"与 Feign / RestTemplate / Dubbo 集成",slug:"与-feign-resttemplate-dubbo-集成",link:"#与-feign-resttemplate-dubbo-集成",children:[{level:3,title:"Feign集成分布式事务",slug:"feign集成分布式事务",link:"#feign集成分布式事务",children:[]},{level:3,title:"RestTemplate集成分布式事务",slug:"resttemplate集成分布式事务",link:"#resttemplate集成分布式事务",children:[]},{level:3,title:"Dubbo集成分布式事务",slug:"dubbo集成分布式事务",link:"#dubbo集成分布式事务",children:[]}]},{level:2,title:"事务传播与幂等设计",slug:"事务传播与幂等设计",link:"#事务传播与幂等设计",children:[{level:3,title:"事务传播机制",slug:"事务传播机制",link:"#事务传播机制",children:[]},{level:3,title:"幂等性设计",slug:"幂等性设计",link:"#幂等性设计",children:[]}]},{level:2,title:"最佳实践与配置优化",slug:"最佳实践与配置优化",link:"#最佳实践与配置优化",children:[{level:3,title:"配置优化",slug:"配置优化",link:"#配置优化",children:[]},{level:3,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]},{level:3,title:"故障处理与恢复",slug:"故障处理与恢复",link:"#故障处理与恢复",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/3-2-spring-cloud-transaction-management.html",pathLocale:"/",extraFields:[]},{title:"分布式事务其他框架简析：Atomikos、Narayana与开源方案对比",headers:[{level:2,title:"Atomikos 深度解析",slug:"atomikos-深度解析",link:"#atomikos-深度解析",children:[{level:3,title:"Atomikos概述",slug:"atomikos概述",link:"#atomikos概述",children:[]},{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]},{level:3,title:"架构设计",slug:"架构设计",link:"#架构设计",children:[]},{level:3,title:"使用示例",slug:"使用示例",link:"#使用示例",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析",link:"#优缺点分析",children:[]}]},{level:2,title:"Narayana / JTA 深度解析",slug:"narayana-jta-深度解析",link:"#narayana-jta-深度解析",children:[{level:3,title:"Narayana概述",slug:"narayana概述",link:"#narayana概述",children:[]},{level:3,title:"核心特性",slug:"核心特性-1",link:"#核心特性-1",children:[]},{level:3,title:"架构组件",slug:"架构组件",link:"#架构组件",children:[]},{level:3,title:"使用示例",slug:"使用示例-1",link:"#使用示例-1",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析-1",link:"#优缺点分析-1",children:[]}]},{level:2,title:"微服务下的开源方案对比",slug:"微服务下的开源方案对比",link:"#微服务下的开源方案对比",children:[{level:3,title:"方案对比维度",slug:"方案对比维度",link:"#方案对比维度",children:[]},{level:3,title:"详细对比分析",slug:"详细对比分析",link:"#详细对比分析",children:[]},{level:3,title:"选择建议",slug:"选择建议",link:"#选择建议",children:[]}]},{level:2,title:"Bitronix Transaction Manager 简介",slug:"bitronix-transaction-manager-简介",link:"#bitronix-transaction-manager-简介",children:[{level:3,title:"BTM概述",slug:"btm概述",link:"#btm概述",children:[]},{level:3,title:"特点",slug:"特点",link:"#特点",children:[]},{level:3,title:"使用示例",slug:"使用示例-2",link:"#使用示例-2",children:[]},{level:3,title:"现状与局限",slug:"现状与局限",link:"#现状与局限",children:[]}]},{level:2,title:"其他新兴框架",slug:"其他新兴框架",link:"#其他新兴框架",children:[{level:3,title:"Eventuate Tram",slug:"eventuate-tram",link:"#eventuate-tram",children:[]},{level:3,title:"Apache ServiceComb Pack",slug:"apache-servicecomb-pack",link:"#apache-servicecomb-pack",children:[]}]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[{level:3,title:"1. 混合使用多种方案",slug:"_1-混合使用多种方案",link:"#_1-混合使用多种方案",children:[]},{level:3,title:"2. 监控与告警",slug:"_2-监控与告警",link:"#_2-监控与告警",children:[]},{level:3,title:"3. 故障恢复机制",slug:"_3-故障恢复机制",link:"#_3-故障恢复机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/3-3-other-frameworks-analysis.html",pathLocale:"/",extraFields:[]},{title:"幂等性设计与保证：构建可靠的分布式系统基石",headers:[{level:2,title:"幂等性操作的必要性",slug:"幂等性操作的必要性",link:"#幂等性操作的必要性",children:[{level:3,title:"幂等性的定义",slug:"幂等性的定义",link:"#幂等性的定义",children:[]},{level:3,title:"为什么需要幂等性",slug:"为什么需要幂等性",link:"#为什么需要幂等性",children:[]},{level:3,title:"幂等性的重要性",slug:"幂等性的重要性",link:"#幂等性的重要性",children:[]},{level:3,title:"幂等性与事务的关系",slug:"幂等性与事务的关系",link:"#幂等性与事务的关系",children:[]}]},{level:2,title:"Token、唯一键、幂等表设计",slug:"token、唯一键、幂等表设计",link:"#token、唯一键、幂等表设计",children:[{level:3,title:"基于Token的幂等性设计",slug:"基于token的幂等性设计",link:"#基于token的幂等性设计",children:[]},{level:3,title:"基于唯一键的幂等性设计",slug:"基于唯一键的幂等性设计",link:"#基于唯一键的幂等性设计",children:[]},{level:3,title:"幂等表设计",slug:"幂等表设计",link:"#幂等表设计",children:[]}]},{level:2,title:"分布式锁与防重策略",slug:"分布式锁与防重策略",link:"#分布式锁与防重策略",children:[{level:3,title:"分布式锁实现幂等性",slug:"分布式锁实现幂等性",link:"#分布式锁实现幂等性",children:[]},{level:3,title:"防重策略设计",slug:"防重策略设计",link:"#防重策略设计",children:[]}]},{level:2,title:"幂等性实现的最佳实践",slug:"幂等性实现的最佳实践",link:"#幂等性实现的最佳实践",children:[{level:3,title:"1. 统一幂等性框架",slug:"_1-统一幂等性框架",link:"#_1-统一幂等性框架",children:[]},{level:3,title:"2. 多层幂等性保障",slug:"_2-多层幂等性保障",link:"#_2-多层幂等性保障",children:[]},{level:3,title:"3. 监控与告警",slug:"_3-监控与告警",link:"#_3-监控与告警",children:[]},{level:3,title:"4. 测试用例设计",slug:"_4-测试用例设计",link:"#_4-测试用例设计",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/4-1-idempotency-design-guarantee.html",pathLocale:"/",extraFields:[]},{title:"事务监控与追踪：分布式事务系统的可视化洞察",headers:[{level:2,title:"分布式事务链路可视化",slug:"分布式事务链路可视化",link:"#分布式事务链路可视化",children:[{level:3,title:"链路追踪的重要性",slug:"链路追踪的重要性",link:"#链路追踪的重要性",children:[]},{level:3,title:"OpenTelemetry与链路追踪",slug:"opentelemetry与链路追踪",link:"#opentelemetry与链路追踪",children:[]},{level:3,title:"链路数据可视化",slug:"链路数据可视化",link:"#链路数据可视化",children:[]}]},{level:2,title:"异常告警与补偿机制",slug:"异常告警与补偿机制",link:"#异常告警与补偿机制",children:[{level:3,title:"异常检测机制",slug:"异常检测机制",link:"#异常检测机制",children:[]},{level:3,title:"补偿机制触发",slug:"补偿机制触发",link:"#补偿机制触发",children:[]}]},{level:2,title:"日志与审计",slug:"日志与审计",link:"#日志与审计",children:[{level:3,title:"结构化日志设计",slug:"结构化日志设计",link:"#结构化日志设计",children:[]},{level:3,title:"审计日志实现",slug:"审计日志实现",link:"#审计日志实现",children:[]},{level:3,title:"日志收集与分析",slug:"日志收集与分析",link:"#日志收集与分析",children:[]}]},{level:2,title:"监控面板设计",slug:"监控面板设计",link:"#监控面板设计",children:[{level:3,title:"Grafana监控面板",slug:"grafana监控面板",link:"#grafana监控面板",children:[]},{level:3,title:"自定义监控指标",slug:"自定义监控指标",link:"#自定义监控指标",children:[]}]},{level:2,title:"告警策略设计",slug:"告警策略设计",link:"#告警策略设计",children:[{level:3,title:"多维度告警规则",slug:"多维度告警规则",link:"#多维度告警规则",children:[]},{level:3,title:"告警通知渠道",slug:"告警通知渠道",link:"#告警通知渠道",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 全链路追踪实现",slug:"_1-全链路追踪实现",link:"#_1-全链路追踪实现",children:[]},{level:3,title:"2. 统一日志格式",slug:"_2-统一日志格式",link:"#_2-统一日志格式",children:[]},{level:3,title:"3. 监控数据持久化",slug:"_3-监控数据持久化",link:"#_3-监控数据持久化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/4-2-transaction-monitoring-tracing.html",pathLocale:"/",extraFields:[]},{title:"高并发与性能优化：构建高性能的分布式事务系统",headers:[{level:2,title:"事务锁粒度优化",slug:"事务锁粒度优化",link:"#事务锁粒度优化",children:[{level:3,title:"锁粒度对性能的影响",slug:"锁粒度对性能的影响",link:"#锁粒度对性能的影响",children:[]},{level:3,title:"数据库锁优化",slug:"数据库锁优化",link:"#数据库锁优化",children:[]},{level:3,title:"分布式锁优化",slug:"分布式锁优化",link:"#分布式锁优化",children:[]}]},{level:2,title:"批量提交与异步补偿",slug:"批量提交与异步补偿",link:"#批量提交与异步补偿",children:[{level:3,title:"批量事务处理",slug:"批量事务处理",link:"#批量事务处理",children:[]},{level:3,title:"异步补偿机制",slug:"异步补偿机制",link:"#异步补偿机制",children:[]}]},{level:2,title:"数据分片与事务隔离",slug:"数据分片与事务隔离",link:"#数据分片与事务隔离",children:[{level:3,title:"数据分片策略",slug:"数据分片策略",link:"#数据分片策略",children:[]},{level:3,title:"事务隔离优化",slug:"事务隔离优化",link:"#事务隔离优化",children:[]}]},{level:2,title:"性能测试与调优",slug:"性能测试与调优",link:"#性能测试与调优",children:[{level:3,title:"压力测试设计",slug:"压力测试设计",link:"#压力测试设计",children:[]},{level:3,title:"性能监控指标",slug:"性能监控指标",link:"#性能监控指标",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 分层优化策略",slug:"_1-分层优化策略",link:"#_1-分层优化策略",children:[]},{level:3,title:"2. 性能调优配置",slug:"_2-性能调优配置",link:"#_2-性能调优配置",children:[]},{level:3,title:"3. 监控告警配置",slug:"_3-监控告警配置",link:"#_3-监控告警配置",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/4-3-high-concurrency-performance-optimization.html",pathLocale:"/",extraFields:[]},{title:"分布式事务的 CAP 权衡：一致性与可用性的智慧选择",headers:[{level:2,title:"一致性 vs 可用性",slug:"一致性-vs-可用性",link:"#一致性-vs-可用性",children:[{level:3,title:"CAP定理的核心思想",slug:"cap定理的核心思想",link:"#cap定理的核心思想",children:[]},{level:3,title:"一致性模型详解",slug:"一致性模型详解",link:"#一致性模型详解",children:[]},{level:3,title:"可用性优化策略",slug:"可用性优化策略",link:"#可用性优化策略",children:[]}]},{level:2,title:"最终一致性设计原则",slug:"最终一致性设计原则",link:"#最终一致性设计原则",children:[{level:3,title:"一致性级别选择",slug:"一致性级别选择",link:"#一致性级别选择",children:[]},{level:3,title:"最终一致性实现模式",slug:"最终一致性实现模式",link:"#最终一致性实现模式",children:[]}]},{level:2,title:"容错与失败恢复策略",slug:"容错与失败恢复策略",link:"#容错与失败恢复策略",children:[{level:3,title:"故障检测与恢复",slug:"故障检测与恢复",link:"#故障检测与恢复",children:[]},{level:3,title:"事务回滚与补偿",slug:"事务回滚与补偿",link:"#事务回滚与补偿",children:[]}]},{level:2,title:"CAP权衡实践指南",slug:"cap权衡实践指南",link:"#cap权衡实践指南",children:[{level:3,title:"场景化权衡策略",slug:"场景化权衡策略",link:"#场景化权衡策略",children:[]},{level:3,title:"监控与调优",slug:"监控与调优",link:"#监控与调优",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/4-4-cap-trade-offs-distributed-transactions.html",pathLocale:"/",extraFields:[]},{title:"电商秒杀与库存事务案例：高并发场景下的分布式事务实践",headers:[{level:2,title:"库存扣减事务设计",slug:"库存扣减事务设计",link:"#库存扣减事务设计",children:[{level:3,title:"秒杀场景的特点与挑战",slug:"秒杀场景的特点与挑战",link:"#秒杀场景的特点与挑战",children:[]},{level:3,title:"库存扣减的原子性保证",slug:"库存扣减的原子性保证",link:"#库存扣减的原子性保证",children:[]},{level:3,title:"分布式锁在库存扣减中的应用",slug:"分布式锁在库存扣减中的应用",link:"#分布式锁在库存扣减中的应用",children:[]}]},{level:2,title:"支付事务保障",slug:"支付事务保障",link:"#支付事务保障",children:[{level:3,title:"支付流程的事务设计",slug:"支付流程的事务设计",link:"#支付流程的事务设计",children:[]}]},{level:2,title:"异常回滚与补偿逻辑",slug:"异常回滚与补偿逻辑",link:"#异常回滚与补偿逻辑",children:[{level:3,title:"超时处理机制",slug:"超时处理机制",link:"#超时处理机制",children:[]},{level:3,title:"补偿事务设计",slug:"补偿事务设计",link:"#补偿事务设计",children:[]}]},{level:2,title:"高并发优化策略",slug:"高并发优化策略",link:"#高并发优化策略",children:[{level:3,title:"限流与降级",slug:"限流与降级",link:"#限流与降级",children:[]},{level:3,title:"缓存预热与异步处理",slug:"缓存预热与异步处理",link:"#缓存预热与异步处理",children:[]}]},{level:2,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[{level:3,title:"秒杀场景监控",slug:"秒杀场景监控",link:"#秒杀场景监控",children:[]},{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 技术选型建议",slug:"_1-技术选型建议",link:"#_1-技术选型建议",children:[]},{level:3,title:"2. 架构设计原则",slug:"_2-架构设计原则",link:"#_2-架构设计原则",children:[]},{level:3,title:"3. 测试验证方案",slug:"_3-测试验证方案",link:"#_3-测试验证方案",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/5-1-ecommerce-flash-sale-inventory-transaction.html",pathLocale:"/",extraFields:[]},{title:"金融系统事务案例：资金转账的分布式事务实践",headers:[{level:2,title:"账户资金转账事务设计",slug:"账户资金转账事务设计",link:"#账户资金转账事务设计",children:[{level:3,title:"金融系统的特点与要求",slug:"金融系统的特点与要求",link:"#金融系统的特点与要求",children:[]},{level:3,title:"基于TCC模式的资金转账",slug:"基于tcc模式的资金转账",link:"#基于tcc模式的资金转账",children:[]},{level:3,title:"幂等性保障",slug:"幂等性保障",link:"#幂等性保障",children:[]}]},{level:2,title:"双活、多中心事务方案",slug:"双活、多中心事务方案",link:"#双活、多中心事务方案",children:[{level:3,title:"双活架构设计",slug:"双活架构设计",link:"#双活架构设计",children:[]},{level:3,title:"多中心数据同步",slug:"多中心数据同步",link:"#多中心数据同步",children:[]},{level:3,title:"一致性保证机制",slug:"一致性保证机制",link:"#一致性保证机制",children:[]}]},{level:2,title:"风控与审计策略",slug:"风控与审计策略",link:"#风控与审计策略",children:[{level:3,title:"风险控制机制",slug:"风险控制机制",link:"#风险控制机制",children:[]},{level:3,title:"审计日志设计",slug:"审计日志设计",link:"#审计日志设计",children:[]},{level:3,title:"合规性报告",slug:"合规性报告",link:"#合规性报告",children:[]}]},{level:2,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[{level:3,title:"金融级监控指标",slug:"金融级监控指标",link:"#金融级监控指标",children:[]},{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 架构设计原则",slug:"_1-架构设计原则",link:"#_1-架构设计原则",children:[]},{level:3,title:"2. 技术选型建议",slug:"_2-技术选型建议",link:"#_2-技术选型建议",children:[]},{level:3,title:"3. 测试验证方案",slug:"_3-测试验证方案",link:"#_3-测试验证方案",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/5-2-financial-system-transaction-case.html",pathLocale:"/",extraFields:[]},{title:"大数据与消息事务结合：ETL数据一致性保障与消息队列事务",headers:[{level:2,title:"ETL 数据一致性保障",slug:"etl-数据一致性保障",link:"#etl-数据一致性保障",children:[{level:3,title:"ETL流程中的事务挑战",slug:"etl流程中的事务挑战",link:"#etl流程中的事务挑战",children:[]},{level:3,title:"基于checkpoint的ETL一致性保障",slug:"基于checkpoint的etl一致性保障",link:"#基于checkpoint的etl一致性保障",children:[]},{level:3,title:"增量数据处理与一致性",slug:"增量数据处理与一致性",link:"#增量数据处理与一致性",children:[]}]},{level:2,title:"Kafka / RocketMQ 与事务结合",slug:"kafka-rocketmq-与事务结合",link:"#kafka-rocketmq-与事务结合",children:[{level:3,title:"Kafka事务机制",slug:"kafka事务机制",link:"#kafka事务机制",children:[]},{level:3,title:"RocketMQ事务消息",slug:"rocketmq事务消息",link:"#rocketmq事务消息",children:[]},{level:3,title:"消息事务与业务事务的协调",slug:"消息事务与业务事务的协调",link:"#消息事务与业务事务的协调",children:[]}]},{level:2,title:"数据重放与补偿机制",slug:"数据重放与补偿机制",link:"#数据重放与补偿机制",children:[{level:3,title:"数据重放机制设计",slug:"数据重放机制设计",link:"#数据重放机制设计",children:[]},{level:3,title:"补偿事务机制",slug:"补偿事务机制",link:"#补偿事务机制",children:[]},{level:3,title:"死信队列与人工干预",slug:"死信队列与人工干预",link:"#死信队列与人工干预",children:[]}]},{level:2,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[{level:3,title:"大数据事务监控",slug:"大数据事务监控",link:"#大数据事务监控",children:[]},{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 架构设计原则",slug:"_1-架构设计原则",link:"#_1-架构设计原则",children:[]},{level:3,title:"2. 技术选型建议",slug:"_2-技术选型建议",link:"#_2-技术选型建议",children:[]},{level:3,title:"3. 性能优化建议",slug:"_3-性能优化建议",link:"#_3-性能优化建议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/distributed-tx/5-3-big-data-message-transaction.html",pathLocale:"/",extraFields:[]},{title:"《分布式事务中间件：从入门到精通》目录",headers:[{level:2,title:"第一篇：基础篇 · 理解分布式事务",slug:"第一篇-基础篇-·-理解分布式事务",link:"#第一篇-基础篇-·-理解分布式事务",children:[]},{level:2,title:"第二篇：分布式事务模式解析",slug:"第二篇-分布式事务模式解析",link:"#第二篇-分布式事务模式解析",children:[]},{level:2,title:"第三篇：主流分布式事务框架",slug:"第三篇-主流分布式事务框架",link:"#第三篇-主流分布式事务框架",children:[]},{level:2,title:"第四篇：高阶篇 · 深入设计与优化",slug:"第四篇-高阶篇-·-深入设计与优化",link:"#第四篇-高阶篇-·-深入设计与优化",children:[]},{level:2,title:"第五篇：实战篇 · 企业级落地",slug:"第五篇-实战篇-·-企业级落地",link:"#第五篇-实战篇-·-企业级落地",children:[]},{level:2,title:"第六篇：未来趋势与总结",slug:"第六篇-未来趋势与总结",link:"#第六篇-未来趋势与总结",children:[]}],path:"/posts/distributed-tx/index-desc.html",pathLocale:"/",extraFields:[]},{title:"缓存基础概述：理解分布式缓存的核心概念",headers:[{level:2,title:"为什么需要缓存",slug:"为什么需要缓存",link:"#为什么需要缓存",children:[]},{level:2,title:"缓存的适用场景与风险",slug:"缓存的适用场景与风险",link:"#缓存的适用场景与风险",children:[]},{level:2,title:"本地缓存 vs 分布式缓存",slug:"本地缓存-vs-分布式缓存",link:"#本地缓存-vs-分布式缓存",children:[]},{level:2,title:"缓存的优势与挑战",slug:"缓存的优势与挑战",link:"#缓存的优势与挑战",children:[]}],path:"/posts/cache/1-1-0_Cache_Basics_Overview.html",pathLocale:"/",extraFields:[]},{title:"为什么需要缓存：深入理解缓存的价值与意义",headers:[{level:2,title:"系统性能瓶颈的根源",slug:"系统性能瓶颈的根源",link:"#系统性能瓶颈的根源",children:[]},{level:2,title:"缓存的核心价值",slug:"缓存的核心价值",link:"#缓存的核心价值",children:[{level:3,title:"1. 显著降低数据访问延迟",slug:"_1-显著降低数据访问延迟",link:"#_1-显著降低数据访问延迟",children:[]},{level:3,title:"2. 减少数据库负载",slug:"_2-减少数据库负载",link:"#_2-减少数据库负载",children:[]},{level:3,title:"3. 提升系统吞吐量",slug:"_3-提升系统吞吐量",link:"#_3-提升系统吞吐量",children:[]},{level:3,title:"4. 改善用户体验",slug:"_4-改善用户体验",link:"#_4-改善用户体验",children:[]}]},{level:2,title:"缓存的适用场景分析",slug:"缓存的适用场景分析",link:"#缓存的适用场景分析",children:[{level:3,title:"适合缓存的场景",slug:"适合缓存的场景",link:"#适合缓存的场景",children:[]},{level:3,title:"不适合缓存的场景",slug:"不适合缓存的场景",link:"#不适合缓存的场景",children:[]}]},{level:2,title:"缓存带来的新挑战",slug:"缓存带来的新挑战",link:"#缓存带来的新挑战",children:[{level:3,title:"1. 数据一致性问题",slug:"_1-数据一致性问题",link:"#_1-数据一致性问题",children:[]},{level:3,title:"2. 缓存失效策略",slug:"_2-缓存失效策略",link:"#_2-缓存失效策略",children:[]},{level:3,title:"3. 缓存穿透、雪崩和击穿",slug:"_3-缓存穿透、雪崩和击穿",link:"#_3-缓存穿透、雪崩和击穿",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-1-1_Why_Cache_Is_Needed.html",pathLocale:"/",extraFields:[]},{title:"缓存的适用场景与风险：精准识别与有效规避",headers:[{level:2,title:"缓存的适用场景深度解析",slug:"缓存的适用场景深度解析",link:"#缓存的适用场景深度解析",children:[{level:3,title:"1. 读多写少的数据场景",slug:"_1-读多写少的数据场景",link:"#_1-读多写少的数据场景",children:[]},{level:3,title:"2. 计算密集型结果缓存",slug:"_2-计算密集型结果缓存",link:"#_2-计算密集型结果缓存",children:[]},{level:3,title:"3. 会话与临时数据",slug:"_3-会话与临时数据",link:"#_3-会话与临时数据",children:[]}]},{level:2,title:"缓存的潜在风险与挑战",slug:"缓存的潜在风险与挑战",link:"#缓存的潜在风险与挑战",children:[{level:3,title:"1. 数据一致性风险",slug:"_1-数据一致性风险",link:"#_1-数据一致性风险",children:[]},{level:3,title:"2. 缓存穿透问题",slug:"_2-缓存穿透问题",link:"#_2-缓存穿透问题",children:[]},{level:3,title:"3. 缓存雪崩问题",slug:"_3-缓存雪崩问题",link:"#_3-缓存雪崩问题",children:[]},{level:3,title:"4. 缓存击穿问题",slug:"_4-缓存击穿问题",link:"#_4-缓存击穿问题",children:[]}]},{level:2,title:"缓存使用最佳实践",slug:"缓存使用最佳实践",link:"#缓存使用最佳实践",children:[{level:3,title:"1. 合理选择缓存策略",slug:"_1-合理选择缓存策略",link:"#_1-合理选择缓存策略",children:[]},{level:3,title:"2. 设置合适的过期时间",slug:"_2-设置合适的过期时间",link:"#_2-设置合适的过期时间",children:[]},{level:3,title:"3. 监控缓存性能",slug:"_3-监控缓存性能",link:"#_3-监控缓存性能",children:[]},{level:3,title:"4. 定期优化缓存",slug:"_4-定期优化缓存",link:"#_4-定期优化缓存",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-1-2_Cache_Applicable_Scenarios_And_Risks.html",pathLocale:"/",extraFields:[]},{title:"本地缓存 vs 分布式缓存：技术选型的深度对比",headers:[{level:2,title:"本地缓存详解",slug:"本地缓存详解",link:"#本地缓存详解",children:[{level:3,title:"1. 本地缓存的特点",slug:"_1-本地缓存的特点",link:"#_1-本地缓存的特点",children:[]},{level:3,title:"2. 本地缓存的典型实现",slug:"_2-本地缓存的典型实现",link:"#_2-本地缓存的典型实现",children:[]}]},{level:2,title:"分布式缓存详解",slug:"分布式缓存详解",link:"#分布式缓存详解",children:[{level:3,title:"1. 分布式缓存的特点",slug:"_1-分布式缓存的特点",link:"#_1-分布式缓存的特点",children:[]},{level:3,title:"2. 分布式缓存的典型实现",slug:"_2-分布式缓存的典型实现",link:"#_2-分布式缓存的典型实现",children:[]}]},{level:2,title:"技术选型对比分析",slug:"技术选型对比分析",link:"#技术选型对比分析",children:[{level:3,title:"1. 性能对比",slug:"_1-性能对比",link:"#_1-性能对比",children:[]},{level:3,title:"2. 数据一致性对比",slug:"_2-数据一致性对比",link:"#_2-数据一致性对比",children:[]},{level:3,title:"3. 运维复杂度对比",slug:"_3-运维复杂度对比",link:"#_3-运维复杂度对比",children:[]}]},{level:2,title:"混合缓存架构",slug:"混合缓存架构",link:"#混合缓存架构",children:[]},{level:2,title:"适用场景分析",slug:"适用场景分析",link:"#适用场景分析",children:[{level:3,title:"适合使用本地缓存的场景：",slug:"适合使用本地缓存的场景",link:"#适合使用本地缓存的场景",children:[]},{level:3,title:"适合使用分布式缓存的场景：",slug:"适合使用分布式缓存的场景",link:"#适合使用分布式缓存的场景",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-1-3_Local_Cache_vs_Distributed_Cache.html",pathLocale:"/",extraFields:[]},{title:"缓存的优势与挑战：全面解析缓存技术的双面性",headers:[{level:2,title:"缓存的核心优势",slug:"缓存的核心优势",link:"#缓存的核心优势",children:[{level:3,title:"1. 显著提升系统性能",slug:"_1-显著提升系统性能",link:"#_1-显著提升系统性能",children:[]},{level:3,title:"2. 改善用户体验",slug:"_2-改善用户体验",link:"#_2-改善用户体验",children:[]},{level:3,title:"3. 降低系统成本",slug:"_3-降低系统成本",link:"#_3-降低系统成本",children:[]}]},{level:2,title:"缓存面临的主要挑战",slug:"缓存面临的主要挑战",link:"#缓存面临的主要挑战",children:[{level:3,title:"1. 数据一致性问题",slug:"_1-数据一致性问题",link:"#_1-数据一致性问题",children:[]},{level:3,title:"2. 缓存穿透问题",slug:"_2-缓存穿透问题",link:"#_2-缓存穿透问题",children:[]},{level:3,title:"3. 缓存雪崩问题",slug:"_3-缓存雪崩问题",link:"#_3-缓存雪崩问题",children:[]},{level:3,title:"4. 缓存击穿问题",slug:"_4-缓存击穿问题",link:"#_4-缓存击穿问题",children:[]}]},{level:2,title:"缓存优化策略",slug:"缓存优化策略",link:"#缓存优化策略",children:[{level:3,title:"1. 多级缓存架构",slug:"_1-多级缓存架构",link:"#_1-多级缓存架构",children:[]},{level:3,title:"2. 缓存预热策略",slug:"_2-缓存预热策略",link:"#_2-缓存预热策略",children:[]},{level:3,title:"3. 缓存监控与告警",slug:"_3-缓存监控与告警",link:"#_3-缓存监控与告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-1-4_Cache_Advantages_And_Challenges.html",pathLocale:"/",extraFields:[]},{title:"分布式缓存核心原理概述：深入理解分布式架构下的缓存需求",headers:[{level:2,title:"分布式架构下的缓存需求",slug:"分布式架构下的缓存需求",link:"#分布式架构下的缓存需求",children:[]},{level:2,title:"CAP定理与缓存系统的权衡",slug:"cap定理与缓存系统的权衡",link:"#cap定理与缓存系统的权衡",children:[]},{level:2,title:"一致性哈希与节点分片",slug:"一致性哈希与节点分片",link:"#一致性哈希与节点分片",children:[]},{level:2,title:"缓存与数据库的关系",slug:"缓存与数据库的关系",link:"#缓存与数据库的关系",children:[]}],path:"/posts/cache/1-2-0_Distributed_Cache_Core_Principles_Overview.html",pathLocale:"/",extraFields:[]},{title:"分布式架构下的缓存需求：构建高可用、可扩展的缓存系统",headers:[{level:2,title:"分布式架构的特点与挑战",slug:"分布式架构的特点与挑战",link:"#分布式架构的特点与挑战",children:[{level:3,title:"1. 服务拆分与独立部署",slug:"_1-服务拆分与独立部署",link:"#_1-服务拆分与独立部署",children:[]},{level:3,title:"2. 数据分散与一致性挑战",slug:"_2-数据分散与一致性挑战",link:"#_2-数据分散与一致性挑战",children:[]},{level:3,title:"3. 高可用与容错要求",slug:"_3-高可用与容错要求",link:"#_3-高可用与容错要求",children:[]}]},{level:2,title:"分布式缓存的核心需求",slug:"分布式缓存的核心需求",link:"#分布式缓存的核心需求",children:[{level:3,title:"1. 数据共享需求",slug:"_1-数据共享需求",link:"#_1-数据共享需求",children:[]},{level:3,title:"2. 高可用性需求",slug:"_2-高可用性需求",link:"#_2-高可用性需求",children:[]},{level:3,title:"3. 可扩展性需求",slug:"_3-可扩展性需求",link:"#_3-可扩展性需求",children:[]},{level:3,title:"4. 一致性需求",slug:"_4-一致性需求",link:"#_4-一致性需求",children:[]}]},{level:2,title:"分布式缓存的架构模式",slug:"分布式缓存的架构模式",link:"#分布式缓存的架构模式",children:[{level:3,title:"1. 客户端分片模式",slug:"_1-客户端分片模式",link:"#_1-客户端分片模式",children:[]},{level:3,title:"2. 代理分片模式",slug:"_2-代理分片模式",link:"#_2-代理分片模式",children:[]},{level:3,title:"3. 服务端集群模式",slug:"_3-服务端集群模式",link:"#_3-服务端集群模式",children:[]}]},{level:2,title:"分布式缓存的最佳实践",slug:"分布式缓存的最佳实践",link:"#分布式缓存的最佳实践",children:[{level:3,title:"1. 合理设计缓存键",slug:"_1-合理设计缓存键",link:"#_1-合理设计缓存键",children:[]},{level:3,title:"2. 设置合适的过期策略",slug:"_2-设置合适的过期策略",link:"#_2-设置合适的过期策略",children:[]},{level:3,title:"3. 建立完善的监控体系",slug:"_3-建立完善的监控体系",link:"#_3-建立完善的监控体系",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-2-1_Distributed_Architecture_Cache_Requirements.html",pathLocale:"/",extraFields:[]},{title:"CAP定理与缓存系统的权衡：在一致性、可用性与分区容错性间寻找平衡",headers:[{level:2,title:"CAP定理详解",slug:"cap定理详解",link:"#cap定理详解",children:[{level:3,title:"1. 一致性(Consistency)",slug:"_1-一致性-consistency",link:"#_1-一致性-consistency",children:[]},{level:3,title:"2. 可用性(Availability)",slug:"_2-可用性-availability",link:"#_2-可用性-availability",children:[]},{level:3,title:"3. 分区容错性(Partition Tolerance)",slug:"_3-分区容错性-partition-tolerance",link:"#_3-分区容错性-partition-tolerance",children:[]}]},{level:2,title:"CAP定理在缓存系统中的应用",slug:"cap定理在缓存系统中的应用",link:"#cap定理在缓存系统中的应用",children:[{level:3,title:"1. CP系统（一致性+分区容错性）",slug:"_1-cp系统-一致性-分区容错性",link:"#_1-cp系统-一致性-分区容错性",children:[]},{level:3,title:"2. AP系统（可用性+分区容错性）",slug:"_2-ap系统-可用性-分区容错性",link:"#_2-ap系统-可用性-分区容错性",children:[]}]},{level:2,title:"缓存系统中的具体权衡策略",slug:"缓存系统中的具体权衡策略",link:"#缓存系统中的具体权衡策略",children:[{level:3,title:"1. 读写分离策略",slug:"_1-读写分离策略",link:"#_1-读写分离策略",children:[]},{level:3,title:"2. 多版本并发控制(MVCC)",slug:"_2-多版本并发控制-mvcc",link:"#_2-多版本并发控制-mvcc",children:[]},{level:3,title:"3. 缓存分层策略",slug:"_3-缓存分层策略",link:"#_3-缓存分层策略",children:[]}]},{level:2,title:"实际案例分析",slug:"实际案例分析",link:"#实际案例分析",children:[{level:3,title:"1. 电商系统中的商品缓存",slug:"_1-电商系统中的商品缓存",link:"#_1-电商系统中的商品缓存",children:[]},{level:3,title:"2. 社交媒体系统中的用户信息缓存",slug:"_2-社交媒体系统中的用户信息缓存",link:"#_2-社交媒体系统中的用户信息缓存",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-2-2_CAP_Theorem_And_Cache_System_Tradeoffs.html",pathLocale:"/",extraFields:[]},{title:"一致性哈希与节点分片：构建可扩展的分布式缓存系统",headers:[{level:2,title:"传统哈希取模算法的问题",slug:"传统哈希取模算法的问题",link:"#传统哈希取模算法的问题",children:[{level:3,title:"1. 数据分布不均",slug:"_1-数据分布不均",link:"#_1-数据分布不均",children:[]},{level:3,title:"2. 节点增减时的大量数据迁移",slug:"_2-节点增减时的大量数据迁移",link:"#_2-节点增减时的大量数据迁移",children:[]}]},{level:2,title:"一致性哈希算法原理",slug:"一致性哈希算法原理",link:"#一致性哈希算法原理",children:[{level:3,title:"1. 基本原理",slug:"_1-基本原理",link:"#_1-基本原理",children:[]},{level:3,title:"2. 算法实现",slug:"_2-算法实现",link:"#_2-算法实现",children:[]},{level:3,title:"3. 虚拟节点的作用",slug:"_3-虚拟节点的作用",link:"#_3-虚拟节点的作用",children:[]}]},{level:2,title:"一致性哈希在分布式缓存中的应用",slug:"一致性哈希在分布式缓存中的应用",link:"#一致性哈希在分布式缓存中的应用",children:[{level:3,title:"1. Redis集群中的哈希槽",slug:"_1-redis集群中的哈希槽",link:"#_1-redis集群中的哈希槽",children:[]},{level:3,title:"2. 自定义一致性哈希缓存",slug:"_2-自定义一致性哈希缓存",link:"#_2-自定义一致性哈希缓存",children:[]}]},{level:2,title:"节点分片技术",slug:"节点分片技术",link:"#节点分片技术",children:[{level:3,title:"1. 范围分片",slug:"_1-范围分片",link:"#_1-范围分片",children:[]},{level:3,title:"2. 列表分片",slug:"_2-列表分片",link:"#_2-列表分片",children:[]}]},{level:2,title:"一致性哈希的优化",slug:"一致性哈希的优化",link:"#一致性哈希的优化",children:[{level:3,title:"1. 性能优化",slug:"_1-性能优化",link:"#_1-性能优化",children:[]},{level:3,title:"2. 数据迁移优化",slug:"_2-数据迁移优化",link:"#_2-数据迁移优化",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"1. 电商系统商品缓存分片",slug:"_1-电商系统商品缓存分片",link:"#_1-电商系统商品缓存分片",children:[]},{level:3,title:"2. 用户会话缓存分片",slug:"_2-用户会话缓存分片",link:"#_2-用户会话缓存分片",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-2-3_Consistent_Hashing_And_Node_Sharding.html",pathLocale:"/",extraFields:[]},{title:"缓存与数据库的关系：构建高效数据访问层的关键",headers:[{level:2,title:"缓存与数据库的基本关系",slug:"缓存与数据库的基本关系",link:"#缓存与数据库的基本关系",children:[{level:3,title:"1. 数据层次关系",slug:"_1-数据层次关系",link:"#_1-数据层次关系",children:[]},{level:3,title:"2. 访问模式关系",slug:"_2-访问模式关系",link:"#_2-访问模式关系",children:[]}]},{level:2,title:"缓存与数据库的交互模式",slug:"缓存与数据库的交互模式",link:"#缓存与数据库的交互模式",children:[{level:3,title:"1. Cache-Aside Pattern (旁路缓存模式)",slug:"_1-cache-aside-pattern-旁路缓存模式",link:"#_1-cache-aside-pattern-旁路缓存模式",children:[]},{level:3,title:"2. Read-Through/Write-Through Pattern",slug:"_2-read-through-write-through-pattern",link:"#_2-read-through-write-through-pattern",children:[]},{level:3,title:"3. Write-Behind/Write-Back Pattern",slug:"_3-write-behind-write-back-pattern",link:"#_3-write-behind-write-back-pattern",children:[]}]},{level:2,title:"数据一致性保证机制",slug:"数据一致性保证机制",link:"#数据一致性保证机制",children:[{level:3,title:"1. 强一致性保证",slug:"_1-强一致性保证",link:"#_1-强一致性保证",children:[]},{level:3,title:"2. 最终一致性保证",slug:"_2-最终一致性保证",link:"#_2-最终一致性保证",children:[]},{level:3,title:"3. 读写分离一致性",slug:"_3-读写分离一致性",link:"#_3-读写分离一致性",children:[]}]},{level:2,title:"缓存与数据库的协同优化",slug:"缓存与数据库的协同优化",link:"#缓存与数据库的协同优化",children:[{level:3,title:"1. 缓存预热策略",slug:"_1-缓存预热策略",link:"#_1-缓存预热策略",children:[]},{level:3,title:"2. 缓存更新策略",slug:"_2-缓存更新策略",link:"#_2-缓存更新策略",children:[]},{level:3,title:"3. 缓存失效策略",slug:"_3-缓存失效策略",link:"#_3-缓存失效策略",children:[]}]},{level:2,title:"监控与故障处理",slug:"监控与故障处理",link:"#监控与故障处理",children:[{level:3,title:"1. 缓存命中率监控",slug:"_1-缓存命中率监控",link:"#_1-缓存命中率监控",children:[]},{level:3,title:"2. 故障降级处理",slug:"_2-故障降级处理",link:"#_2-故障降级处理",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 缓存键设计规范",slug:"_1-缓存键设计规范",link:"#_1-缓存键设计规范",children:[]},{level:3,title:"2. 缓存数据结构优化",slug:"_2-缓存数据结构优化",link:"#_2-缓存数据结构优化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-2-4_Cache_And_Database_Relationship.html",pathLocale:"/",extraFields:[]},{title:"常见分布式缓存选型概述：主流缓存技术对比与选择指南",headers:[{level:2,title:"主流分布式缓存技术概览",slug:"主流分布式缓存技术概览",link:"#主流分布式缓存技术概览",children:[{level:3,title:"Memcached：轻量级高速缓存",slug:"memcached-轻量级高速缓存",link:"#memcached-轻量级高速缓存",children:[]},{level:3,title:"Redis：全能型缓存数据库",slug:"redis-全能型缓存数据库",link:"#redis-全能型缓存数据库",children:[]},{level:3,title:"Tair/Couchbase/Aerospike 简介",slug:"tair-couchbase-aerospike-简介",link:"#tair-couchbase-aerospike-简介",children:[]}]},{level:2,title:"缓存技术选型的关键因素",slug:"缓存技术选型的关键因素",link:"#缓存技术选型的关键因素",children:[]}],path:"/posts/cache/1-3-0_Common_Distributed_Cache_Selection_Overview.html",pathLocale:"/",extraFields:[]},{title:"Memcached：轻量级高速缓存的技术深度解析",headers:[{level:2,title:"Memcached概述",slug:"memcached概述",link:"#memcached概述",children:[{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]}]},{level:2,title:"Memcached架构原理",slug:"memcached架构原理",link:"#memcached架构原理",children:[{level:3,title:"1. 系统架构",slug:"_1-系统架构",link:"#_1-系统架构",children:[]},{level:3,title:"2. 内存管理机制",slug:"_2-内存管理机制",link:"#_2-内存管理机制",children:[]},{level:3,title:"3. 数据存储结构",slug:"_3-数据存储结构",link:"#_3-数据存储结构",children:[]}]},{level:2,title:"Memcached核心功能详解",slug:"memcached核心功能详解",link:"#memcached核心功能详解",children:[{level:3,title:"1. 基本操作",slug:"_1-基本操作",link:"#_1-基本操作",children:[]},{level:3,title:"2. 高级特性",slug:"_2-高级特性",link:"#_2-高级特性",children:[]}]},{level:2,title:"Memcached部署与配置",slug:"memcached部署与配置",link:"#memcached部署与配置",children:[{level:3,title:"1. 单机部署",slug:"_1-单机部署",link:"#_1-单机部署",children:[]},{level:3,title:"2. 集群部署",slug:"_2-集群部署",link:"#_2-集群部署",children:[]},{level:3,title:"3. 性能调优配置",slug:"_3-性能调优配置",link:"#_3-性能调优配置",children:[]}]},{level:2,title:"Memcached在实际应用中的使用场景",slug:"memcached在实际应用中的使用场景",link:"#memcached在实际应用中的使用场景",children:[{level:3,title:"1. Web应用缓存",slug:"_1-web应用缓存",link:"#_1-web应用缓存",children:[]},{level:3,title:"2. 数据库查询结果缓存",slug:"_2-数据库查询结果缓存",link:"#_2-数据库查询结果缓存",children:[]},{level:3,title:"3. 会话存储",slug:"_3-会话存储",link:"#_3-会话存储",children:[]}]},{level:2,title:"Memcached最佳实践",slug:"memcached最佳实践",link:"#memcached最佳实践",children:[{level:3,title:"1. 缓存键设计",slug:"_1-缓存键设计",link:"#_1-缓存键设计",children:[]},{level:3,title:"2. 内存管理优化",slug:"_2-内存管理优化",link:"#_2-内存管理优化",children:[]},{level:3,title:"3. 故障处理与降级",slug:"_3-故障处理与降级",link:"#_3-故障处理与降级",children:[]}]},{level:2,title:"Memcached与其他缓存技术的对比",slug:"memcached与其他缓存技术的对比",link:"#memcached与其他缓存技术的对比",children:[{level:3,title:"1. 与Redis对比",slug:"_1-与redis对比",link:"#_1-与redis对比",children:[]},{level:3,title:"2. 适用场景选择",slug:"_2-适用场景选择",link:"#_2-适用场景选择",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-3-1_Memcached_Lightweight_High_Speed_Cache.html",pathLocale:"/",extraFields:[]},{title:"Redis：全能型缓存数据库的深度解析与最佳实践",headers:[{level:2,title:"Redis概述",slug:"redis概述",link:"#redis概述",children:[{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]}]},{level:2,title:"Redis核心数据结构详解",slug:"redis核心数据结构详解",link:"#redis核心数据结构详解",children:[{level:3,title:"1. 字符串（Strings）",slug:"_1-字符串-strings",link:"#_1-字符串-strings",children:[]},{level:3,title:"2. 哈希（Hashes）",slug:"_2-哈希-hashes",link:"#_2-哈希-hashes",children:[]},{level:3,title:"3. 列表（Lists）",slug:"_3-列表-lists",link:"#_3-列表-lists",children:[]},{level:3,title:"4. 集合（Sets）",slug:"_4-集合-sets",link:"#_4-集合-sets",children:[]},{level:3,title:"5. 有序集合（Sorted Sets）",slug:"_5-有序集合-sorted-sets",link:"#_5-有序集合-sorted-sets",children:[]}]},{level:2,title:"Redis高级功能",slug:"redis高级功能",link:"#redis高级功能",children:[{level:3,title:"1. 持久化机制",slug:"_1-持久化机制",link:"#_1-持久化机制",children:[]},{level:3,title:"2. 事务支持",slug:"_2-事务支持",link:"#_2-事务支持",children:[]},{level:3,title:"3. 发布订阅",slug:"_3-发布订阅",link:"#_3-发布订阅",children:[]},{level:3,title:"4. Lua脚本",slug:"_4-lua脚本",link:"#_4-lua脚本",children:[]}]},{level:2,title:"Redis部署与配置",slug:"redis部署与配置",link:"#redis部署与配置",children:[{level:3,title:"1. 单机部署",slug:"_1-单机部署",link:"#_1-单机部署",children:[]},{level:3,title:"2. 主从复制配置",slug:"_2-主从复制配置",link:"#_2-主从复制配置",children:[]},{level:3,title:"3. 哨兵模式配置",slug:"_3-哨兵模式配置",link:"#_3-哨兵模式配置",children:[]},{level:3,title:"4. 集群模式配置",slug:"_4-集群模式配置",link:"#_4-集群模式配置",children:[]}]},{level:2,title:"Redis在实际应用中的使用场景",slug:"redis在实际应用中的使用场景",link:"#redis在实际应用中的使用场景",children:[{level:3,title:"1. 缓存系统",slug:"_1-缓存系统",link:"#_1-缓存系统",children:[]},{level:3,title:"2. 会话存储",slug:"_2-会话存储",link:"#_2-会话存储",children:[]},{level:3,title:"3. 分布式锁",slug:"_3-分布式锁",link:"#_3-分布式锁",children:[]},{level:3,title:"4. 计数器和限流",slug:"_4-计数器和限流",link:"#_4-计数器和限流",children:[]}]},{level:2,title:"Redis最佳实践",slug:"redis最佳实践",link:"#redis最佳实践",children:[{level:3,title:"1. 内存优化",slug:"_1-内存优化",link:"#_1-内存优化",children:[]},{level:3,title:"2. 性能监控",slug:"_2-性能监控",link:"#_2-性能监控",children:[]},{level:3,title:"3. 故障处理",slug:"_3-故障处理",link:"#_3-故障处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-3-2_Redis_All_Powerful_Cache_Database.html",pathLocale:"/",extraFields:[]},{title:"Tair/Couchbase/Aerospike简介：企业级分布式缓存解决方案",headers:[{level:2,title:"Tair：阿里巴巴的分布式缓存系统",slug:"tair-阿里巴巴的分布式缓存系统",link:"#tair-阿里巴巴的分布式缓存系统",children:[{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]},{level:3,title:"架构设计",slug:"架构设计",link:"#架构设计",children:[]},{level:3,title:"核心组件",slug:"核心组件",link:"#核心组件",children:[]},{level:3,title:"Tair使用示例",slug:"tair使用示例",link:"#tair使用示例",children:[]},{level:3,title:"Tair高级特性",slug:"tair高级特性",link:"#tair高级特性",children:[]}]},{level:2,title:"Couchbase：面向文档的NoSQL数据库",slug:"couchbase-面向文档的nosql数据库",link:"#couchbase-面向文档的nosql数据库",children:[{level:3,title:"核心特性",slug:"核心特性-1",link:"#核心特性-1",children:[]},{level:3,title:"架构设计",slug:"架构设计-1",link:"#架构设计-1",children:[]},{level:3,title:"Couchbase核心概念",slug:"couchbase核心概念",link:"#couchbase核心概念",children:[]},{level:3,title:"Couchbase使用示例",slug:"couchbase使用示例",link:"#couchbase使用示例",children:[]},{level:3,title:"Couchbase高级特性",slug:"couchbase高级特性",link:"#couchbase高级特性",children:[]}]},{level:2,title:"Aerospike：专为闪存优化的NoSQL数据库",slug:"aerospike-专为闪存优化的nosql数据库",link:"#aerospike-专为闪存优化的nosql数据库",children:[{level:3,title:"核心特性",slug:"核心特性-2",link:"#核心特性-2",children:[]},{level:3,title:"架构设计",slug:"架构设计-2",link:"#架构设计-2",children:[]},{level:3,title:"Aerospike核心概念",slug:"aerospike核心概念",link:"#aerospike核心概念",children:[]},{level:3,title:"Aerospike使用示例",slug:"aerospike使用示例",link:"#aerospike使用示例",children:[]},{level:3,title:"Aerospike高级特性",slug:"aerospike高级特性",link:"#aerospike高级特性",children:[]}]},{level:2,title:"三种技术对比分析",slug:"三种技术对比分析",link:"#三种技术对比分析",children:[{level:3,title:"功能特性对比",slug:"功能特性对比",link:"#功能特性对比",children:[]},{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-3-3_Tair_Couchbase_Aerospike_Introduction.html",pathLocale:"/",extraFields:[]},{title:"如何进行缓存技术选型：构建最适合业务需求的缓存方案",headers:[{level:2,title:"缓存技术选型的核心原则",slug:"缓存技术选型的核心原则",link:"#缓存技术选型的核心原则",children:[{level:3,title:"1. 业务需求驱动",slug:"_1-业务需求驱动",link:"#_1-业务需求驱动",children:[]},{level:3,title:"2. 性能与成本平衡",slug:"_2-性能与成本平衡",link:"#_2-性能与成本平衡",children:[]},{level:3,title:"3. 可维护性考量",slug:"_3-可维护性考量",link:"#_3-可维护性考量",children:[]},{level:3,title:"4. 可扩展性规划",slug:"_4-可扩展性规划",link:"#_4-可扩展性规划",children:[]}]},{level:2,title:"缓存技术选型评估框架",slug:"缓存技术选型评估框架",link:"#缓存技术选型评估框架",children:[{level:3,title:"1. 功能特性评估",slug:"_1-功能特性评估",link:"#_1-功能特性评估",children:[]},{level:3,title:"2. 性能指标评估",slug:"_2-性能指标评估",link:"#_2-性能指标评估",children:[]},{level:3,title:"3. 可扩展性评估",slug:"_3-可扩展性评估",link:"#_3-可扩展性评估",children:[]},{level:3,title:"4. 运维复杂度评估",slug:"_4-运维复杂度评估",link:"#_4-运维复杂度评估",children:[]}]},{level:2,title:"缓存技术选型决策矩阵",slug:"缓存技术选型决策矩阵",link:"#缓存技术选型决策矩阵",children:[]},{level:2,title:"具体业务场景的选型建议",slug:"具体业务场景的选型建议",link:"#具体业务场景的选型建议",children:[{level:3,title:"1. 电商网站缓存选型",slug:"_1-电商网站缓存选型",link:"#_1-电商网站缓存选型",children:[]},{level:3,title:"2. 社交媒体平台缓存选型",slug:"_2-社交媒体平台缓存选型",link:"#_2-社交媒体平台缓存选型",children:[]},{level:3,title:"3. 实时推荐系统缓存选型",slug:"_3-实时推荐系统缓存选型",link:"#_3-实时推荐系统缓存选型",children:[]}]},{level:2,title:"缓存技术选型实施步骤",slug:"缓存技术选型实施步骤",link:"#缓存技术选型实施步骤",children:[{level:3,title:"1. 需求分析阶段",slug:"_1-需求分析阶段",link:"#_1-需求分析阶段",children:[]},{level:3,title:"2. 技术评估阶段",slug:"_2-技术评估阶段",link:"#_2-技术评估阶段",children:[]},{level:3,title:"3. 原型验证阶段",slug:"_3-原型验证阶段",link:"#_3-原型验证阶段",children:[]},{level:3,title:"4. 决策与实施阶段",slug:"_4-决策与实施阶段",link:"#_4-决策与实施阶段",children:[]}]},{level:2,title:"缓存技术选型最佳实践",slug:"缓存技术选型最佳实践",link:"#缓存技术选型最佳实践",children:[{level:3,title:"1. 渐进式选型",slug:"_1-渐进式选型",link:"#_1-渐进式选型",children:[]},{level:3,title:"2. 多级缓存架构",slug:"_2-多级缓存架构",link:"#_2-多级缓存架构",children:[]},{level:3,title:"3. 混合缓存方案",slug:"_3-混合缓存方案",link:"#_3-混合缓存方案",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-3-4_How_To_Choose_Cache_Technology.html",pathLocale:"/",extraFields:[]},{title:"缓存模式与设计策略概述：掌握正确的缓存使用方式",headers:[{level:2,title:"缓存核心模式详解",slug:"缓存核心模式详解",link:"#缓存核心模式详解",children:[{level:3,title:"Cache Aside（旁路缓存模式）",slug:"cache-aside-旁路缓存模式",link:"#cache-aside-旁路缓存模式",children:[]},{level:3,title:"Read Through/Write Through模式",slug:"read-through-write-through模式",link:"#read-through-write-through模式",children:[]},{level:3,title:"Write Behind/Write Back模式",slug:"write-behind-write-back模式",link:"#write-behind-write-back模式",children:[]}]},{level:2,title:"分布式缓存的读写一致性问题",slug:"分布式缓存的读写一致性问题",link:"#分布式缓存的读写一致性问题",children:[]}],path:"/posts/cache/1-4-0_Cache_Patterns_And_Design_Strategies_Overview.html",pathLocale:"/",extraFields:[]},{title:"缓存模式与设计策略：构建高效缓存系统的核心方法",headers:[{level:2,title:"缓存模式概述",slug:"缓存模式概述",link:"#缓存模式概述",children:[{level:3,title:"缓存模式分类",slug:"缓存模式分类",link:"#缓存模式分类",children:[]}]},{level:2,title:"1. Cache-Aside模式（旁路缓存模式）",slug:"_1-cache-aside模式-旁路缓存模式",link:"#_1-cache-aside模式-旁路缓存模式",children:[{level:3,title:"实现原理",slug:"实现原理",link:"#实现原理",children:[]},{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"2. Read-Through/Write-Through模式",slug:"_2-read-through-write-through模式",link:"#_2-read-through-write-through模式",children:[{level:3,title:"实现原理",slug:"实现原理-1",link:"#实现原理-1",children:[]},{level:3,title:"优点",slug:"优点-1",link:"#优点-1",children:[]},{level:3,title:"缺点",slug:"缺点-1",link:"#缺点-1",children:[]},{level:3,title:"适用场景",slug:"适用场景-1",link:"#适用场景-1",children:[]}]},{level:2,title:"3. Write-Behind/Write-Back模式",slug:"_3-write-behind-write-back模式",link:"#_3-write-behind-write-back模式",children:[{level:3,title:"实现原理",slug:"实现原理-2",link:"#实现原理-2",children:[]},{level:3,title:"优点",slug:"优点-2",link:"#优点-2",children:[]},{level:3,title:"缺点",slug:"缺点-2",link:"#缺点-2",children:[]},{level:3,title:"适用场景",slug:"适用场景-2",link:"#适用场景-2",children:[]}]},{level:2,title:"缓存设计策略",slug:"缓存设计策略",link:"#缓存设计策略",children:[{level:3,title:"1. 缓存键设计策略",slug:"_1-缓存键设计策略",link:"#_1-缓存键设计策略",children:[]},{level:3,title:"2. 缓存过期策略",slug:"_2-缓存过期策略",link:"#_2-缓存过期策略",children:[]},{level:3,title:"3. 缓存更新策略",slug:"_3-缓存更新策略",link:"#_3-缓存更新策略",children:[]},{level:3,title:"4. 缓存失效策略",slug:"_4-缓存失效策略",link:"#_4-缓存失效策略",children:[]}]},{level:2,title:"缓存模式选择指南",slug:"缓存模式选择指南",link:"#缓存模式选择指南",children:[{level:3,title:"根据业务场景选择",slug:"根据业务场景选择",link:"#根据业务场景选择",children:[]},{level:3,title:"根据数据特征选择",slug:"根据数据特征选择",link:"#根据数据特征选择",children:[]}]},{level:2,title:"缓存模式组合使用",slug:"缓存模式组合使用",link:"#缓存模式组合使用",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-4-1_Cache_Patterns_And_Design_Strategies.html",pathLocale:"/",extraFields:[]},{title:"缓存的失效与更新策略：确保数据时效性与一致性的关键",headers:[{level:2,title:"缓存过期时间（TTL）与主动刷新",slug:"缓存过期时间-ttl-与主动刷新",link:"#缓存过期时间-ttl-与主动刷新",children:[{level:3,title:"1. TTL设置策略",slug:"_1-ttl设置策略",link:"#_1-ttl设置策略",children:[]},{level:3,title:"2. 主动刷新机制",slug:"_2-主动刷新机制",link:"#_2-主动刷新机制",children:[]}]},{level:2,title:"定时更新 vs 延迟更新",slug:"定时更新-vs-延迟更新",link:"#定时更新-vs-延迟更新",children:[{level:3,title:"1. 定时更新策略",slug:"_1-定时更新策略",link:"#_1-定时更新策略",children:[]},{level:3,title:"2. 延迟更新策略",slug:"_2-延迟更新策略",link:"#_2-延迟更新策略",children:[]},{level:3,title:"3. 策略对比分析",slug:"_3-策略对比分析",link:"#_3-策略对比分析",children:[]}]},{level:2,title:"热点数据与长尾数据的处理",slug:"热点数据与长尾数据的处理",link:"#热点数据与长尾数据的处理",children:[{level:3,title:"1. 热点数据处理策略",slug:"_1-热点数据处理策略",link:"#_1-热点数据处理策略",children:[]},{level:3,title:"2. 长尾数据处理策略",slug:"_2-长尾数据处理策略",link:"#_2-长尾数据处理策略",children:[]},{level:3,title:"3. 混合处理策略",slug:"_3-混合处理策略",link:"#_3-混合处理策略",children:[]}]},{level:2,title:"缓存更新的正确姿势",slug:"缓存更新的正确姿势",link:"#缓存更新的正确姿势",children:[{level:3,title:"1. 更新时机选择",slug:"_1-更新时机选择",link:"#_1-更新时机选择",children:[]},{level:3,title:"2. 更新一致性保证",slug:"_2-更新一致性保证",link:"#_2-更新一致性保证",children:[]},{level:3,title:"3. 批量更新优化",slug:"_3-批量更新优化",link:"#_3-批量更新优化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-4-2_Cache_Expiration_And_Update_Strategies.html",pathLocale:"/",extraFields:[]},{title:"缓存与数据库一致性：构建可靠数据访问层的关键挑战",headers:[{level:2,title:"强一致性 vs 最终一致性",slug:"强一致性-vs-最终一致性",link:"#强一致性-vs-最终一致性",children:[{level:3,title:"1. 强一致性",slug:"_1-强一致性",link:"#_1-强一致性",children:[]},{level:3,title:"2. 最终一致性",slug:"_2-最终一致性",link:"#_2-最终一致性",children:[]},{level:3,title:"3. 一致性模型选择指南",slug:"_3-一致性模型选择指南",link:"#_3-一致性模型选择指南",children:[]}]},{level:2,title:"缓存与数据库双写问题",slug:"缓存与数据库双写问题",link:"#缓存与数据库双写问题",children:[{level:3,title:"1. 双写问题分析",slug:"_1-双写问题分析",link:"#_1-双写问题分析",children:[]},{level:3,title:"2. 双写一致性解决方案",slug:"_2-双写一致性解决方案",link:"#_2-双写一致性解决方案",children:[]}]},{level:2,title:"Cache + DB 双写一致性解决方案",slug:"cache-db-双写一致性解决方案",link:"#cache-db-双写一致性解决方案",children:[{level:3,title:"1. 删除缓存策略",slug:"_1-删除缓存策略",link:"#_1-删除缓存策略",children:[]},{level:3,title:"2. 更新缓存策略",slug:"_2-更新缓存策略",link:"#_2-更新缓存策略",children:[]},{level:3,title:"3. 消息队列解决方案",slug:"_3-消息队列解决方案",link:"#_3-消息队列解决方案",children:[]},{level:3,title:"4. 分布式事务解决方案",slug:"_4-分布式事务解决方案",link:"#_4-分布式事务解决方案",children:[]}]},{level:2,title:"基于消息队列的最终一致性方案",slug:"基于消息队列的最终一致性方案",link:"#基于消息队列的最终一致性方案",children:[{level:3,title:"1. 基础消息队列方案",slug:"_1-基础消息队列方案",link:"#_1-基础消息队列方案",children:[]},{level:3,title:"2. 可靠消息队列方案",slug:"_2-可靠消息队列方案",link:"#_2-可靠消息队列方案",children:[]},{level:3,title:"3. 事务消息方案",slug:"_3-事务消息方案",link:"#_3-事务消息方案",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-4-3_Cache_And_Database_Consistency.html",pathLocale:"/",extraFields:[]},{title:"Redis基础与核心数据结构概述：掌握高性能缓存的核心技术",headers:[{level:2,title:"Redis核心数据结构详解",slug:"redis核心数据结构详解",link:"#redis核心数据结构详解",children:[{level:3,title:"String（字符串）",slug:"string-字符串",link:"#string-字符串",children:[]},{level:3,title:"List（列表）",slug:"list-列表",link:"#list-列表",children:[]},{level:3,title:"Hash（哈希）",slug:"hash-哈希",link:"#hash-哈希",children:[]},{level:3,title:"Set（集合）",slug:"set-集合",link:"#set-集合",children:[]},{level:3,title:"SortedSet（有序集合）",slug:"sortedset-有序集合",link:"#sortedset-有序集合",children:[]}]},{level:2,title:"常见使用场景",slug:"常见使用场景",link:"#常见使用场景",children:[{level:3,title:"计数器",slug:"计数器",link:"#计数器",children:[]},{level:3,title:"排行榜",slug:"排行榜",link:"#排行榜",children:[]},{level:3,title:"会话存储",slug:"会话存储",link:"#会话存储",children:[]},{level:3,title:"消息队列",slug:"消息队列",link:"#消息队列",children:[]},{level:3,title:"事务与Lua脚本",slug:"事务与lua脚本",link:"#事务与lua脚本",children:[]}]}],path:"/posts/cache/1-5-0_Redis_Basics_And_Core_Data_Structures_Overview.html",pathLocale:"/",extraFields:[]},{title:"Redis基础与核心数据结构：构建高性能应用的基石",headers:[{level:2,title:"Redis概述",slug:"redis概述",link:"#redis概述",children:[{level:3,title:"Redis核心特性",slug:"redis核心特性",link:"#redis核心特性",children:[]}]},{level:2,title:"Redis核心数据结构详解",slug:"redis核心数据结构详解",link:"#redis核心数据结构详解",children:[{level:3,title:"1. String（字符串）",slug:"_1-string-字符串",link:"#_1-string-字符串",children:[]},{level:3,title:"2. Hash（哈希）",slug:"_2-hash-哈希",link:"#_2-hash-哈希",children:[]},{level:3,title:"3. List（列表）",slug:"_3-list-列表",link:"#_3-list-列表",children:[]},{level:3,title:"4. Set（集合）",slug:"_4-set-集合",link:"#_4-set-集合",children:[]},{level:3,title:"5. SortedSet（有序集合）",slug:"_5-sortedset-有序集合",link:"#_5-sortedset-有序集合",children:[]}]},{level:2,title:"Redis高级特性",slug:"redis高级特性",link:"#redis高级特性",children:[{level:3,title:"1. 事务支持",slug:"_1-事务支持",link:"#_1-事务支持",children:[]},{level:3,title:"2. Lua脚本",slug:"_2-lua脚本",link:"#_2-lua脚本",children:[]},{level:3,title:"3. 发布订阅",slug:"_3-发布订阅",link:"#_3-发布订阅",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-5-1_Redis_Basics_And_Core_Data_Structures.html",pathLocale:"/",extraFields:[]},{title:"Redis高级特性与扩展：解锁更多可能性的钥匙",headers:[{level:2,title:"Redis持久化机制",slug:"redis持久化机制",link:"#redis持久化机制",children:[{level:3,title:"1. RDB持久化",slug:"_1-rdb持久化",link:"#_1-rdb持久化",children:[]},{level:3,title:"2. AOF持久化",slug:"_2-aof持久化",link:"#_2-aof持久化",children:[]},{level:3,title:"3. 持久化策略对比",slug:"_3-持久化策略对比",link:"#_3-持久化策略对比",children:[]}]},{level:2,title:"Redis发布订阅与Stream",slug:"redis发布订阅与stream",link:"#redis发布订阅与stream",children:[{level:3,title:"1. 发布订阅模式",slug:"_1-发布订阅模式",link:"#_1-发布订阅模式",children:[]},{level:3,title:"2. Stream数据结构",slug:"_2-stream数据结构",link:"#_2-stream数据结构",children:[]}]},{level:2,title:"Redis模块扩展",slug:"redis模块扩展",link:"#redis模块扩展",children:[{level:3,title:"1. RedisBloom（布隆过滤器）",slug:"_1-redisbloom-布隆过滤器",link:"#_1-redisbloom-布隆过滤器",children:[]},{level:3,title:"2. RedisJSON",slug:"_2-redisjson",link:"#_2-redisjson",children:[]},{level:3,title:"3. RediSearch",slug:"_3-redisearch",link:"#_3-redisearch",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-5-2_Redis_Advanced_Features_And_Extensions.html",pathLocale:"/",extraFields:[]},{title:"Redis Cluster原理与应用：构建高可用分布式缓存系统",headers:[{level:2,title:"Redis Cluster概述",slug:"redis-cluster概述",link:"#redis-cluster概述",children:[]},{level:2,title:"Redis Cluster核心原理",slug:"redis-cluster核心原理",link:"#redis-cluster核心原理",children:[{level:3,title:"1. 哈希槽机制",slug:"_1-哈希槽机制",link:"#_1-哈希槽机制",children:[]},{level:3,title:"2. 节点间通信",slug:"_2-节点间通信",link:"#_2-节点间通信",children:[]},{level:3,title:"3. 故障检测与转移",slug:"_3-故障检测与转移",link:"#_3-故障检测与转移",children:[]}]},{level:2,title:"Redis Cluster架构设计",slug:"redis-cluster架构设计",link:"#redis-cluster架构设计",children:[{level:3,title:"1. 集群拓扑结构",slug:"_1-集群拓扑结构",link:"#_1-集群拓扑结构",children:[]},{level:3,title:"2. 数据分布与复制",slug:"_2-数据分布与复制",link:"#_2-数据分布与复制",children:[]}]},{level:2,title:"Redis Cluster部署与配置",slug:"redis-cluster部署与配置",link:"#redis-cluster部署与配置",children:[{level:3,title:"1. 集群部署",slug:"_1-集群部署",link:"#_1-集群部署",children:[]},{level:3,title:"2. Java客户端配置",slug:"_2-java客户端配置",link:"#_2-java客户端配置",children:[]}]},{level:2,title:"Redis Cluster实际应用",slug:"redis-cluster实际应用",link:"#redis-cluster实际应用",children:[{level:3,title:"1. 会话存储",slug:"_1-会话存储",link:"#_1-会话存储",children:[]},{level:3,title:"2. 缓存系统",slug:"_2-缓存系统",link:"#_2-缓存系统",children:[]},{level:3,title:"3. 分布式锁",slug:"_3-分布式锁",link:"#_3-分布式锁",children:[]},{level:3,title:"4. 计数器系统",slug:"_4-计数器系统",link:"#_4-计数器系统",children:[]}]},{level:2,title:"Redis Cluster监控与运维",slug:"redis-cluster监控与运维",link:"#redis-cluster监控与运维",children:[{level:3,title:"1. 集群监控",slug:"_1-集群监控",link:"#_1-集群监控",children:[]},{level:3,title:"2. 集群维护",slug:"_2-集群维护",link:"#_2-集群维护",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-5-3_Redis_Cluster_Principles_And_Applications.html",pathLocale:"/",extraFields:[]},{title:"Memcached实战概述：轻量级高速缓存的实践指南",headers:[{level:2,title:"Memcached架构与工作原理",slug:"memcached架构与工作原理",link:"#memcached架构与工作原理",children:[]},{level:2,title:"内存管理与LRU淘汰策略",slug:"内存管理与lru淘汰策略",link:"#内存管理与lru淘汰策略",children:[]},{level:2,title:"与Redis的对比与结合使用",slug:"与redis的对比与结合使用",link:"#与redis的对比与结合使用",children:[]}],path:"/posts/cache/1-6-0_Memcached_In_Action_Overview.html",pathLocale:"/",extraFields:[]},{title:"Memcached架构与工作原理：深入理解高性能缓存系统的核心机制",headers:[{level:2,title:"Memcached概述",slug:"memcached概述",link:"#memcached概述",children:[{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]}]},{level:2,title:"Memcached系统架构",slug:"memcached系统架构",link:"#memcached系统架构",children:[{level:3,title:"1. 整体架构",slug:"_1-整体架构",link:"#_1-整体架构",children:[]},{level:3,title:"2. 服务器端架构",slug:"_2-服务器端架构",link:"#_2-服务器端架构",children:[]},{level:3,title:"3. 客户端架构",slug:"_3-客户端架构",link:"#_3-客户端架构",children:[]}]},{level:2,title:"Memcached工作流程",slug:"memcached工作流程",link:"#memcached工作流程",children:[{level:3,title:"1. 数据存储流程",slug:"_1-数据存储流程",link:"#_1-数据存储流程",children:[]},{level:3,title:"2. 数据获取流程",slug:"_2-数据获取流程",link:"#_2-数据获取流程",children:[]}]},{level:2,title:"Memcached性能优化机制",slug:"memcached性能优化机制",link:"#memcached性能优化机制",children:[{level:3,title:"1. 事件驱动架构",slug:"_1-事件驱动架构",link:"#_1-事件驱动架构",children:[]},{level:3,title:"2. 内存预分配",slug:"_2-内存预分配",link:"#_2-内存预分配",children:[]}]},{level:2,title:"Memcached协议详解",slug:"memcached协议详解",link:"#memcached协议详解",children:[{level:3,title:"1. 存储命令",slug:"_1-存储命令",link:"#_1-存储命令",children:[]},{level:3,title:"2. 检索命令",slug:"_2-检索命令",link:"#_2-检索命令",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-6-1_Memcached_Architecture_And_Working_Principles.html",pathLocale:"/",extraFields:[]},{title:"Memcached内存管理与LRU淘汰策略：高性能缓存的核心机制",headers:[{level:2,title:"Memcached内存管理概述",slug:"memcached内存管理概述",link:"#memcached内存管理概述",children:[{level:3,title:"内存管理核心理念",slug:"内存管理核心理念",link:"#内存管理核心理念",children:[]}]},{level:2,title:"Slab Allocation机制详解",slug:"slab-allocation机制详解",link:"#slab-allocation机制详解",children:[{level:3,title:"1. Slab结构设计",slug:"_1-slab结构设计",link:"#_1-slab结构设计",children:[]},{level:3,title:"2. 内存分配优化",slug:"_2-内存分配优化",link:"#_2-内存分配优化",children:[]}]},{level:2,title:"LRU淘汰策略详解",slug:"lru淘汰策略详解",link:"#lru淘汰策略详解",children:[{level:3,title:"1. LRU算法实现",slug:"_1-lru算法实现",link:"#_1-lru算法实现",children:[]},{level:3,title:"2. 淘汰策略优化",slug:"_2-淘汰策略优化",link:"#_2-淘汰策略优化",children:[]}]},{level:2,title:"内存管理与淘汰的实际应用",slug:"内存管理与淘汰的实际应用",link:"#内存管理与淘汰的实际应用",children:[{level:3,title:"1. 内存监控与调优",slug:"_1-内存监控与调优",link:"#_1-内存监控与调优",children:[]},{level:3,title:"2. 淘汰策略调优",slug:"_2-淘汰策略调优",link:"#_2-淘汰策略调优",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-6-2_Memcached_Memory_Management_And_LRU_Eviction_Strategy.html",pathLocale:"/",extraFields:[]},{title:"Memcached与Redis对比与结合使用：构建最优缓存架构的策略选择",headers:[{level:2,title:"Memcached与Redis核心特性对比",slug:"memcached与redis核心特性对比",link:"#memcached与redis核心特性对比",children:[{level:3,title:"1. 基础特性对比",slug:"_1-基础特性对比",link:"#_1-基础特性对比",children:[]},{level:3,title:"2. 使用场景对比",slug:"_2-使用场景对比",link:"#_2-使用场景对比",children:[]}]},{level:2,title:"Memcached与Redis性能对比",slug:"memcached与redis性能对比",link:"#memcached与redis性能对比",children:[{level:3,title:"1. 基准测试对比",slug:"_1-基准测试对比",link:"#_1-基准测试对比",children:[]},{level:3,title:"2. 内存使用效率对比",slug:"_2-内存使用效率对比",link:"#_2-内存使用效率对比",children:[]}]},{level:2,title:"Memcached与Redis结合使用策略",slug:"memcached与redis结合使用策略",link:"#memcached与redis结合使用策略",children:[{level:3,title:"1. 分层缓存架构",slug:"_1-分层缓存架构",link:"#_1-分层缓存架构",children:[]},{level:3,title:"2. 功能分工策略",slug:"_2-功能分工策略",link:"#_2-功能分工策略",children:[]},{level:3,title:"3. 混合缓存管理",slug:"_3-混合缓存管理",link:"#_3-混合缓存管理",children:[]}]},{level:2,title:"最佳实践与建议",slug:"最佳实践与建议",link:"#最佳实践与建议",children:[{level:3,title:"1. 技术选型建议",slug:"_1-技术选型建议",link:"#_1-技术选型建议",children:[]},{level:3,title:"2. 运维建议",slug:"_2-运维建议",link:"#_2-运维建议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-6-3_Memcached_And_Redis_Comparison_And_Combined_Use.html",pathLocale:"/",extraFields:[]},{title:"Redis基础与核心数据结构概述：构建高效缓存系统的基石",headers:[{level:2,title:"Redis核心数据结构概览",slug:"redis核心数据结构概览",link:"#redis核心数据结构概览",children:[]},{level:2,title:"典型应用场景",slug:"典型应用场景",link:"#典型应用场景",children:[]},{level:2,title:"事务与Lua脚本",slug:"事务与lua脚本",link:"#事务与lua脚本",children:[]}],path:"/posts/cache/1-7-0_Redis_Basics_And_Core_Data_Structures_Overview.html",pathLocale:"/",extraFields:[]},{title:"Redis核心数据结构深度解析：从实现原理到最佳实践",headers:[{level:2,title:"String：最基础也最强大的数据结构",slug:"string-最基础也最强大的数据结构",link:"#string-最基础也最强大的数据结构",children:[{level:3,title:"SDS结构的优势",slug:"sds结构的优势",link:"#sds结构的优势",children:[]},{level:3,title:"String的典型应用场景",slug:"string的典型应用场景",link:"#string的典型应用场景",children:[]}]},{level:2,title:"List：灵活的双向链表结构",slug:"list-灵活的双向链表结构",link:"#list-灵活的双向链表结构",children:[{level:3,title:"List的底层实现",slug:"list的底层实现",link:"#list的底层实现",children:[]},{level:3,title:"List的典型应用场景",slug:"list的典型应用场景",link:"#list的典型应用场景",children:[]}]},{level:2,title:"Hash：高效的对象存储结构",slug:"hash-高效的对象存储结构",link:"#hash-高效的对象存储结构",children:[{level:3,title:"Hash的底层实现",slug:"hash的底层实现",link:"#hash的底层实现",children:[]},{level:3,title:"Hash的典型应用场景",slug:"hash的典型应用场景",link:"#hash的典型应用场景",children:[]}]},{level:2,title:"Set：无序唯一集合",slug:"set-无序唯一集合",link:"#set-无序唯一集合",children:[{level:3,title:"Set的底层实现",slug:"set的底层实现",link:"#set的底层实现",children:[]},{level:3,title:"Set的典型应用场景",slug:"set的典型应用场景",link:"#set的典型应用场景",children:[]}]},{level:2,title:"SortedSet：有序集合的魅力",slug:"sortedset-有序集合的魅力",link:"#sortedset-有序集合的魅力",children:[{level:3,title:"SortedSet的底层实现",slug:"sortedset的底层实现",link:"#sortedset的底层实现",children:[]},{level:3,title:"SortedSet的典型应用场景",slug:"sortedset的典型应用场景",link:"#sortedset的典型应用场景",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-7-1_Redis_Core_Data_Structures_In_Depth.html",pathLocale:"/",extraFields:[]},{title:"Redis事务与Lua脚本：保障数据一致性的关键技术",headers:[{level:2,title:"Redis事务机制详解",slug:"redis事务机制详解",link:"#redis事务机制详解",children:[{level:3,title:"事务的基本使用",slug:"事务的基本使用",link:"#事务的基本使用",children:[]},{level:3,title:"事务的工作原理",slug:"事务的工作原理",link:"#事务的工作原理",children:[]},{level:3,title:"事务的特性",slug:"事务的特性",link:"#事务的特性",children:[]},{level:3,title:"使用WATCH实现乐观锁",slug:"使用watch实现乐观锁",link:"#使用watch实现乐观锁",children:[]},{level:3,title:"事务的局限性",slug:"事务的局限性",link:"#事务的局限性",children:[]}]},{level:2,title:"Lua脚本：服务端原子操作的强大工具",slug:"lua脚本-服务端原子操作的强大工具",link:"#lua脚本-服务端原子操作的强大工具",children:[{level:3,title:"Lua脚本的优势",slug:"lua脚本的优势",link:"#lua脚本的优势",children:[]},{level:3,title:"Lua脚本的基本使用",slug:"lua脚本的基本使用",link:"#lua脚本的基本使用",children:[]},{level:3,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[]}]},{level:2,title:"事务与Lua脚本的选择建议",slug:"事务与lua脚本的选择建议",link:"#事务与lua脚本的选择建议",children:[{level:3,title:"选择事务的场景",slug:"选择事务的场景",link:"#选择事务的场景",children:[]},{level:3,title:"选择Lua脚本的场景",slug:"选择lua脚本的场景",link:"#选择lua脚本的场景",children:[]}]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-7-2_Redis_Transactions_And_Lua_Scripts.html",pathLocale:"/",extraFields:[]},{title:"Redis高级特性与扩展概述：解锁更多可能性的钥匙",headers:[{level:2,title:"Redis持久化机制",slug:"redis持久化机制",link:"#redis持久化机制",children:[]},{level:2,title:"Redis发布订阅与Stream",slug:"redis发布订阅与stream",link:"#redis发布订阅与stream",children:[]},{level:2,title:"Redis模块扩展",slug:"redis模块扩展",link:"#redis模块扩展",children:[]},{level:2,title:"Redis Cluster原理与应用",slug:"redis-cluster原理与应用",link:"#redis-cluster原理与应用",children:[]}],path:"/posts/cache/1-8-0_Redis_Advanced_Features_And_Extensions_Overview.html",pathLocale:"/",extraFields:[]},{title:"Redis持久化机制详解：保障数据安全的双重保险",headers:[{level:2,title:"RDB持久化机制",slug:"rdb持久化机制",link:"#rdb持久化机制",children:[{level:3,title:"RDB的工作原理",slug:"rdb的工作原理",link:"#rdb的工作原理",children:[]},{level:3,title:"RDB配置参数",slug:"rdb配置参数",link:"#rdb配置参数",children:[]},{level:3,title:"RDB的优缺点",slug:"rdb的优缺点",link:"#rdb的优缺点",children:[]},{level:3,title:"RDB操作示例",slug:"rdb操作示例",link:"#rdb操作示例",children:[]}]},{level:2,title:"AOF持久化机制",slug:"aof持久化机制",link:"#aof持久化机制",children:[{level:3,title:"AOF的工作原理",slug:"aof的工作原理",link:"#aof的工作原理",children:[]},{level:3,title:"AOF配置参数",slug:"aof配置参数",link:"#aof配置参数",children:[]},{level:3,title:"AOF重写机制",slug:"aof重写机制",link:"#aof重写机制",children:[]},{level:3,title:"AOF的优缺点",slug:"aof的优缺点",link:"#aof的优缺点",children:[]},{level:3,title:"AOF操作示例",slug:"aof操作示例",link:"#aof操作示例",children:[]}]},{level:2,title:"持久化策略对比与选择",slug:"持久化策略对比与选择",link:"#持久化策略对比与选择",children:[]},{level:2,title:"混合持久化（Redis 4.0+）",slug:"混合持久化-redis-4-0",link:"#混合持久化-redis-4-0",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-8-1_Redis_Persistence_Mechanisms.html",pathLocale:"/",extraFields:[]},{title:"Redis发布订阅与Stream：构建高效消息传递系统",headers:[{level:2,title:"Redis发布订阅模式",slug:"redis发布订阅模式",link:"#redis发布订阅模式",children:[{level:3,title:"发布订阅的基本使用",slug:"发布订阅的基本使用",link:"#发布订阅的基本使用",children:[]},{level:3,title:"发布订阅的实现原理",slug:"发布订阅的实现原理",link:"#发布订阅的实现原理",children:[]},{level:3,title:"发布订阅的优缺点",slug:"发布订阅的优缺点",link:"#发布订阅的优缺点",children:[]},{level:3,title:"发布订阅实现示例",slug:"发布订阅实现示例",link:"#发布订阅实现示例",children:[]}]},{level:2,title:"Redis Stream数据结构",slug:"redis-stream数据结构",link:"#redis-stream数据结构",children:[{level:3,title:"Stream的基本操作",slug:"stream的基本操作",link:"#stream的基本操作",children:[]},{level:3,title:"Stream的核心特性",slug:"stream的核心特性",link:"#stream的核心特性",children:[]},{level:3,title:"Stream操作示例",slug:"stream操作示例",link:"#stream操作示例",children:[]}]},{level:2,title:"发布订阅与Stream的对比",slug:"发布订阅与stream的对比",link:"#发布订阅与stream的对比",children:[{level:3,title:"适用场景选择",slug:"适用场景选择",link:"#适用场景选择",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"1. 订单处理系统",slug:"_1-订单处理系统",link:"#_1-订单处理系统",children:[]},{level:3,title:"2. 系统监控通知",slug:"_2-系统监控通知",link:"#_2-系统监控通知",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-8-2_Redis_PubSub_And_Stream.html",pathLocale:"/",extraFields:[]},{title:"Redis模块扩展：解锁更多可能性的钥匙",headers:[{level:2,title:"Redis模块系统概述",slug:"redis模块系统概述",link:"#redis模块系统概述",children:[{level:3,title:"模块的基本结构",slug:"模块的基本结构",link:"#模块的基本结构",children:[]},{level:3,title:"模块的加载方式",slug:"模块的加载方式",link:"#模块的加载方式",children:[]}]},{level:2,title:"RedisBloom模块",slug:"redisbloom模块",link:"#redisbloom模块",children:[{level:3,title:"布隆过滤器原理",slug:"布隆过滤器原理",link:"#布隆过滤器原理",children:[]},{level:3,title:"RedisBloom使用示例",slug:"redisbloom使用示例",link:"#redisbloom使用示例",children:[]}]},{level:2,title:"RedisJSON模块",slug:"redisjson模块",link:"#redisjson模块",children:[{level:3,title:"RedisJSON的核心功能",slug:"redisjson的核心功能",link:"#redisjson的核心功能",children:[]},{level:3,title:"RedisJSON使用示例",slug:"redisjson使用示例",link:"#redisjson使用示例",children:[]}]},{level:2,title:"RediSearch模块",slug:"redisearch模块",link:"#redisearch模块",children:[{level:3,title:"RediSearch的核心功能",slug:"redisearch的核心功能",link:"#redisearch的核心功能",children:[]},{level:3,title:"RediSearch使用示例",slug:"redisearch使用示例",link:"#redisearch使用示例",children:[]}]},{level:2,title:"自定义Redis模块开发",slug:"自定义redis模块开发",link:"#自定义redis模块开发",children:[{level:3,title:"模块开发基本步骤",slug:"模块开发基本步骤",link:"#模块开发基本步骤",children:[]},{level:3,title:"简单模块示例",slug:"简单模块示例",link:"#简单模块示例",children:[]}]},{level:2,title:"模块使用最佳实践",slug:"模块使用最佳实践",link:"#模块使用最佳实践",children:[{level:3,title:"1. 模块选择原则",slug:"_1-模块选择原则",link:"#_1-模块选择原则",children:[]},{level:3,title:"2. 模块管理建议",slug:"_2-模块管理建议",link:"#_2-模块管理建议",children:[]},{level:3,title:"3. 性能优化建议",slug:"_3-性能优化建议",link:"#_3-性能优化建议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-8-3_Redis_Modules_Extensions.html",pathLocale:"/",extraFields:[]},{title:"Redis Cluster原理与应用：构建高可用分布式缓存系统",headers:[{level:2,title:"Redis Cluster概述",slug:"redis-cluster概述",link:"#redis-cluster概述",children:[{level:3,title:"Redis Cluster的核心特性",slug:"redis-cluster的核心特性",link:"#redis-cluster的核心特性",children:[]}]},{level:2,title:"Redis Cluster架构设计",slug:"redis-cluster架构设计",link:"#redis-cluster架构设计",children:[{level:3,title:"节点角色",slug:"节点角色",link:"#节点角色",children:[]},{level:3,title:"数据分片机制",slug:"数据分片机制",link:"#数据分片机制",children:[]},{level:3,title:"集群状态管理",slug:"集群状态管理",link:"#集群状态管理",children:[]}]},{level:2,title:"Redis Cluster部署配置",slug:"redis-cluster部署配置",link:"#redis-cluster部署配置",children:[{level:3,title:"集群部署步骤",slug:"集群部署步骤",link:"#集群部署步骤",children:[]},{level:3,title:"集群配置参数",slug:"集群配置参数",link:"#集群配置参数",children:[]}]},{level:2,title:"Redis Cluster客户端交互",slug:"redis-cluster客户端交互",link:"#redis-cluster客户端交互",children:[{level:3,title:"客户端路由",slug:"客户端路由",link:"#客户端路由",children:[]},{level:3,title:"客户端实现示例",slug:"客户端实现示例",link:"#客户端实现示例",children:[]}]},{level:2,title:"Redis Cluster故障处理",slug:"redis-cluster故障处理",link:"#redis-cluster故障处理",children:[{level:3,title:"故障检测机制",slug:"故障检测机制",link:"#故障检测机制",children:[]},{level:3,title:"故障转移过程",slug:"故障转移过程",link:"#故障转移过程",children:[]},{level:3,title:"故障处理示例",slug:"故障处理示例",link:"#故障处理示例",children:[]}]},{level:2,title:"Redis Cluster扩展与维护",slug:"redis-cluster扩展与维护",link:"#redis-cluster扩展与维护",children:[{level:3,title:"节点添加",slug:"节点添加",link:"#节点添加",children:[]},{level:3,title:"节点删除",slug:"节点删除",link:"#节点删除",children:[]},{level:3,title:"集群备份与恢复",slug:"集群备份与恢复",link:"#集群备份与恢复",children:[]}]},{level:2,title:"Redis Cluster性能优化",slug:"redis-cluster性能优化",link:"#redis-cluster性能优化",children:[{level:3,title:"1. 网络优化",slug:"_1-网络优化",link:"#_1-网络优化",children:[]},{level:3,title:"2. 内存优化",slug:"_2-内存优化",link:"#_2-内存优化",children:[]},{level:3,title:"3. 持久化优化",slug:"_3-持久化优化",link:"#_3-持久化优化",children:[]},{level:3,title:"4. 客户端优化",slug:"_4-客户端优化",link:"#_4-客户端优化",children:[]}]},{level:2,title:"Redis Cluster监控与告警",slug:"redis-cluster监控与告警",link:"#redis-cluster监控与告警",children:[{level:3,title:"1. 关键指标监控",slug:"_1-关键指标监控",link:"#_1-关键指标监控",children:[]},{level:3,title:"2. 告警规则设置",slug:"_2-告警规则设置",link:"#_2-告警规则设置",children:[]}]},{level:2,title:"Redis Cluster最佳实践",slug:"redis-cluster最佳实践",link:"#redis-cluster最佳实践",children:[{level:3,title:"1. 部署建议",slug:"_1-部署建议",link:"#_1-部署建议",children:[]},{level:3,title:"2. 配置优化",slug:"_2-配置优化",link:"#_2-配置优化",children:[]},{level:3,title:"3. 运维管理",slug:"_3-运维管理",link:"#_3-运维管理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/cache/1-8-4_Redis_Cluster_Principles_And_Applications.html",pathLocale:"/",extraFields:[]},{title:"Memcached实战概述：轻量级高速缓存的实践指南",headers:[{level:2,title:"Memcached架构与工作原理",slug:"memcached架构与工作原理",link:"#memcached架构与工作原理",children:[]},{level:2,title:"内存管理与LRU淘汰策略",slug:"内存管理与lru淘汰策略",link:"#内存管理与lru淘汰策略",children:[]},{level:2,title:"与Redis的对比与结合使用",slug:"与redis的对比与结合使用",link:"#与redis的对比与结合使用",children:[]}],path:"/posts/cache/1-9-0_Memcached_In_Action_Overview.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"《分布式缓存：从入门到精通》",slug:"《分布式缓存-从入门到精通》",link:"#《分布式缓存-从入门到精通》",children:[{level:3,title:"第一篇：基础篇 —— 认识分布式缓存",slug:"第一篇-基础篇-——-认识分布式缓存",link:"#第一篇-基础篇-——-认识分布式缓存",children:[]},{level:3,title:"第二篇：应用篇 —— 缓存的正确使用方式",slug:"第二篇-应用篇-——-缓存的正确使用方式",link:"#第二篇-应用篇-——-缓存的正确使用方式",children:[]},{level:3,title:"第三篇：实战篇 —— 深入 Redis 与 Memcached",slug:"第三篇-实战篇-——-深入-redis-与-memcached",link:"#第三篇-实战篇-——-深入-redis-与-memcached",children:[]},{level:3,title:"第四篇：高阶篇 —— 分布式缓存的挑战与优化",slug:"第四篇-高阶篇-——-分布式缓存的挑战与优化",link:"#第四篇-高阶篇-——-分布式缓存的挑战与优化",children:[]},{level:3,title:"第五篇：架构篇 —— 缓存在大规模分布式系统中的实践",slug:"第五篇-架构篇-——-缓存在大规模分布式系统中的实践",link:"#第五篇-架构篇-——-缓存在大规模分布式系统中的实践",children:[]},{level:3,title:"第六篇：未来篇 —— 缓存的演进与趋势",slug:"第六篇-未来篇-——-缓存的演进与趋势",link:"#第六篇-未来篇-——-缓存的演进与趋势",children:[]}]}],path:"/posts/cache/index-desc.html",pathLocale:"/",extraFields:[]},{title:"为什么需要消息队列？系统间通信的核心技术解析",headers:[{level:2,title:"同步调用 vs 异步调用：系统通信的两种模式",slug:"同步调用-vs-异步调用-系统通信的两种模式",link:"#同步调用-vs-异步调用-系统通信的两种模式",children:[]},{level:2,title:"解耦、异步、削峰填谷：MQ的三大核心价值",slug:"解耦、异步、削峰填谷-mq的三大核心价值",link:"#解耦、异步、削峰填谷-mq的三大核心价值",children:[{level:3,title:"1. 解耦（Decoupling）",slug:"_1-解耦-decoupling",link:"#_1-解耦-decoupling",children:[]},{level:3,title:"2. 异步（Asynchronicity）",slug:"_2-异步-asynchronicity",link:"#_2-异步-asynchronicity",children:[]},{level:3,title:"3. 削峰填谷（Traffic Shaping）",slug:"_3-削峰填谷-traffic-shaping",link:"#_3-削峰填谷-traffic-shaping",children:[]}]},{level:2,title:"MQ的优势与风险",slug:"mq的优势与风险",link:"#mq的优势与风险",children:[{level:3,title:"优势",slug:"优势",link:"#优势",children:[]},{level:3,title:"风险",slug:"风险",link:"#风险",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/1-1-why-message-queues.html",pathLocale:"/",extraFields:[]},{title:"系统间通信方式对比：同步调用 vs 异步调用的深度解析",headers:[{level:2,title:"同步调用的工作原理与特点",slug:"同步调用的工作原理与特点",link:"#同步调用的工作原理与特点",children:[{level:3,title:"同步调用的优势",slug:"同步调用的优势",link:"#同步调用的优势",children:[]},{level:3,title:"同步调用的劣势",slug:"同步调用的劣势",link:"#同步调用的劣势",children:[]}]},{level:2,title:"异步调用的工作原理与特点",slug:"异步调用的工作原理与特点",link:"#异步调用的工作原理与特点",children:[{level:3,title:"异步调用的优势",slug:"异步调用的优势",link:"#异步调用的优势",children:[]},{level:3,title:"异步调用的劣势",slug:"异步调用的劣势",link:"#异步调用的劣势",children:[]}]},{level:2,title:"实际案例对比分析",slug:"实际案例对比分析",link:"#实际案例对比分析",children:[{level:3,title:"同步调用方案",slug:"同步调用方案",link:"#同步调用方案",children:[]},{level:3,title:"异步调用方案",slug:"异步调用方案",link:"#异步调用方案",children:[]}]},{level:2,title:"性能对比分析",slug:"性能对比分析",link:"#性能对比分析",children:[]},{level:2,title:"选择建议",slug:"选择建议",link:"#选择建议",children:[{level:3,title:"适合使用同步调用的场景",slug:"适合使用同步调用的场景",link:"#适合使用同步调用的场景",children:[]},{level:3,title:"适合使用异步调用的场景",slug:"适合使用异步调用的场景",link:"#适合使用异步调用的场景",children:[]}]},{level:2,title:"混合使用策略",slug:"混合使用策略",link:"#混合使用策略",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/1-2-system-communication-comparison.html",pathLocale:"/",extraFields:[]},{title:"MQ的优势与风险：构建可靠分布式系统的双刃剑",headers:[{level:2,title:"MQ的核心优势",slug:"mq的核心优势",link:"#mq的核心优势",children:[{level:3,title:"1. 系统解耦：打破紧耦合的枷锁",slug:"_1-系统解耦-打破紧耦合的枷锁",link:"#_1-系统解耦-打破紧耦合的枷锁",children:[]},{level:3,title:"2. 异步处理：提升系统响应速度",slug:"_2-异步处理-提升系统响应速度",link:"#_2-异步处理-提升系统响应速度",children:[]},{level:3,title:"3. 流量削峰：应对突发请求冲击",slug:"_3-流量削峰-应对突发请求冲击",link:"#_3-流量削峰-应对突发请求冲击",children:[]},{level:3,title:"4. 可靠性保障：确保消息不丢失",slug:"_4-可靠性保障-确保消息不丢失",link:"#_4-可靠性保障-确保消息不丢失",children:[]},{level:3,title:"5. 灵活的通信模式",slug:"_5-灵活的通信模式",link:"#_5-灵活的通信模式",children:[]}]},{level:2,title:"MQ的潜在风险",slug:"mq的潜在风险",link:"#mq的潜在风险",children:[{level:3,title:"1. 系统复杂性增加",slug:"_1-系统复杂性增加",link:"#_1-系统复杂性增加",children:[]},{level:3,title:"2. 数据一致性挑战",slug:"_2-数据一致性挑战",link:"#_2-数据一致性挑战",children:[]},{level:3,title:"3. 运维成本增加",slug:"_3-运维成本增加",link:"#_3-运维成本增加",children:[]},{level:3,title:"4. 延迟问题",slug:"_4-延迟问题",link:"#_4-延迟问题",children:[]},{level:3,title:"5. 消息积压风险",slug:"_5-消息积压风险",link:"#_5-消息积压风险",children:[]}]},{level:2,title:"风险缓解策略",slug:"风险缓解策略",link:"#风险缓解策略",children:[{level:3,title:"1. 合理选择MQ产品",slug:"_1-合理选择mq产品",link:"#_1-合理选择mq产品",children:[]},{level:3,title:"2. 设计容错机制",slug:"_2-设计容错机制",link:"#_2-设计容错机制",children:[]},{level:3,title:"3. 监控和告警",slug:"_3-监控和告警",link:"#_3-监控和告警",children:[]},{level:3,title:"4. 幂等性设计",slug:"_4-幂等性设计",link:"#_4-幂等性设计",children:[]}]},{level:2,title:"成本效益分析",slug:"成本效益分析",link:"#成本效益分析",children:[{level:3,title:"引入MQ的收益",slug:"引入mq的收益",link:"#引入mq的收益",children:[]},{level:3,title:"引入MQ的成本",slug:"引入mq的成本",link:"#引入mq的成本",children:[]}]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[{level:3,title:"1. 渐进式引入",slug:"_1-渐进式引入",link:"#_1-渐进式引入",children:[]},{level:3,title:"2. 合理设计消息模型",slug:"_2-合理设计消息模型",link:"#_2-合理设计消息模型",children:[]},{level:3,title:"3. 建立完善的监控体系",slug:"_3-建立完善的监控体系",link:"#_3-建立完善的监控体系",children:[]},{level:3,title:"4. 制定运维规范",slug:"_4-制定运维规范",link:"#_4-制定运维规范",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/1-3-mq-benefits-risks.html",pathLocale:"/",extraFields:[]},{title:"消息队列的基本概念概述：理解现代分布式通信的核心要素",headers:[{level:2,title:"消息队列的核心组成要素",slug:"消息队列的核心组成要素",link:"#消息队列的核心组成要素",children:[{level:3,title:"消息（Message）",slug:"消息-message",link:"#消息-message",children:[]},{level:3,title:"队列（Queue）",slug:"队列-queue",link:"#队列-queue",children:[]},{level:3,title:"主题（Topic）",slug:"主题-topic",link:"#主题-topic",children:[]},{level:3,title:"生产者（Producer）与消费者（Consumer）",slug:"生产者-producer-与消费者-consumer",link:"#生产者-producer-与消费者-consumer",children:[]}]},{level:2,title:"消息传递模型",slug:"消息传递模型",link:"#消息传递模型",children:[{level:3,title:"点对点模型（Point-to-Point）",slug:"点对点模型-point-to-point",link:"#点对点模型-point-to-point",children:[]},{level:3,title:"发布订阅模型（Publish-Subscribe）",slug:"发布订阅模型-publish-subscribe",link:"#发布订阅模型-publish-subscribe",children:[]}]},{level:2,title:"消费模式",slug:"消费模式",link:"#消费模式",children:[{level:3,title:"Push模式（推送模式）",slug:"push模式-推送模式",link:"#push模式-推送模式",children:[]},{level:3,title:"Pull模式（拉取模式）",slug:"pull模式-拉取模式",link:"#pull模式-拉取模式",children:[]}]},{level:2,title:"消息队列的关键特性",slug:"消息队列的关键特性",link:"#消息队列的关键特性",children:[{level:3,title:"可靠性",slug:"可靠性",link:"#可靠性",children:[]},{level:3,title:"顺序性",slug:"顺序性",link:"#顺序性",children:[]},{level:3,title:"扩展性",slug:"扩展性",link:"#扩展性",children:[]},{level:3,title:"容错性",slug:"容错性",link:"#容错性",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[{level:3,title:"电商系统",slug:"电商系统",link:"#电商系统",children:[]},{level:3,title:"日志处理",slug:"日志处理",link:"#日志处理",children:[]},{level:3,title:"实时通信",slug:"实时通信",link:"#实时通信",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/2-1-message-queue-basic-concepts-overview.html",pathLocale:"/",extraFields:[]},{title:"点对点模型与发布订阅模型深度解析：消息队列核心传输模式的内部机制与实践",headers:[{level:2,title:"点对点模型（Point-to-Point）深度解析",slug:"点对点模型-point-to-point-深度解析",link:"#点对点模型-point-to-point-深度解析",children:[{level:3,title:"核心特征与工作原理",slug:"核心特征与工作原理",link:"#核心特征与工作原理",children:[]},{level:3,title:"内部实现机制",slug:"内部实现机制",link:"#内部实现机制",children:[]},{level:3,title:"负载均衡实现",slug:"负载均衡实现",link:"#负载均衡实现",children:[]},{level:3,title:"优势与适用场景",slug:"优势与适用场景",link:"#优势与适用场景",children:[]}]},{level:2,title:"发布订阅模型（Publish-Subscribe）深度解析",slug:"发布订阅模型-publish-subscribe-深度解析",link:"#发布订阅模型-publish-subscribe-深度解析",children:[{level:3,title:"核心特征与工作原理",slug:"核心特征与工作原理-1",link:"#核心特征与工作原理-1",children:[]},{level:3,title:"内部实现机制",slug:"内部实现机制-1",link:"#内部实现机制-1",children:[]},{level:3,title:"消息过滤与路由",slug:"消息过滤与路由",link:"#消息过滤与路由",children:[]},{level:3,title:"优势与适用场景",slug:"优势与适用场景-1",link:"#优势与适用场景-1",children:[]}]},{level:2,title:"模型对比分析",slug:"模型对比分析",link:"#模型对比分析",children:[{level:3,title:"详细对比表",slug:"详细对比表",link:"#详细对比表",children:[]},{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商订单处理系统",slug:"电商订单处理系统",link:"#电商订单处理系统",children:[]},{level:3,title:"日志收集系统",slug:"日志收集系统",link:"#日志收集系统",children:[]}]},{level:2,title:"选择建议与最佳实践",slug:"选择建议与最佳实践",link:"#选择建议与最佳实践",children:[{level:3,title:"选择建议",slug:"选择建议",link:"#选择建议",children:[]},{level:3,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/2-2-point-to-point-vs-publish-subscribe-in-depth.html",pathLocale:"/",extraFields:[]},{title:"Push与Pull消费模式深度解析：消息队列消费机制的内部实现与性能优化",headers:[{level:2,title:"Push模式（推送模式）深度解析",slug:"push模式-推送模式-深度解析",link:"#push模式-推送模式-深度解析",children:[{level:3,title:"工作原理与核心机制",slug:"工作原理与核心机制",link:"#工作原理与核心机制",children:[]},{level:3,title:"内部实现机制",slug:"内部实现机制",link:"#内部实现机制",children:[]},{level:3,title:"高级特性实现",slug:"高级特性实现",link:"#高级特性实现",children:[]},{level:3,title:"优势与适用场景",slug:"优势与适用场景",link:"#优势与适用场景",children:[]}]},{level:2,title:"Pull模式（拉取模式）深度解析",slug:"pull模式-拉取模式-深度解析",link:"#pull模式-拉取模式-深度解析",children:[{level:3,title:"工作原理与核心机制",slug:"工作原理与核心机制-1",link:"#工作原理与核心机制-1",children:[]},{level:3,title:"内部实现机制",slug:"内部实现机制-1",link:"#内部实现机制-1",children:[]},{level:3,title:"高级特性实现",slug:"高级特性实现-1",link:"#高级特性实现-1",children:[]},{level:3,title:"优势与适用场景",slug:"优势与适用场景-1",link:"#优势与适用场景-1",children:[]}]},{level:2,title:"模式对比分析",slug:"模式对比分析",link:"#模式对比分析",children:[{level:3,title:"详细对比表",slug:"详细对比表",link:"#详细对比表",children:[]},{level:3,title:"性能对比测试",slug:"性能对比测试",link:"#性能对比测试",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"实时聊天系统（Push模式）",slug:"实时聊天系统-push模式",link:"#实时聊天系统-push模式",children:[]},{level:3,title:"数据分析系统（Pull模式）",slug:"数据分析系统-pull模式",link:"#数据分析系统-pull模式",children:[]}]},{level:2,title:"混合消费模式",slug:"混合消费模式",link:"#混合消费模式",children:[]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"Push模式优化",slug:"push模式优化",link:"#push模式优化",children:[]},{level:3,title:"Pull模式优化",slug:"pull模式优化",link:"#pull模式优化",children:[]}]},{level:2,title:"选择建议与最佳实践",slug:"选择建议与最佳实践",link:"#选择建议与最佳实践",children:[{level:3,title:"选择建议",slug:"选择建议",link:"#选择建议",children:[]},{level:3,title:"架构设计建议",slug:"架构设计建议",link:"#架构设计建议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/2-3-push-vs-pull-consumption-in-depth.html",pathLocale:"/",extraFields:[]},{title:"消息队列的核心要素概述：构建可靠分布式系统的三大支柱",headers:[{level:2,title:"生产者：消息的源头",slug:"生产者-消息的源头",link:"#生产者-消息的源头",children:[]},{level:2,title:"Broker：消息的中枢",slug:"broker-消息的中枢",link:"#broker-消息的中枢",children:[]},{level:2,title:"消费者：消息的终点",slug:"消费者-消息的终点",link:"#消费者-消息的终点",children:[]},{level:2,title:"消息持久化：可靠性的基石",slug:"消息持久化-可靠性的基石",link:"#消息持久化-可靠性的基石",children:[]},{level:2,title:"消费确认与重试机制：处理保障的双保险",slug:"消费确认与重试机制-处理保障的双保险",link:"#消费确认与重试机制-处理保障的双保险",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/3-1-message-queue-core-elements-overview.html",pathLocale:"/",extraFields:[]},{title:"生产者、Broker、消费者深度解析：消息队列核心组件的内部机制与最佳实践",headers:[{level:2,title:"生产者（Producer）深度解析",slug:"生产者-producer-深度解析",link:"#生产者-producer-深度解析",children:[{level:3,title:"核心职责与设计原则",slug:"核心职责与设计原则",link:"#核心职责与设计原则",children:[]},{level:3,title:"高性能生产者实现",slug:"高性能生产者实现",link:"#高性能生产者实现",children:[]},{level:3,title:"可靠性保障机制",slug:"可靠性保障机制",link:"#可靠性保障机制",children:[]},{level:3,title:"流量控制与背压处理",slug:"流量控制与背压处理",link:"#流量控制与背压处理",children:[]}]},{level:2,title:"Broker（消息代理）深度解析",slug:"broker-消息代理-深度解析",link:"#broker-消息代理-深度解析",children:[{level:3,title:"核心功能模块",slug:"核心功能模块",link:"#核心功能模块",children:[]},{level:3,title:"高性能Broker架构",slug:"高性能broker架构",link:"#高性能broker架构",children:[]},{level:3,title:"存储引擎设计",slug:"存储引擎设计",link:"#存储引擎设计",children:[]}]},{level:2,title:"消费者（Consumer）深度解析",slug:"消费者-consumer-深度解析",link:"#消费者-consumer-深度解析",children:[{level:3,title:"消费模式实现",slug:"消费模式实现",link:"#消费模式实现",children:[]},{level:3,title:"负载均衡与集群消费",slug:"负载均衡与集群消费",link:"#负载均衡与集群消费",children:[]},{level:3,title:"容错与重试机制",slug:"容错与重试机制",link:"#容错与重试机制",children:[]}]},{level:2,title:"组件间协作机制",slug:"组件间协作机制",link:"#组件间协作机制",children:[{level:3,title:"生产者-Broker协作",slug:"生产者-broker协作",link:"#生产者-broker协作",children:[]},{level:3,title:"Broker-消费者协作",slug:"broker-消费者协作",link:"#broker-消费者协作",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/3-2-producers-brokers-consumers-in-depth.html",pathLocale:"/",extraFields:[]},{title:"消息持久化深度解析：确保消息不丢失的关键技术实现与优化策略",headers:[{level:2,title:"消息持久化的重要性",slug:"消息持久化的重要性",link:"#消息持久化的重要性",children:[{level:3,title:"数据可靠性保障",slug:"数据可靠性保障",link:"#数据可靠性保障",children:[]},{level:3,title:"业务连续性保障",slug:"业务连续性保障",link:"#业务连续性保障",children:[]},{level:3,title:"一致性保障",slug:"一致性保障",link:"#一致性保障",children:[]},{level:3,title:"审计追溯支持",slug:"审计追溯支持",link:"#审计追溯支持",children:[]}]},{level:2,title:"持久化存储机制深度解析",slug:"持久化存储机制深度解析",link:"#持久化存储机制深度解析",children:[{level:3,title:"存储介质选择与特性",slug:"存储介质选择与特性",link:"#存储介质选择与特性",children:[]},{level:3,title:"文件存储结构设计",slug:"文件存储结构设计",link:"#文件存储结构设计",children:[]}]},{level:2,title:"刷盘策略详解",slug:"刷盘策略详解",link:"#刷盘策略详解",children:[{level:3,title:"同步刷盘（Sync Flush）",slug:"同步刷盘-sync-flush",link:"#同步刷盘-sync-flush",children:[]},{level:3,title:"异步刷盘（Async Flush）",slug:"异步刷盘-async-flush",link:"#异步刷盘-async-flush",children:[]},{level:3,title:"混合刷盘策略",slug:"混合刷盘策略",link:"#混合刷盘策略",children:[]}]},{level:2,title:"索引机制深度解析",slug:"索引机制深度解析",link:"#索引机制深度解析",children:[]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"零拷贝技术",slug:"零拷贝技术",link:"#零拷贝技术",children:[]},{level:3,title:"内存映射文件",slug:"内存映射文件",link:"#内存映射文件",children:[]},{level:3,title:"预分配和预热",slug:"预分配和预热",link:"#预分配和预热",children:[]}]},{level:2,title:"主流MQ的持久化实现",slug:"主流mq的持久化实现",link:"#主流mq的持久化实现",children:[{level:3,title:"Kafka的持久化设计",slug:"kafka的持久化设计",link:"#kafka的持久化设计",children:[]},{level:3,title:"RocketMQ的持久化设计",slug:"rocketmq的持久化设计",link:"#rocketmq的持久化设计",children:[]}]},{level:2,title:"持久化配置建议",slug:"持久化配置建议",link:"#持久化配置建议",children:[{level:3,title:"可靠性优先场景",slug:"可靠性优先场景",link:"#可靠性优先场景",children:[]},{level:3,title:"性能优先场景",slug:"性能优先场景",link:"#性能优先场景",children:[]}]},{level:2,title:"监控与调优",slug:"监控与调优",link:"#监控与调优",children:[{level:3,title:"关键监控指标",slug:"关键监控指标",link:"#关键监控指标",children:[]},{level:3,title:"性能调优建议",slug:"性能调优建议",link:"#性能调优建议",children:[]}]},{level:2,title:"故障处理与恢复",slug:"故障处理与恢复",link:"#故障处理与恢复",children:[{level:3,title:"数据恢复机制",slug:"数据恢复机制",link:"#数据恢复机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/3-3-message-persistence-in-depth.html",pathLocale:"/",extraFields:[]},{title:"消息可靠性与一致性：构建可信分布式系统的基石",headers:[{level:2,title:"消息传递语义",slug:"消息传递语义",link:"#消息传递语义",children:[{level:3,title:"至多一次（At Most Once）",slug:"至多一次-at-most-once",link:"#至多一次-at-most-once",children:[]},{level:3,title:"至少一次（At Least Once）",slug:"至少一次-at-least-once",link:"#至少一次-at-least-once",children:[]},{level:3,title:"精确一次（Exactly Once）",slug:"精确一次-exactly-once",link:"#精确一次-exactly-once",children:[]}]},{level:2,title:"消息丢失问题",slug:"消息丢失问题",link:"#消息丢失问题",children:[{level:3,title:"生产者端丢失",slug:"生产者端丢失",link:"#生产者端丢失",children:[]},{level:3,title:"Broker端丢失",slug:"broker端丢失",link:"#broker端丢失",children:[]},{level:3,title:"消费者端丢失",slug:"消费者端丢失",link:"#消费者端丢失",children:[]}]},{level:2,title:"消息重复问题",slug:"消息重复问题",link:"#消息重复问题",children:[{level:3,title:"幂等性检查器",slug:"幂等性检查器",link:"#幂等性检查器",children:[]},{level:3,title:"幂等性消费者",slug:"幂等性消费者",link:"#幂等性消费者",children:[]}]},{level:2,title:"消息乱序问题",slug:"消息乱序问题",link:"#消息乱序问题",children:[{level:3,title:"顺序消息生产者",slug:"顺序消息生产者",link:"#顺序消息生产者",children:[]},{level:3,title:"顺序消息消费者",slug:"顺序消息消费者",link:"#顺序消息消费者",children:[]}]},{level:2,title:"幂等性设计",slug:"幂等性设计",link:"#幂等性设计",children:[{level:3,title:"数据库层面幂等性",slug:"数据库层面幂等性",link:"#数据库层面幂等性",children:[]},{level:3,title:"业务逻辑幂等性",slug:"业务逻辑幂等性",link:"#业务逻辑幂等性",children:[]}]},{level:2,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/4-1-message-reliability-consistency.html",pathLocale:"/",extraFields:[]},{title:"至少一次、至多一次、精确一次语义详解：消息传递的三种保证机制",headers:[{level:2,title:"消息传递语义概述",slug:"消息传递语义概述",link:"#消息传递语义概述",children:[{level:3,title:"语义对比表",slug:"语义对比表",link:"#语义对比表",children:[]}]},{level:2,title:"至多一次语义（At Most Once）",slug:"至多一次语义-at-most-once",link:"#至多一次语义-at-most-once",children:[{level:3,title:"实现机制",slug:"实现机制",link:"#实现机制",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析",link:"#优缺点分析",children:[]}]},{level:2,title:"至少一次语义（At Least Once）",slug:"至少一次语义-at-least-once",link:"#至少一次语义-at-least-once",children:[{level:3,title:"实现机制",slug:"实现机制-1",link:"#实现机制-1",children:[]},{level:3,title:"幂等性处理",slug:"幂等性处理",link:"#幂等性处理",children:[]},{level:3,title:"适用场景",slug:"适用场景-1",link:"#适用场景-1",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析-1",link:"#优缺点分析-1",children:[]}]},{level:2,title:"精确一次语义（Exactly Once）",slug:"精确一次语义-exactly-once",link:"#精确一次语义-exactly-once",children:[{level:3,title:"实现机制",slug:"实现机制-2",link:"#实现机制-2",children:[]},{level:3,title:"两阶段提交（2PC）实现",slug:"两阶段提交-2pc-实现",link:"#两阶段提交-2pc-实现",children:[]},{level:3,title:"适用场景",slug:"适用场景-2",link:"#适用场景-2",children:[]},{level:3,title:"优缺点分析",slug:"优缺点分析-2",link:"#优缺点分析-2",children:[]}]},{level:2,title:"语义选择指南",slug:"语义选择指南",link:"#语义选择指南",children:[{level:3,title:"选择标准",slug:"选择标准",link:"#选择标准",children:[]},{level:3,title:"性能与可靠性权衡",slug:"性能与可靠性权衡",link:"#性能与可靠性权衡",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/4-2-delivery-semantics-details.html",pathLocale:"/",extraFields:[]},{title:"消息丢失、重复、乱序问题及解决方案：构建可靠消息队列系统的关键技术",headers:[{level:2,title:"消息丢失问题",slug:"消息丢失问题",link:"#消息丢失问题",children:[{level:3,title:"丢失问题的产生原因",slug:"丢失问题的产生原因",link:"#丢失问题的产生原因",children:[]},{level:3,title:"防丢失解决方案",slug:"防丢失解决方案",link:"#防丢失解决方案",children:[]}]},{level:2,title:"消息重复问题",slug:"消息重复问题",link:"#消息重复问题",children:[{level:3,title:"重复问题的产生原因",slug:"重复问题的产生原因",link:"#重复问题的产生原因",children:[]},{level:3,title:"防重复解决方案",slug:"防重复解决方案",link:"#防重复解决方案",children:[]}]},{level:2,title:"消息乱序问题",slug:"消息乱序问题",link:"#消息乱序问题",children:[{level:3,title:"乱序问题的产生原因",slug:"乱序问题的产生原因",link:"#乱序问题的产生原因",children:[]},{level:3,title:"保序解决方案",slug:"保序解决方案",link:"#保序解决方案",children:[]}]},{level:2,title:"综合解决方案",slug:"综合解决方案",link:"#综合解决方案",children:[{level:3,title:"统一消息处理框架",slug:"统一消息处理框架",link:"#统一消息处理框架",children:[]},{level:3,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 配置建议",slug:"_1-配置建议",link:"#_1-配置建议",children:[]},{level:3,title:"2. 代码规范",slug:"_2-代码规范",link:"#_2-代码规范",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/4-3-message-loss-duplication-ordering.html",pathLocale:"/",extraFields:[]},{title:"幂等性设计详解：构建可靠分布式系统的必备技术",headers:[{level:2,title:"幂等性概念解析",slug:"幂等性概念解析",link:"#幂等性概念解析",children:[{level:3,title:"幂等性的数学定义",slug:"幂等性的数学定义",link:"#幂等性的数学定义",children:[]},{level:3,title:"分布式系统中的幂等性",slug:"分布式系统中的幂等性",link:"#分布式系统中的幂等性",children:[]}]},{level:2,title:"幂等性设计的重要性",slug:"幂等性设计的重要性",link:"#幂等性设计的重要性",children:[{level:3,title:"1. 解决消息重复问题",slug:"_1-解决消息重复问题",link:"#_1-解决消息重复问题",children:[]},{level:3,title:"2. 提高系统可靠性",slug:"_2-提高系统可靠性",link:"#_2-提高系统可靠性",children:[]}]},{level:2,title:"幂等性实现方式",slug:"幂等性实现方式",link:"#幂等性实现方式",children:[{level:3,title:"1. 基于数据库的幂等性",slug:"_1-基于数据库的幂等性",link:"#_1-基于数据库的幂等性",children:[]},{level:3,title:"2. 基于缓存的幂等性",slug:"_2-基于缓存的幂等性",link:"#_2-基于缓存的幂等性",children:[]},{level:3,title:"3. 基于状态机的幂等性",slug:"_3-基于状态机的幂等性",link:"#_3-基于状态机的幂等性",children:[]}]},{level:2,title:"幂等性设计模式",slug:"幂等性设计模式",link:"#幂等性设计模式",children:[{level:3,title:"1. 幂等令牌模式",slug:"_1-幂等令牌模式",link:"#_1-幂等令牌模式",children:[]},{level:3,title:"2. 幂等表模式",slug:"_2-幂等表模式",link:"#_2-幂等表模式",children:[]}]},{level:2,title:"消息队列中的幂等性应用",slug:"消息队列中的幂等性应用",link:"#消息队列中的幂等性应用",children:[{level:3,title:"1. 生产者端幂等性",slug:"_1-生产者端幂等性",link:"#_1-生产者端幂等性",children:[]},{level:3,title:"2. 消费者端幂等性",slug:"_2-消费者端幂等性",link:"#_2-消费者端幂等性",children:[]}]},{level:2,title:"幂等性监控与告警",slug:"幂等性监控与告警",link:"#幂等性监控与告警",children:[]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 幂等性设计原则",slug:"_1-幂等性设计原则",link:"#_1-幂等性设计原则",children:[]},{level:3,title:"2. 代码规范",slug:"_2-代码规范",link:"#_2-代码规范",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/mq/4-4-idempotency-design.html",pathLocale:"/",extraFields:[]},{title:"消息队列：从入门到精通 - 文章索引",headers:[{level:2,title:"第一部分 基础篇：打好地基",slug:"第一部分-基础篇-打好地基",link:"#第一部分-基础篇-打好地基",children:[{level:3,title:"第1章 为什么需要消息队列？",slug:"第1章-为什么需要消息队列",link:"#第1章-为什么需要消息队列",children:[]},{level:3,title:"第2章 消息队列的基本概念",slug:"第2章-消息队列的基本概念",link:"#第2章-消息队列的基本概念",children:[]},{level:3,title:"第3章 消息队列的核心要素",slug:"第3章-消息队列的核心要素",link:"#第3章-消息队列的核心要素",children:[]},{level:3,title:"第4章 消息可靠性与一致性",slug:"第4章-消息可靠性与一致性",link:"#第4章-消息可靠性与一致性",children:[]}]}],path:"/posts/mq/",pathLocale:"/",extraFields:[]},{title:"《消息队列：从入门到精通》目录",headers:[{level:2,title:"第一部分 基础篇：打好地基",slug:"第一部分-基础篇-打好地基",link:"#第一部分-基础篇-打好地基",children:[]},{level:2,title:"第二部分 实战篇：从零实现一个消息队列",slug:"第二部分-实战篇-从零实现一个消息队列",link:"#第二部分-实战篇-从零实现一个消息队列",children:[]},{level:2,title:"第三部分 框架篇：主流 MQ 深度解析",slug:"第三部分-框架篇-主流-mq-深度解析",link:"#第三部分-框架篇-主流-mq-深度解析",children:[]},{level:2,title:"第四部分 高级篇：深入消息队列的核心机制",slug:"第四部分-高级篇-深入消息队列的核心机制",link:"#第四部分-高级篇-深入消息队列的核心机制",children:[]},{level:2,title:"第五部分 实践篇：MQ 在生产环境的落地",slug:"第五部分-实践篇-mq-在生产环境的落地",link:"#第五部分-实践篇-mq-在生产环境的落地",children:[]},{level:2,title:"第六部分 展望篇：未来趋势",slug:"第六部分-展望篇-未来趋势",link:"#第六部分-展望篇-未来趋势",children:[]}],path:"/posts/mq/index-desc.html",pathLocale:"/",extraFields:[]},{title:"单体到微服务的演进",headers:[{level:2,title:"单体架构的特点与局限",slug:"单体架构的特点与局限",link:"#单体架构的特点与局限",children:[{level:3,title:"单体架构的优势",slug:"单体架构的优势",link:"#单体架构的优势",children:[]},{level:3,title:"单体架构的局限性",slug:"单体架构的局限性",link:"#单体架构的局限性",children:[]}]},{level:2,title:"微服务架构的兴起",slug:"微服务架构的兴起",link:"#微服务架构的兴起",children:[{level:3,title:"微服务架构的核心特征",slug:"微服务架构的核心特征",link:"#微服务架构的核心特征",children:[]},{level:3,title:"微服务架构的优势",slug:"微服务架构的优势",link:"#微服务架构的优势",children:[]}]},{level:2,title:"架构演进的驱动力",slug:"架构演进的驱动力",link:"#架构演进的驱动力",children:[{level:3,title:"业务驱动因素",slug:"业务驱动因素",link:"#业务驱动因素",children:[]},{level:3,title:"技术驱动因素",slug:"技术驱动因素",link:"#技术驱动因素",children:[]},{level:3,title:"组织驱动因素",slug:"组织驱动因素",link:"#组织驱动因素",children:[]}]},{level:2,title:"微服务架构面临的挑战",slug:"微服务架构面临的挑战",link:"#微服务架构面临的挑战",children:[{level:3,title:"分布式系统复杂性",slug:"分布式系统复杂性",link:"#分布式系统复杂性",children:[]},{level:3,title:"运维复杂性",slug:"运维复杂性",link:"#运维复杂性",children:[]}]},{level:2,title:"为什么需要服务注册与配置中心",slug:"为什么需要服务注册与配置中心",link:"#为什么需要服务注册与配置中心",children:[{level:3,title:"服务注册中心解决的问题",slug:"服务注册中心解决的问题",link:"#服务注册中心解决的问题",children:[]},{level:3,title:"配置中心解决的问题",slug:"配置中心解决的问题",link:"#配置中心解决的问题",children:[]}]},{level:2,title:"架构演进的最佳实践",slug:"架构演进的最佳实践",link:"#架构演进的最佳实践",children:[{level:3,title:"渐进式演进",slug:"渐进式演进",link:"#渐进式演进",children:[]},{level:3,title:"技术选型考虑",slug:"技术选型考虑",link:"#技术选型考虑",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/1-1-1-evolution-from-monolith-to-microservices.html",pathLocale:"/",extraFields:[]},{title:"服务注册、发现与心跳机制详解",headers:[{level:2,title:"服务注册机制",slug:"服务注册机制",link:"#服务注册机制",children:[{level:3,title:"注册信息的组成",slug:"注册信息的组成",link:"#注册信息的组成",children:[]},{level:3,title:"注册流程实现",slug:"注册流程实现",link:"#注册流程实现",children:[]}]},{level:2,title:"服务发现机制",slug:"服务发现机制",link:"#服务发现机制",children:[{level:3,title:"服务发现实现",slug:"服务发现实现",link:"#服务发现实现",children:[]},{level:3,title:"负载均衡服务发现",slug:"负载均衡服务发现",link:"#负载均衡服务发现",children:[]}]},{level:2,title:"心跳机制",slug:"心跳机制",link:"#心跳机制",children:[{level:3,title:"心跳检测实现",slug:"心跳检测实现",link:"#心跳检测实现",children:[]},{level:3,title:"客户端心跳发送",slug:"客户端心跳发送",link:"#客户端心跳发送",children:[]}]},{level:2,title:"临时节点与永久节点",slug:"临时节点与永久节点",link:"#临时节点与永久节点",children:[{level:3,title:"临时节点特性",slug:"临时节点特性",link:"#临时节点特性",children:[]},{level:3,title:"永久节点特性",slug:"永久节点特性",link:"#永久节点特性",children:[]}]},{level:2,title:"客户端缓存与订阅模型",slug:"客户端缓存与订阅模型",link:"#客户端缓存与订阅模型",children:[{level:3,title:"客户端缓存实现",slug:"客户端缓存实现",link:"#客户端缓存实现",children:[]},{level:3,title:"订阅模型实现",slug:"订阅模型实现",link:"#订阅模型实现",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/1-2-1-service-registration-discovery-and-heartbeat.html",pathLocale:"/",extraFields:[]},{title:"最小可用注册中心",headers:[{level:2,title:"用内存 Map 实现服务注册与发现",slug:"用内存-map-实现服务注册与发现",link:"#用内存-map-实现服务注册与发现",children:[]},{level:2,title:"简单 HTTP API 实现服务查询",slug:"简单-http-api-实现服务查询",link:"#简单-http-api-实现服务查询",children:[]},{level:2,title:"基于心跳的下线机制",slug:"基于心跳的下线机制",link:"#基于心跳的下线机制",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/2-1-minimal-viable-registry.html",pathLocale:"/",extraFields:[]},{title:"配置中心雏形",headers:[{level:2,title:"JSON/YAML 存储与文件分发",slug:"json-yaml-存储与文件分发",link:"#json-yaml-存储与文件分发",children:[]},{level:2,title:"简单的拉取式配置更新",slug:"简单的拉取式配置更新",link:"#简单的拉取式配置更新",children:[]},{level:2,title:"客户端本地缓存",slug:"客户端本地缓存",link:"#客户端本地缓存",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/2-2-config-center-prototype.html",pathLocale:"/",extraFields:[]},{title:"持久化与高可用设计",headers:[{level:2,title:"数据持久化到文件/数据库",slug:"数据持久化到文件-数据库",link:"#数据持久化到文件-数据库",children:[{level:3,title:"文件持久化",slug:"文件持久化",link:"#文件持久化",children:[]},{level:3,title:"数据库持久化",slug:"数据库持久化",link:"#数据库持久化",children:[]}]},{level:2,title:"主从同步与副本机制",slug:"主从同步与副本机制",link:"#主从同步与副本机制",children:[]},{level:2,title:"Leader 选举与容错",slug:"leader-选举与容错",link:"#leader-选举与容错",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/2-3-persistence-and-high-availability-design.html",pathLocale:"/",extraFields:[]},{title:"Zookeeper",headers:[{level:2,title:"数据模型（ZNode）",slug:"数据模型-znode",link:"#数据模型-znode",children:[]},{level:2,title:"临时节点与 Watch 机制",slug:"临时节点与-watch-机制",link:"#临时节点与-watch-机制",children:[{level:3,title:"临时节点",slug:"临时节点",link:"#临时节点",children:[]},{level:3,title:"Watch 机制",slug:"watch-机制",link:"#watch-机制",children:[]}]},{level:2,title:"在 Dubbo 中的应用",slug:"在-dubbo-中的应用",link:"#在-dubbo-中的应用",children:[{level:3,title:"服务注册",slug:"服务注册",link:"#服务注册",children:[]},{level:3,title:"服务发现",slug:"服务发现",link:"#服务发现",children:[]}]},{level:2,title:"优缺点与痛点",slug:"优缺点与痛点",link:"#优缺点与痛点",children:[{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]},{level:3,title:"痛点",slug:"痛点",link:"#痛点",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-1-zookeeper.html",pathLocale:"/",extraFields:[]},{title:"Eureka",headers:[{level:2,title:"Netflix OSS 的设计理念",slug:"netflix-oss-的设计理念",link:"#netflix-oss-的设计理念",children:[{level:3,title:"优先保证可用性",slug:"优先保证可用性",link:"#优先保证可用性",children:[]},{level:3,title:"容错设计",slug:"容错设计",link:"#容错设计",children:[]},{level:3,title:"简单易用",slug:"简单易用",link:"#简单易用",children:[]}]},{level:2,title:"自我保护机制",slug:"自我保护机制",link:"#自我保护机制",children:[{level:3,title:"工作原理",slug:"工作原理",link:"#工作原理",children:[]},{level:3,title:"自我保护的触发条件",slug:"自我保护的触发条件",link:"#自我保护的触发条件",children:[]},{level:3,title:"优缺点",slug:"优缺点",link:"#优缺点",children:[]}]},{level:2,title:"与 Spring Cloud 的深度结合",slug:"与-spring-cloud-的深度结合",link:"#与-spring-cloud-的深度结合",children:[{level:3,title:"服务提供者注册",slug:"服务提供者注册",link:"#服务提供者注册",children:[]},{level:3,title:"服务消费者发现",slug:"服务消费者发现",link:"#服务消费者发现",children:[]},{level:3,title:"负载均衡集成",slug:"负载均衡集成",link:"#负载均衡集成",children:[]}]},{level:2,title:"走向衰落的原因",slug:"走向衰落的原因",link:"#走向衰落的原因",children:[{level:3,title:"技术架构局限",slug:"技术架构局限",link:"#技术架构局限",children:[]},{level:3,title:"社区活跃度下降",slug:"社区活跃度下降",link:"#社区活跃度下降",children:[]},{level:3,title:"新兴组件的竞争",slug:"新兴组件的竞争",link:"#新兴组件的竞争",children:[]},{level:3,title:"云原生趋势",slug:"云原生趋势",link:"#云原生趋势",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-2-eureka.html",pathLocale:"/",extraFields:[]},{title:"Consul",headers:[{level:2,title:"架构与 Gossip 协议",slug:"架构与-gossip-协议",link:"#架构与-gossip-协议",children:[{level:3,title:"Consul架构",slug:"consul架构",link:"#consul架构",children:[]},{level:3,title:"Gossip协议",slug:"gossip协议",link:"#gossip协议",children:[]}]},{level:2,title:"健康检查与 KV 存储",slug:"健康检查与-kv-存储",link:"#健康检查与-kv-存储",children:[{level:3,title:"健康检查",slug:"健康检查",link:"#健康检查",children:[]},{level:3,title:"KV存储",slug:"kv存储",link:"#kv存储",children:[]}]},{level:2,title:"多数据中心支持",slug:"多数据中心支持",link:"#多数据中心支持",children:[{level:3,title:"数据中心架构",slug:"数据中心架构",link:"#数据中心架构",children:[]},{level:3,title:"跨数据中心通信",slug:"跨数据中心通信",link:"#跨数据中心通信",children:[]},{level:3,title:"服务发现跨数据中心",slug:"服务发现跨数据中心",link:"#服务发现跨数据中心",children:[]}]},{level:2,title:"典型应用场景",slug:"典型应用场景",link:"#典型应用场景",children:[{level:3,title:"服务发现",slug:"服务发现",link:"#服务发现",children:[]},{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]},{level:3,title:"分布式锁",slug:"分布式锁",link:"#分布式锁",children:[]},{level:3,title:"Connect服务网格",slug:"connect服务网格",link:"#connect服务网格",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-3-consul.html",pathLocale:"/",extraFields:[]},{title:"Nacos",headers:[{level:2,title:"同时支持注册中心与配置中心",slug:"同时支持注册中心与配置中心",link:"#同时支持注册中心与配置中心",children:[{level:3,title:"服务注册与发现",slug:"服务注册与发现",link:"#服务注册与发现",children:[]},{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]}]},{level:2,title:"数据模型与推送机制",slug:"数据模型与推送机制",link:"#数据模型与推送机制",children:[{level:3,title:"数据模型",slug:"数据模型",link:"#数据模型",children:[]},{level:3,title:"推送机制",slug:"推送机制",link:"#推送机制",children:[]}]},{level:2,title:"与 Spring Cloud Alibaba 的结合",slug:"与-spring-cloud-alibaba-的结合",link:"#与-spring-cloud-alibaba-的结合",children:[{level:3,title:"服务注册与发现集成",slug:"服务注册与发现集成",link:"#服务注册与发现集成",children:[]},{level:3,title:"配置管理集成",slug:"配置管理集成",link:"#配置管理集成",children:[]},{level:3,title:"负载均衡集成",slug:"负载均衡集成",link:"#负载均衡集成",children:[]}]},{level:2,title:"动态配置与灰度发布",slug:"动态配置与灰度发布",link:"#动态配置与灰度发布",children:[{level:3,title:"动态配置",slug:"动态配置",link:"#动态配置",children:[]},{level:3,title:"灰度发布",slug:"灰度发布",link:"#灰度发布",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-4-nacos.html",pathLocale:"/",extraFields:[]},{title:"Apollo配置管理模型（Namespace、Cluster）",headers:[{level:2,title:"Namespace（命名空间）详解",slug:"namespace-命名空间-详解",link:"#namespace-命名空间-详解",children:[{level:3,title:"Namespace的类型",slug:"namespace的类型",link:"#namespace的类型",children:[]},{level:3,title:"Namespace的创建与管理",slug:"namespace的创建与管理",link:"#namespace的创建与管理",children:[]},{level:3,title:"Namespace的使用场景",slug:"namespace的使用场景",link:"#namespace的使用场景",children:[]}]},{level:2,title:"Cluster（集群）详解",slug:"cluster-集群-详解",link:"#cluster-集群-详解",children:[{level:3,title:"Cluster的类型",slug:"cluster的类型",link:"#cluster的类型",children:[]},{level:3,title:"Cluster的配置管理",slug:"cluster的配置管理",link:"#cluster的配置管理",children:[]},{level:3,title:"Cluster的应用场景",slug:"cluster的应用场景",link:"#cluster的应用场景",children:[]}]},{level:2,title:"Namespace与Cluster的组合应用",slug:"namespace与cluster的组合应用",link:"#namespace与cluster的组合应用",children:[{level:3,title:"配置优先级规则",slug:"配置优先级规则",link:"#配置优先级规则",children:[]},{level:3,title:"实际应用示例",slug:"实际应用示例",link:"#实际应用示例",children:[]}]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[{level:3,title:"Namespace设计建议",slug:"namespace设计建议",link:"#namespace设计建议",children:[]},{level:3,title:"Cluster设计建议",slug:"cluster设计建议",link:"#cluster设计建议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-5-1-apollo-namespace-cluster-model.html",pathLocale:"/",extraFields:[]},{title:"Apollo配置发布流程与灰度发布",headers:[{level:2,title:"Apollo配置发布流程详解",slug:"apollo配置发布流程详解",link:"#apollo配置发布流程详解",children:[{level:3,title:"配置发布的核心组件",slug:"配置发布的核心组件",link:"#配置发布的核心组件",children:[]},{level:3,title:"完整发布流程",slug:"完整发布流程",link:"#完整发布流程",children:[]},{level:3,title:"配置草稿管理",slug:"配置草稿管理",link:"#配置草稿管理",children:[]},{level:3,title:"配置审核机制",slug:"配置审核机制",link:"#配置审核机制",children:[]}]},{level:2,title:"Apollo灰度发布机制详解",slug:"apollo灰度发布机制详解",link:"#apollo灰度发布机制详解",children:[{level:3,title:"灰度发布的核心概念",slug:"灰度发布的核心概念",link:"#灰度发布的核心概念",children:[]},{level:3,title:"灰度发布实现机制",slug:"灰度发布实现机制",link:"#灰度发布实现机制",children:[]},{level:3,title:"不同类型的灰度规则",slug:"不同类型的灰度规则",link:"#不同类型的灰度规则",children:[]},{level:3,title:"灰度发布策略管理",slug:"灰度发布策略管理",link:"#灰度发布策略管理",children:[]}]},{level:2,title:"配置发布与灰度的最佳实践",slug:"配置发布与灰度的最佳实践",link:"#配置发布与灰度的最佳实践",children:[{level:3,title:"发布流程最佳实践",slug:"发布流程最佳实践",link:"#发布流程最佳实践",children:[]},{level:3,title:"灰度发布最佳实践",slug:"灰度发布最佳实践",link:"#灰度发布最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-5-2-apollo-config-publishing-and-gray-release.html",pathLocale:"/",extraFields:[]},{title:"Apollo客户端缓存与回滚机制",headers:[{level:2,title:"Apollo客户端缓存机制详解",slug:"apollo客户端缓存机制详解",link:"#apollo客户端缓存机制详解",children:[{level:3,title:"三级缓存架构",slug:"三级缓存架构",link:"#三级缓存架构",children:[]},{level:3,title:"内存缓存实现",slug:"内存缓存实现",link:"#内存缓存实现",children:[]},{level:3,title:"文件缓存实现",slug:"文件缓存实现",link:"#文件缓存实现",children:[]},{level:3,title:"缓存访问策略",slug:"缓存访问策略",link:"#缓存访问策略",children:[]},{level:3,title:"缓存一致性保证",slug:"缓存一致性保证",link:"#缓存一致性保证",children:[]}]},{level:2,title:"Apollo回滚机制详解",slug:"apollo回滚机制详解",link:"#apollo回滚机制详解",children:[{level:3,title:"配置版本管理",slug:"配置版本管理",link:"#配置版本管理",children:[]},{level:3,title:"回滚操作实现",slug:"回滚操作实现",link:"#回滚操作实现",children:[]},{level:3,title:"自动回滚机制",slug:"自动回滚机制",link:"#自动回滚机制",children:[]},{level:3,title:"回滚审计与监控",slug:"回滚审计与监控",link:"#回滚审计与监控",children:[]}]},{level:2,title:"缓存与回滚最佳实践",slug:"缓存与回滚最佳实践",link:"#缓存与回滚最佳实践",children:[{level:3,title:"缓存策略优化",slug:"缓存策略优化",link:"#缓存策略优化",children:[]},{level:3,title:"回滚操作规范",slug:"回滚操作规范",link:"#回滚操作规范",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-5-3-apollo-client-cache-and-rollback.html",pathLocale:"/",extraFields:[]},{title:"Apollo企业级最佳实践",headers:[{level:2,title:"Apollo部署架构最佳实践",slug:"apollo部署架构最佳实践",link:"#apollo部署架构最佳实践",children:[{level:3,title:"高可用部署架构",slug:"高可用部署架构",link:"#高可用部署架构",children:[]},{level:3,title:"数据库部署策略",slug:"数据库部署策略",link:"#数据库部署策略",children:[]},{level:3,title:"网络与安全配置",slug:"网络与安全配置",link:"#网络与安全配置",children:[]}]},{level:2,title:"权限管理最佳实践",slug:"权限管理最佳实践",link:"#权限管理最佳实践",children:[{level:3,title:"基于RBAC的权限模型",slug:"基于rbac的权限模型",link:"#基于rbac的权限模型",children:[]},{level:3,title:"细粒度权限控制",slug:"细粒度权限控制",link:"#细粒度权限控制",children:[]}]},{level:2,title:"监控告警最佳实践",slug:"监控告警最佳实践",link:"#监控告警最佳实践",children:[{level:3,title:"核心监控指标",slug:"核心监控指标",link:"#核心监控指标",children:[]},{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]},{level:3,title:"健康检查端点",slug:"健康检查端点",link:"#健康检查端点",children:[]}]},{level:2,title:"性能优化最佳实践",slug:"性能优化最佳实践",link:"#性能优化最佳实践",children:[{level:3,title:"数据库性能优化",slug:"数据库性能优化",link:"#数据库性能优化",children:[]},{level:3,title:"缓存策略优化",slug:"缓存策略优化",link:"#缓存策略优化",children:[]},{level:3,title:"客户端性能优化",slug:"客户端性能优化",link:"#客户端性能优化",children:[]}]},{level:2,title:"运维管理最佳实践",slug:"运维管理最佳实践",link:"#运维管理最佳实践",children:[{level:3,title:"自动化部署脚本",slug:"自动化部署脚本",link:"#自动化部署脚本",children:[]},{level:3,title:"备份与恢复策略",slug:"备份与恢复策略",link:"#备份与恢复策略",children:[]}]},{level:2,title:"安全最佳实践",slug:"安全最佳实践",link:"#安全最佳实践",children:[{level:3,title:"配置加密",slug:"配置加密",link:"#配置加密",children:[]},{level:3,title:"审计日志",slug:"审计日志",link:"#审计日志",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/3-5-4-apollo-enterprise-best-practices.html",pathLocale:"/",extraFields:[]},{title:"服务发现模式",headers:[{level:2,title:"客户端发现 vs 服务端发现",slug:"客户端发现-vs-服务端发现",link:"#客户端发现-vs-服务端发现",children:[{level:3,title:"客户端发现（Client-Side Discovery）",slug:"客户端发现-client-side-discovery",link:"#客户端发现-client-side-discovery",children:[]},{level:3,title:"服务端发现（Server-Side Discovery）",slug:"服务端发现-server-side-discovery",link:"#服务端发现-server-side-discovery",children:[]}]},{level:2,title:"DNS 解析与服务网格",slug:"dns-解析与服务网格",link:"#dns-解析与服务网格",children:[{level:3,title:"基于DNS的服务发现",slug:"基于dns的服务发现",link:"#基于dns的服务发现",children:[]},{level:3,title:"服务网格中的服务发现",slug:"服务网格中的服务发现",link:"#服务网格中的服务发现",children:[]}]},{level:2,title:"Sidecar 模式下的服务发现",slug:"sidecar-模式下的服务发现",link:"#sidecar-模式下的服务发现",children:[{level:3,title:"Sidecar架构",slug:"sidecar架构",link:"#sidecar架构",children:[]},{level:3,title:"服务发现流程",slug:"服务发现流程",link:"#服务发现流程",children:[]},{level:3,title:"优势",slug:"优势-1",link:"#优势-1",children:[]},{level:3,title:"实现挑战",slug:"实现挑战",link:"#实现挑战",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/4-1-service-discovery-patterns.html",pathLocale:"/",extraFields:[]},{title:"配置中心高级特性",headers:[{level:2,title:"配置加密与安全管控",slug:"配置加密与安全管控",link:"#配置加密与安全管控",children:[{level:3,title:"配置加密",slug:"配置加密",link:"#配置加密",children:[]},{level:3,title:"安全管控",slug:"安全管控",link:"#安全管控",children:[]}]},{level:2,title:"配置灰度与多环境隔离",slug:"配置灰度与多环境隔离",link:"#配置灰度与多环境隔离",children:[{level:3,title:"配置灰度发布",slug:"配置灰度发布",link:"#配置灰度发布",children:[]},{level:3,title:"多环境隔离",slug:"多环境隔离",link:"#多环境隔离",children:[]}]},{level:2,title:"配置变更审计与回滚",slug:"配置变更审计与回滚",link:"#配置变更审计与回滚",children:[{level:3,title:"配置变更审计",slug:"配置变更审计",link:"#配置变更审计",children:[]},{level:3,title:"配置回滚机制",slug:"配置回滚机制",link:"#配置回滚机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/4-2-config-center-advanced-features.html",pathLocale:"/",extraFields:[]},{title:"一致性与高可用",headers:[{level:2,title:"Raft / Paxos 在注册中心中的应用",slug:"raft-paxos-在注册中心中的应用",link:"#raft-paxos-在注册中心中的应用",children:[{level:3,title:"Raft算法",slug:"raft算法",link:"#raft算法",children:[]},{level:3,title:"Paxos算法",slug:"paxos算法",link:"#paxos算法",children:[]}]},{level:2,title:"Leader 选举实现",slug:"leader-选举实现",link:"#leader-选举实现",children:[{level:3,title:"选举触发条件",slug:"选举触发条件",link:"#选举触发条件",children:[]},{level:3,title:"选举算法实现",slug:"选举算法实现",link:"#选举算法实现",children:[]}]},{level:2,title:"多副本数据同步",slug:"多副本数据同步",link:"#多副本数据同步",children:[{level:3,title:"数据同步策略",slug:"数据同步策略",link:"#数据同步策略",children:[]},{level:3,title:"数据一致性保证",slug:"数据一致性保证",link:"#数据一致性保证",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/4-3-consistency-and-high-availability.html",pathLocale:"/",extraFields:[]},{title:"性能与扩展性优化",headers:[{level:2,title:"长连接与推送优化",slug:"长连接与推送优化",link:"#长连接与推送优化",children:[{level:3,title:"长连接管理",slug:"长连接管理",link:"#长连接管理",children:[]},{level:3,title:"心跳优化",slug:"心跳优化",link:"#心跳优化",children:[]},{level:3,title:"推送优化",slug:"推送优化",link:"#推送优化",children:[]}]},{level:2,title:"大规模服务实例的存储与查询",slug:"大规模服务实例的存储与查询",link:"#大规模服务实例的存储与查询",children:[{level:3,title:"分片存储",slug:"分片存储",link:"#分片存储",children:[]},{level:3,title:"索引优化",slug:"索引优化",link:"#索引优化",children:[]},{level:3,title:"缓存优化",slug:"缓存优化",link:"#缓存优化",children:[]}]},{level:2,title:"跨地域多集群部署",slug:"跨地域多集群部署",link:"#跨地域多集群部署",children:[{level:3,title:"集群架构设计",slug:"集群架构设计",link:"#集群架构设计",children:[]},{level:3,title:"数据同步策略",slug:"数据同步策略",link:"#数据同步策略",children:[]},{level:3,title:"故障转移与容灾",slug:"故障转移与容灾",link:"#故障转移与容灾",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/4-4-performance-and-scalability-optimization.html",pathLocale:"/",extraFields:[]},{title:"服务注册与配置中心在电商系统中的应用",headers:[{level:2,title:"商品、订单、支付的调用链设计",slug:"商品、订单、支付的调用链设计",link:"#商品、订单、支付的调用链设计",children:[{level:3,title:"服务架构设计",slug:"服务架构设计",link:"#服务架构设计",children:[]},{level:3,title:"服务注册与发现",slug:"服务注册与发现",link:"#服务注册与发现",children:[]},{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]}]},{level:2,title:"服务注册 + 配置动态开关的结合",slug:"服务注册-配置动态开关的结合",link:"#服务注册-配置动态开关的结合",children:[{level:3,title:"动态配置开关实现",slug:"动态配置开关实现",link:"#动态配置开关实现",children:[]},{level:3,title:"服务降级实现",slug:"服务降级实现",link:"#服务降级实现",children:[]},{level:3,title:"灰度发布实现",slug:"灰度发布实现",link:"#灰度发布实现",children:[]},{level:3,title:"配置中心在电商系统中的最佳实践",slug:"配置中心在电商系统中的最佳实践",link:"#配置中心在电商系统中的最佳实践",children:[]},{level:3,title:"监控与告警配置",slug:"监控与告警配置",link:"#监控与告警配置",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/5-1-service-registry-and-config-center-in-e-commerce.html",pathLocale:"/",extraFields:[]},{title:"企业级最佳实践",headers:[{level:2,title:"如何选择合适的注册/配置中心",slug:"如何选择合适的注册-配置中心",link:"#如何选择合适的注册-配置中心",children:[{level:3,title:"功能特性对比",slug:"功能特性对比",link:"#功能特性对比",children:[]},{level:3,title:"选择标准",slug:"选择标准",link:"#选择标准",children:[]}]},{level:2,title:"与 CI/CD、灰度发布集成",slug:"与-ci-cd、灰度发布集成",link:"#与-ci-cd、灰度发布集成",children:[{level:3,title:"CI/CD集成",slug:"ci-cd集成",link:"#ci-cd集成",children:[]},{level:3,title:"灰度发布集成",slug:"灰度发布集成",link:"#灰度发布集成",children:[]},{level:3,title:"自动化部署脚本",slug:"自动化部署脚本",link:"#自动化部署脚本",children:[]}]},{level:2,title:"与 Kubernetes 的结合",slug:"与-kubernetes-的结合",link:"#与-kubernetes-的结合",children:[{level:3,title:"Service与注册中心的结合",slug:"service与注册中心的结合",link:"#service与注册中心的结合",children:[]},{level:3,title:"ConfigMap与配置中心的结合",slug:"configmap与配置中心的结合",link:"#configmap与配置中心的结合",children:[]},{level:3,title:"Operator模式集成",slug:"operator模式集成",link:"#operator模式集成",children:[]},{level:3,title:"监控与告警集成",slug:"监控与告警集成",link:"#监控与告警集成",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/5-2-enterprise-best-practices.html",pathLocale:"/",extraFields:[]},{title:"监控与运维",headers:[{level:2,title:"指标采集（QPS、延迟、可用率）",slug:"指标采集-qps、延迟、可用率",link:"#指标采集-qps、延迟、可用率",children:[{level:3,title:"核心指标定义",slug:"核心指标定义",link:"#核心指标定义",children:[]},{level:3,title:"指标采集实现",slug:"指标采集实现",link:"#指标采集实现",children:[]},{level:3,title:"系统指标采集",slug:"系统指标采集",link:"#系统指标采集",children:[]},{level:3,title:"自定义指标端点",slug:"自定义指标端点",link:"#自定义指标端点",children:[]}]},{level:2,title:"日志与告警",slug:"日志与告警",link:"#日志与告警",children:[{level:3,title:"结构化日志",slug:"结构化日志",link:"#结构化日志",children:[]},{level:3,title:"告警规则配置",slug:"告警规则配置",link:"#告警规则配置",children:[]},{level:3,title:"告警通知",slug:"告警通知",link:"#告警通知",children:[]}]},{level:2,title:"自动化运维工具链",slug:"自动化运维工具链",link:"#自动化运维工具链",children:[{level:3,title:"健康检查工具",slug:"健康检查工具",link:"#健康检查工具",children:[]},{level:3,title:"自动故障恢复",slug:"自动故障恢复",link:"#自动故障恢复",children:[]},{level:3,title:"运维脚本工具",slug:"运维脚本工具",link:"#运维脚本工具",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/5-3-monitoring-and-operations.html",pathLocale:"/",extraFields:[]},{title:"云原生与 Service Mesh",headers:[{level:2,title:"为什么 Service Mesh 弱化了注册中心？",slug:"为什么-service-mesh-弱化了注册中心",link:"#为什么-service-mesh-弱化了注册中心",children:[{level:3,title:"传统微服务架构的挑战",slug:"传统微服务架构的挑战",link:"#传统微服务架构的挑战",children:[]},{level:3,title:"Service Mesh架构的变革",slug:"service-mesh架构的变革",link:"#service-mesh架构的变革",children:[]},{level:3,title:"注册中心角色的转变",slug:"注册中心角色的转变",link:"#注册中心角色的转变",children:[]},{level:3,title:"服务发现的去中心化",slug:"服务发现的去中心化",link:"#服务发现的去中心化",children:[]},{level:3,title:"流量治理能力的增强",slug:"流量治理能力的增强",link:"#流量治理能力的增强",children:[]}]},{level:2,title:"Istio/Envoy 的服务发现机制",slug:"istio-envoy-的服务发现机制",link:"#istio-envoy-的服务发现机制",children:[{level:3,title:"Istio架构概述",slug:"istio架构概述",link:"#istio架构概述",children:[]},{level:3,title:"Pilot服务发现实现",slug:"pilot服务发现实现",link:"#pilot服务发现实现",children:[]},{level:3,title:"Envoy服务发现实现",slug:"envoy服务发现实现",link:"#envoy服务发现实现",children:[]},{level:3,title:"xDS协议详解",slug:"xds协议详解",link:"#xds协议详解",children:[]},{level:3,title:"服务发现数据结构",slug:"服务发现数据结构",link:"#服务发现数据结构",children:[]},{level:3,title:"动态配置更新",slug:"动态配置更新",link:"#动态配置更新",children:[]}]},{level:2,title:"配置下沉到 Sidecar",slug:"配置下沉到-sidecar",link:"#配置下沉到-sidecar",children:[{level:3,title:"传统配置管理的局限",slug:"传统配置管理的局限",link:"#传统配置管理的局限",children:[]},{level:3,title:"Sidecar配置管理",slug:"sidecar配置管理",link:"#sidecar配置管理",children:[]},{level:3,title:"配置分发机制",slug:"配置分发机制",link:"#配置分发机制",children:[]},{level:3,title:"配置热更新",slug:"配置热更新",link:"#配置热更新",children:[]},{level:3,title:"配置安全",slug:"配置安全",link:"#配置安全",children:[]},{level:3,title:"配置版本管理",slug:"配置版本管理",link:"#配置版本管理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/6-1-cloud-native-and-service-mesh.html",pathLocale:"/",extraFields:[]},{title:"配置即代码（Configuration as Code）",headers:[{level:2,title:"GitOps 与配置中心结合",slug:"gitops-与配置中心结合",link:"#gitops-与配置中心结合",children:[{level:3,title:"GitOps核心理念",slug:"gitops核心理念",link:"#gitops核心理念",children:[]},{level:3,title:"GitOps工作流程",slug:"gitops工作流程",link:"#gitops工作流程",children:[]},{level:3,title:"GitOps Operator实现",slug:"gitops-operator实现",link:"#gitops-operator实现",children:[]},{level:3,title:"与配置中心的集成",slug:"与配置中心的集成",link:"#与配置中心的集成",children:[]},{level:3,title:"GitOps CI/CD集成",slug:"gitops-ci-cd集成",link:"#gitops-ci-cd集成",children:[]}]},{level:2,title:"声明式配置管理",slug:"声明式配置管理",link:"#声明式配置管理",children:[{level:3,title:"声明式配置语言",slug:"声明式配置语言",link:"#声明式配置语言",children:[]},{level:3,title:"配置模板化",slug:"配置模板化",link:"#配置模板化",children:[]},{level:3,title:"配置验证",slug:"配置验证",link:"#配置验证",children:[]},{level:3,title:"配置变更管理",slug:"配置变更管理",link:"#配置变更管理",children:[]},{level:3,title:"配置审计与合规",slug:"配置审计与合规",link:"#配置审计与合规",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/6-2-configuration-as-code.html",pathLocale:"/",extraFields:[]},{title:"总结与学习路径",headers:[{level:2,title:"从入门到精通的进阶路线",slug:"从入门到精通的进阶路线",link:"#从入门到精通的进阶路线",children:[{level:3,title:"第一阶段：基础概念掌握",slug:"第一阶段-基础概念掌握",link:"#第一阶段-基础概念掌握",children:[]},{level:3,title:"第二阶段：实战技能培养",slug:"第二阶段-实战技能培养",link:"#第二阶段-实战技能培养",children:[]},{level:3,title:"第三阶段：高级特性掌握",slug:"第三阶段-高级特性掌握",link:"#第三阶段-高级特性掌握",children:[]},{level:3,title:"第四阶段：企业级应用",slug:"第四阶段-企业级应用",link:"#第四阶段-企业级应用",children:[]},{level:3,title:"第五阶段：前沿技术探索",slug:"第五阶段-前沿技术探索",link:"#第五阶段-前沿技术探索",children:[]}]},{level:2,title:"学习 RPC、配置、服务网格的整体视角",slug:"学习-rpc、配置、服务网格的整体视角",link:"#学习-rpc、配置、服务网格的整体视角",children:[{level:3,title:"技术栈全景图",slug:"技术栈全景图",link:"#技术栈全景图",children:[]},{level:3,title:"学习路径建议",slug:"学习路径建议",link:"#学习路径建议",children:[]}]},{level:2,title:"从工程师到架构师的思维转变",slug:"从工程师到架构师的思维转变",link:"#从工程师到架构师的思维转变",children:[{level:3,title:"思维方式转变",slug:"思维方式转变",link:"#思维方式转变",children:[]},{level:3,title:"架构师核心能力",slug:"架构师核心能力",link:"#架构师核心能力",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/register-center/6-3-summary-and-learning-path.html",pathLocale:"/",extraFields:[]},{title:"服务注册与配置中心：从入门到精通",headers:[{level:2,title:"目录",slug:"目录",link:"#目录",children:[{level:3,title:"第一部分 基础篇：打好地基",slug:"第一部分-基础篇-打好地基",link:"#第一部分-基础篇-打好地基",children:[]},{level:3,title:"第二部分 实战篇：从零实现一个注册与配置中心",slug:"第二部分-实战篇-从零实现一个注册与配置中心",link:"#第二部分-实战篇-从零实现一个注册与配置中心",children:[]},{level:3,title:"第三部分 框架篇：主流实现深度解析",slug:"第三部分-框架篇-主流实现深度解析",link:"#第三部分-框架篇-主流实现深度解析",children:[]},{level:3,title:"第四部分 高级篇：进阶与架构思维",slug:"第四部分-高级篇-进阶与架构思维",link:"#第四部分-高级篇-进阶与架构思维",children:[]},{level:3,title:"第五部分 实践篇：生产环境的落地",slug:"第五部分-实践篇-生产环境的落地",link:"#第五部分-实践篇-生产环境的落地",children:[]},{level:3,title:"第六部分 展望篇：未来趋势",slug:"第六部分-展望篇-未来趋势",link:"#第六部分-展望篇-未来趋势",children:[]}]},{level:2,title:"使用说明",slug:"使用说明",link:"#使用说明",children:[]},{level:2,title:"贡献",slug:"贡献",link:"#贡献",children:[]}],path:"/posts/register-center/",pathLocale:"/",extraFields:[]},{title:"《服务注册与配置中心：从入门到精通》目录",headers:[{level:2,title:"第一部分 基础篇：打好地基",slug:"第一部分-基础篇-打好地基",link:"#第一部分-基础篇-打好地基",children:[]},{level:2,title:"第二部分 实战篇：从零实现一个注册与配置中心",slug:"第二部分-实战篇-从零实现一个注册与配置中心",link:"#第二部分-实战篇-从零实现一个注册与配置中心",children:[]},{level:2,title:"第三部分 框架篇：主流实现深度解析",slug:"第三部分-框架篇-主流实现深度解析",link:"#第三部分-框架篇-主流实现深度解析",children:[]},{level:2,title:"第四部分 高级篇：进阶与架构思维",slug:"第四部分-高级篇-进阶与架构思维",link:"#第四部分-高级篇-进阶与架构思维",children:[]},{level:2,title:"第五部分 实践篇：生产环境的落地",slug:"第五部分-实践篇-生产环境的落地",link:"#第五部分-实践篇-生产环境的落地",children:[]},{level:2,title:"第六部分 展望篇：未来趋势",slug:"第六部分-展望篇-未来趋势",link:"#第六部分-展望篇-未来趋势",children:[]}],path:"/posts/register-center/index-desc.html",pathLocale:"/",extraFields:[]},{title:"什么是 RPC？",headers:[{level:2,title:"RPC 的定义与作用",slug:"rpc-的定义与作用",link:"#rpc-的定义与作用",children:[]},{level:2,title:"与本地调用的区别",slug:"与本地调用的区别",link:"#与本地调用的区别",children:[{level:3,title:"执行环境差异",slug:"执行环境差异",link:"#执行环境差异",children:[]},{level:3,title:"性能差异",slug:"性能差异",link:"#性能差异",children:[]},{level:3,title:"可靠性差异",slug:"可靠性差异",link:"#可靠性差异",children:[]},{level:3,title:"调试复杂性",slug:"调试复杂性",link:"#调试复杂性",children:[]}]},{level:2,title:"RPC vs REST vs gRPC 对比",slug:"rpc-vs-rest-vs-grpc-对比",link:"#rpc-vs-rest-vs-grpc-对比",children:[{level:3,title:"RPC（传统）",slug:"rpc-传统",link:"#rpc-传统",children:[]},{level:3,title:"REST",slug:"rest",link:"#rest",children:[]},{level:3,title:"gRPC",slug:"grpc",link:"#grpc",children:[]}]},{level:2,title:"为什么微服务必须依赖 RPC",slug:"为什么微服务必须依赖-rpc",link:"#为什么微服务必须依赖-rpc",children:[{level:3,title:"服务解耦",slug:"服务解耦",link:"#服务解耦",children:[]},{level:3,title:"性能要求",slug:"性能要求",link:"#性能要求",children:[]},{level:3,title:"语言多样性支持",slug:"语言多样性支持",link:"#语言多样性支持",children:[]},{level:3,title:"服务治理",slug:"服务治理",link:"#服务治理",children:[]}]},{level:2,title:"RPC 的核心组件",slug:"rpc-的核心组件",link:"#rpc-的核心组件",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/1-1-what-is-rpc.html",pathLocale:"/",extraFields:[]},{title:"RPC 与本地调用的区别",headers:[{level:2,title:"执行环境的根本差异",slug:"执行环境的根本差异",link:"#执行环境的根本差异",children:[{level:3,title:"内存模型差异",slug:"内存模型差异",link:"#内存模型差异",children:[]},{level:3,title:"进程间通信机制",slug:"进程间通信机制",link:"#进程间通信机制",children:[]}]},{level:2,title:"性能特征对比",slug:"性能特征对比",link:"#性能特征对比",children:[{level:3,title:"延迟差异",slug:"延迟差异",link:"#延迟差异",children:[]},{level:3,title:"吞吐量差异",slug:"吞吐量差异",link:"#吞吐量差异",children:[]},{level:3,title:"资源消耗",slug:"资源消耗",link:"#资源消耗",children:[]}]},{level:2,title:"可靠性与错误处理",slug:"可靠性与错误处理",link:"#可靠性与错误处理",children:[{level:3,title:"本地调用的可靠性",slug:"本地调用的可靠性",link:"#本地调用的可靠性",children:[]},{level:3,title:"RPC 调用的复杂性",slug:"rpc-调用的复杂性",link:"#rpc-调用的复杂性",children:[]}]},{level:2,title:"调试与监控的差异",slug:"调试与监控的差异",link:"#调试与监控的差异",children:[{level:3,title:"本地调用调试",slug:"本地调用调试",link:"#本地调用调试",children:[]},{level:3,title:"RPC 调用调试",slug:"rpc-调用调试",link:"#rpc-调用调试",children:[]}]},{level:2,title:"事务处理差异",slug:"事务处理差异",link:"#事务处理差异",children:[{level:3,title:"本地事务",slug:"本地事务",link:"#本地事务",children:[]},{level:3,title:"分布式事务",slug:"分布式事务",link:"#分布式事务",children:[]}]},{level:2,title:"安全性考量",slug:"安全性考量",link:"#安全性考量",children:[{level:3,title:"本地调用安全性",slug:"本地调用安全性",link:"#本地调用安全性",children:[]},{level:3,title:"RPC 调用安全性",slug:"rpc-调用安全性",link:"#rpc-调用安全性",children:[]}]},{level:2,title:"实际案例分析",slug:"实际案例分析",link:"#实际案例分析",children:[{level:3,title:"本地调用场景",slug:"本地调用场景",link:"#本地调用场景",children:[]},{level:3,title:"RPC 调用场景",slug:"rpc-调用场景",link:"#rpc-调用场景",children:[]}]},{level:2,title:"优化策略",slug:"优化策略",link:"#优化策略",children:[{level:3,title:"减少 RPC 调用次数",slug:"减少-rpc-调用次数",link:"#减少-rpc-调用次数",children:[]},{level:3,title:"异步调用",slug:"异步调用",link:"#异步调用",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/1-2-rpc-vs-local-call.html",pathLocale:"/",extraFields:[]},{title:"RPC vs REST vs gRPC 对比",headers:[{level:2,title:"RPC（Remote Procedure Call）",slug:"rpc-remote-procedure-call",link:"#rpc-remote-procedure-call",children:[{level:3,title:"定义与特点",slug:"定义与特点",link:"#定义与特点",children:[]},{level:3,title:"优势",slug:"优势",link:"#优势",children:[]},{level:3,title:"劣势",slug:"劣势",link:"#劣势",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"REST（Representational State Transfer）",slug:"rest-representational-state-transfer",link:"#rest-representational-state-transfer",children:[{level:3,title:"定义与特点",slug:"定义与特点-1",link:"#定义与特点-1",children:[]},{level:3,title:"优势",slug:"优势-1",link:"#优势-1",children:[]},{level:3,title:"劣势",slug:"劣势-1",link:"#劣势-1",children:[]},{level:3,title:"适用场景",slug:"适用场景-1",link:"#适用场景-1",children:[]}]},{level:2,title:"gRPC（Google Remote Procedure Call）",slug:"grpc-google-remote-procedure-call",link:"#grpc-google-remote-procedure-call",children:[{level:3,title:"定义与特点",slug:"定义与特点-2",link:"#定义与特点-2",children:[]},{level:3,title:"优势",slug:"优势-2",link:"#优势-2",children:[]},{level:3,title:"劣势",slug:"劣势-2",link:"#劣势-2",children:[]},{level:3,title:"适用场景",slug:"适用场景-2",link:"#适用场景-2",children:[]}]},{level:2,title:"详细对比分析",slug:"详细对比分析",link:"#详细对比分析",children:[{level:3,title:"协议层面对比",slug:"协议层面对比",link:"#协议层面对比",children:[]},{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]},{level:3,title:"开发体验对比",slug:"开发体验对比",link:"#开发体验对比",children:[]},{level:3,title:"生态系统对比",slug:"生态系统对比",link:"#生态系统对比",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商系统架构",slug:"电商系统架构",link:"#电商系统架构",children:[]},{level:3,title:"金融服务系统",slug:"金融服务系统",link:"#金融服务系统",children:[]}]},{level:2,title:"选择建议",slug:"选择建议",link:"#选择建议",children:[{level:3,title:"选择 RPC 的场景",slug:"选择-rpc-的场景",link:"#选择-rpc-的场景",children:[]},{level:3,title:"选择 REST 的场景",slug:"选择-rest-的场景",link:"#选择-rest-的场景",children:[]},{level:3,title:"选择 gRPC 的场景",slug:"选择-grpc-的场景",link:"#选择-grpc-的场景",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"混合使用策略",slug:"混合使用策略",link:"#混合使用策略",children:[]},{level:3,title:"接口设计原则",slug:"接口设计原则",link:"#接口设计原则",children:[]}]},{level:2,title:"未来发展趋势",slug:"未来发展趋势",link:"#未来发展趋势",children:[{level:3,title:"REST 的演进",slug:"rest-的演进",link:"#rest-的演进",children:[]},{level:3,title:"gRPC 的普及",slug:"grpc-的普及",link:"#grpc-的普及",children:[]},{level:3,title:"新兴技术",slug:"新兴技术",link:"#新兴技术",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/1-3-rpc-vs-rest-vs-grpc.html",pathLocale:"/",extraFields:[]},{title:"为什么微服务必须依赖 RPC",headers:[{level:2,title:"微服务架构的核心特征",slug:"微服务架构的核心特征",link:"#微服务架构的核心特征",children:[{level:3,title:"服务拆分与独立部署",slug:"服务拆分与独立部署",link:"#服务拆分与独立部署",children:[]},{level:3,title:"分布式特性",slug:"分布式特性",link:"#分布式特性",children:[]}]},{level:2,title:"微服务通信的挑战",slug:"微服务通信的挑战",link:"#微服务通信的挑战",children:[{level:3,title:"网络通信的复杂性",slug:"网络通信的复杂性",link:"#网络通信的复杂性",children:[]},{level:3,title:"服务发现与负载均衡",slug:"服务发现与负载均衡",link:"#服务发现与负载均衡",children:[]},{level:3,title:"容错与弹性",slug:"容错与弹性",link:"#容错与弹性",children:[]}]},{level:2,title:"RPC 如何解决微服务通信问题",slug:"rpc-如何解决微服务通信问题",link:"#rpc-如何解决微服务通信问题",children:[{level:3,title:"简化服务调用",slug:"简化服务调用",link:"#简化服务调用",children:[]},{level:3,title:"性能优化",slug:"性能优化",link:"#性能优化",children:[]},{level:3,title:"服务治理能力",slug:"服务治理能力",link:"#服务治理能力",children:[]},{level:3,title:"多语言支持",slug:"多语言支持",link:"#多语言支持",children:[]}]},{level:2,title:"RPC 在微服务中的关键作用",slug:"rpc-在微服务中的关键作用",link:"#rpc-在微服务中的关键作用",children:[{level:3,title:"服务间解耦",slug:"服务间解耦",link:"#服务间解耦",children:[]},{level:3,title:"统一通信协议",slug:"统一通信协议",link:"#统一通信协议",children:[]},{level:3,title:"支持服务网格",slug:"支持服务网格",link:"#支持服务网格",children:[]}]},{level:2,title:"实际案例分析",slug:"实际案例分析",link:"#实际案例分析",children:[{level:3,title:"电商平台的微服务架构",slug:"电商平台的微服务架构",link:"#电商平台的微服务架构",children:[]},{level:3,title:"金融系统的高并发场景",slug:"金融系统的高并发场景",link:"#金融系统的高并发场景",children:[]}]},{level:2,title:"RPC 框架的核心组件",slug:"rpc-框架的核心组件",link:"#rpc-框架的核心组件",children:[{level:3,title:"客户端代理",slug:"客户端代理",link:"#客户端代理",children:[]},{level:3,title:"服务端框架",slug:"服务端框架",link:"#服务端框架",children:[]},{level:3,title:"注册中心",slug:"注册中心",link:"#注册中心",children:[]},{level:3,title:"负载均衡器",slug:"负载均衡器",link:"#负载均衡器",children:[]}]},{level:2,title:"微服务中 RPC 的最佳实践",slug:"微服务中-rpc-的最佳实践",link:"#微服务中-rpc-的最佳实践",children:[{level:3,title:"接口设计原则",slug:"接口设计原则",link:"#接口设计原则",children:[]},{level:3,title:"性能优化",slug:"性能优化-1",link:"#性能优化-1",children:[]},{level:3,title:"容错设计",slug:"容错设计",link:"#容错设计",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/1-4-why-microservices-need-rpc.html",pathLocale:"/",extraFields:[]},{title:"RPC 的核心组成",headers:[{level:2,title:"RPC 系统架构概览",slug:"rpc-系统架构概览",link:"#rpc-系统架构概览",children:[]},{level:2,title:"客户端与服务端模型",slug:"客户端与服务端模型",link:"#客户端与服务端模型",children:[{level:3,title:"客户端模型",slug:"客户端模型",link:"#客户端模型",children:[]},{level:3,title:"服务端模型",slug:"服务端模型",link:"#服务端模型",children:[]},{level:3,title:"通信模型",slug:"通信模型",link:"#通信模型",children:[]}]},{level:2,title:"序列化与反序列化",slug:"序列化与反序列化",link:"#序列化与反序列化",children:[{level:3,title:"序列化的作用",slug:"序列化的作用",link:"#序列化的作用",children:[]},{level:3,title:"常见序列化方式",slug:"常见序列化方式",link:"#常见序列化方式",children:[]},{level:3,title:"序列化性能对比",slug:"序列化性能对比",link:"#序列化性能对比",children:[]}]},{level:2,title:"网络通信协议",slug:"网络通信协议",link:"#网络通信协议",children:[{level:3,title:"TCP 协议",slug:"tcp-协议",link:"#tcp-协议",children:[]},{level:3,title:"HTTP 协议",slug:"http-协议",link:"#http-协议",children:[]},{level:3,title:"HTTP/2 协议",slug:"http-2-协议",link:"#http-2-协议",children:[]}]},{level:2,title:"服务发现与负载均衡",slug:"服务发现与负载均衡",link:"#服务发现与负载均衡",children:[{level:3,title:"服务发现机制",slug:"服务发现机制",link:"#服务发现机制",children:[]},{level:3,title:"负载均衡策略",slug:"负载均衡策略",link:"#负载均衡策略",children:[]}]},{level:2,title:"容错与监控",slug:"容错与监控",link:"#容错与监控",children:[{level:3,title:"容错机制",slug:"容错机制",link:"#容错机制",children:[]},{level:3,title:"监控与追踪",slug:"监控与追踪",link:"#监控与追踪",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/2-1-rpc-core-components.html",pathLocale:"/",extraFields:[]},{title:"客户端与服务端模型",headers:[{level:2,title:"RPC 客户端模型",slug:"rpc-客户端模型",link:"#rpc-客户端模型",children:[{level:3,title:"客户端的核心职责",slug:"客户端的核心职责",link:"#客户端的核心职责",children:[]},{level:3,title:"客户端代理机制",slug:"客户端代理机制",link:"#客户端代理机制",children:[]},{level:3,title:"动态代理实现",slug:"动态代理实现",link:"#动态代理实现",children:[]},{level:3,title:"客户端通信模式",slug:"客户端通信模式",link:"#客户端通信模式",children:[]}]},{level:2,title:"RPC 服务端模型",slug:"rpc-服务端模型",link:"#rpc-服务端模型",children:[{level:3,title:"服务端的核心职责",slug:"服务端的核心职责",link:"#服务端的核心职责",children:[]},{level:3,title:"服务端架构设计",slug:"服务端架构设计",link:"#服务端架构设计",children:[]},{level:3,title:"请求处理器实现",slug:"请求处理器实现",link:"#请求处理器实现",children:[]},{level:3,title:"服务注册与发现",slug:"服务注册与发现",link:"#服务注册与发现",children:[]}]},{level:2,title:"客户端与服务端的交互流程",slug:"客户端与服务端的交互流程",link:"#客户端与服务端的交互流程",children:[{level:3,title:"完整调用流程",slug:"完整调用流程",link:"#完整调用流程",children:[]},{level:3,title:"错误处理机制",slug:"错误处理机制",link:"#错误处理机制",children:[]}]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"连接池管理",slug:"连接池管理",link:"#连接池管理",children:[]},{level:3,title:"异步处理",slug:"异步处理",link:"#异步处理",children:[]}]},{level:2,title:"安全性考虑",slug:"安全性考虑",link:"#安全性考虑",children:[{level:3,title:"身份认证",slug:"身份认证",link:"#身份认证",children:[]},{level:3,title:"数据加密",slug:"数据加密",link:"#数据加密",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/2-2-client-server-model.html",pathLocale:"/",extraFields:[]},{title:"序列化与反序列化",headers:[{level:2,title:"序列化与反序列化的基本概念",slug:"序列化与反序列化的基本概念",link:"#序列化与反序列化的基本概念",children:[{level:3,title:"什么是序列化",slug:"什么是序列化",link:"#什么是序列化",children:[]},{level:3,title:"什么是反序列化",slug:"什么是反序列化",link:"#什么是反序列化",children:[]},{level:3,title:"序列化的重要性",slug:"序列化的重要性",link:"#序列化的重要性",children:[]}]},{level:2,title:"常见的序列化方式",slug:"常见的序列化方式",link:"#常见的序列化方式",children:[{level:3,title:"Java 原生序列化",slug:"java-原生序列化",link:"#java-原生序列化",children:[]},{level:3,title:"JSON 序列化",slug:"json-序列化",link:"#json-序列化",children:[]},{level:3,title:"Protocol Buffers",slug:"protocol-buffers",link:"#protocol-buffers",children:[]},{level:3,title:"Hessian",slug:"hessian",link:"#hessian",children:[]}]},{level:2,title:"序列化性能对比",slug:"序列化性能对比",link:"#序列化性能对比",children:[]},{level:2,title:"在 RPC 系统中的应用",slug:"在-rpc-系统中的应用",link:"#在-rpc-系统中的应用",children:[{level:3,title:"序列化选择策略",slug:"序列化选择策略",link:"#序列化选择策略",children:[]},{level:3,title:"序列化框架设计",slug:"序列化框架设计",link:"#序列化框架设计",children:[]},{level:3,title:"错误处理",slug:"错误处理",link:"#错误处理",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 选择合适的序列化方式",slug:"_1-选择合适的序列化方式",link:"#_1-选择合适的序列化方式",children:[]},{level:3,title:"2. 版本兼容性处理",slug:"_2-版本兼容性处理",link:"#_2-版本兼容性处理",children:[]},{level:3,title:"3. 性能优化",slug:"_3-性能优化",link:"#_3-性能优化",children:[]}]},{level:2,title:"安全性考虑",slug:"安全性考虑",link:"#安全性考虑",children:[{level:3,title:"反序列化安全",slug:"反序列化安全",link:"#反序列化安全",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/2-3-serialization-deserialization.html",pathLocale:"/",extraFields:[]},{title:"网络通信协议",headers:[{level:2,title:"网络通信协议基础",slug:"网络通信协议基础",link:"#网络通信协议基础",children:[{level:3,title:"协议分层模型",slug:"协议分层模型",link:"#协议分层模型",children:[]},{level:3,title:"协议选择考虑因素",slug:"协议选择考虑因素",link:"#协议选择考虑因素",children:[]}]},{level:2,title:"TCP 协议",slug:"tcp-协议",link:"#tcp-协议",children:[{level:3,title:"TCP 协议特点",slug:"tcp-协议特点",link:"#tcp-协议特点",children:[]},{level:3,title:"TCP 在 RPC 中的应用",slug:"tcp-在-rpc-中的应用",link:"#tcp-在-rpc-中的应用",children:[]},{level:3,title:"TCP 协议优缺点",slug:"tcp-协议优缺点",link:"#tcp-协议优缺点",children:[]}]},{level:2,title:"HTTP 协议",slug:"http-协议",link:"#http-协议",children:[{level:3,title:"HTTP 协议特点",slug:"http-协议特点",link:"#http-协议特点",children:[]},{level:3,title:"HTTP 在 RPC 中的应用",slug:"http-在-rpc-中的应用",link:"#http-在-rpc-中的应用",children:[]},{level:3,title:"HTTP 协议优缺点",slug:"http-协议优缺点",link:"#http-协议优缺点",children:[]}]},{level:2,title:"HTTP/2 协议",slug:"http-2-协议",link:"#http-2-协议",children:[{level:3,title:"HTTP/2 协议特点",slug:"http-2-协议特点",link:"#http-2-协议特点",children:[]},{level:3,title:"HTTP/2 在 RPC 中的应用",slug:"http-2-在-rpc-中的应用",link:"#http-2-在-rpc-中的应用",children:[]},{level:3,title:"HTTP/2 协议优缺点",slug:"http-2-协议优缺点",link:"#http-2-协议优缺点",children:[]}]},{level:2,title:"自定义协议",slug:"自定义协议",link:"#自定义协议",children:[{level:3,title:"自定义协议设计",slug:"自定义协议设计",link:"#自定义协议设计",children:[]},{level:3,title:"自定义协议优缺点",slug:"自定义协议优缺点",link:"#自定义协议优缺点",children:[]}]},{level:2,title:"协议选择指南",slug:"协议选择指南",link:"#协议选择指南",children:[{level:3,title:"性能优先场景",slug:"性能优先场景",link:"#性能优先场景",children:[]},{level:3,title:"兼容性优先场景",slug:"兼容性优先场景",link:"#兼容性优先场景",children:[]},{level:3,title:"开发效率优先场景",slug:"开发效率优先场景",link:"#开发效率优先场景",children:[]}]},{level:2,title:"连接管理",slug:"连接管理",link:"#连接管理",children:[{level:3,title:"长连接 vs 短连接",slug:"长连接-vs-短连接",link:"#长连接-vs-短连接",children:[]},{level:3,title:"心跳机制",slug:"心跳机制",link:"#心跳机制",children:[]}]},{level:2,title:"安全性考虑",slug:"安全性考虑",link:"#安全性考虑",children:[{level:3,title:"TLS/SSL 加密",slug:"tls-ssl-加密",link:"#tls-ssl-加密",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/2-4-network-protocols.html",pathLocale:"/",extraFields:[]},{title:"服务发现与负载均衡",headers:[{level:2,title:"服务发现机制",slug:"服务发现机制",link:"#服务发现机制",children:[{level:3,title:"什么是服务发现",slug:"什么是服务发现",link:"#什么是服务发现",children:[]},{level:3,title:"服务发现的核心组件",slug:"服务发现的核心组件",link:"#服务发现的核心组件",children:[]},{level:3,title:"服务注册与发现流程",slug:"服务注册与发现流程",link:"#服务注册与发现流程",children:[]}]},{level:2,title:"常见的服务发现方案",slug:"常见的服务发现方案",link:"#常见的服务发现方案",children:[{level:3,title:"Zookeeper",slug:"zookeeper",link:"#zookeeper",children:[]},{level:3,title:"Consul",slug:"consul",link:"#consul",children:[]},{level:3,title:"Nacos",slug:"nacos",link:"#nacos",children:[]}]},{level:2,title:"负载均衡策略",slug:"负载均衡策略",link:"#负载均衡策略",children:[{level:3,title:"负载均衡器接口",slug:"负载均衡器接口",link:"#负载均衡器接口",children:[]},{level:3,title:"轮询（Round Robin）策略",slug:"轮询-round-robin-策略",link:"#轮询-round-robin-策略",children:[]},{level:3,title:"随机（Random）策略",slug:"随机-random-策略",link:"#随机-random-策略",children:[]},{level:3,title:"加权轮询（Weighted Round Robin）策略",slug:"加权轮询-weighted-round-robin-策略",link:"#加权轮询-weighted-round-robin-策略",children:[]},{level:3,title:"最少连接（Least Connections）策略",slug:"最少连接-least-connections-策略",link:"#最少连接-least-connections-策略",children:[]},{level:3,title:"一致性哈希（Consistent Hashing）策略",slug:"一致性哈希-consistent-hashing-策略",link:"#一致性哈希-consistent-hashing-策略",children:[]}]},{level:2,title:"服务发现与负载均衡的集成",slug:"服务发现与负载均衡的集成",link:"#服务发现与负载均衡的集成",children:[{level:3,title:"服务发现负载均衡器",slug:"服务发现负载均衡器",link:"#服务发现负载均衡器",children:[]}]},{level:2,title:"健康检查机制",slug:"健康检查机制",link:"#健康检查机制",children:[{level:3,title:"主动健康检查",slug:"主动健康检查",link:"#主动健康检查",children:[]}]},{level:2,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[{level:3,title:"动态配置更新",slug:"动态配置更新",link:"#动态配置更新",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 服务注册与发现的最佳实践",slug:"_1-服务注册与发现的最佳实践",link:"#_1-服务注册与发现的最佳实践",children:[]},{level:3,title:"2. 负载均衡的最佳实践",slug:"_2-负载均衡的最佳实践",link:"#_2-负载均衡的最佳实践",children:[]},{level:3,title:"3. 监控与告警",slug:"_3-监控与告警",link:"#_3-监控与告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/2-5-service-discovery-load-balancing.html",pathLocale:"/",extraFields:[]},{title:"RPC 的应用场景",headers:[{level:2,title:"分布式系统中的位置",slug:"分布式系统中的位置",link:"#分布式系统中的位置",children:[{level:3,title:"微服务架构的核心组件",slug:"微服务架构的核心组件",link:"#微服务架构的核心组件",children:[]},{level:3,title:"服务网格中的通信协议",slug:"服务网格中的通信协议",link:"#服务网格中的通信协议",children:[]}]},{level:2,title:"电商系统中的应用",slug:"电商系统中的应用",link:"#电商系统中的应用",children:[{level:3,title:"商品服务",slug:"商品服务",link:"#商品服务",children:[]},{level:3,title:"订单服务",slug:"订单服务",link:"#订单服务",children:[]},{level:3,title:"支付服务",slug:"支付服务",link:"#支付服务",children:[]}]},{level:2,title:"金融系统中的应用",slug:"金融系统中的应用",link:"#金融系统中的应用",children:[{level:3,title:"交易服务",slug:"交易服务",link:"#交易服务",children:[]},{level:3,title:"风控服务",slug:"风控服务",link:"#风控服务",children:[]}]},{level:2,title:"日志系统中的应用",slug:"日志系统中的应用",link:"#日志系统中的应用",children:[{level:3,title:"日志收集服务",slug:"日志收集服务",link:"#日志收集服务",children:[]}]},{level:2,title:"推荐系统中的应用",slug:"推荐系统中的应用",link:"#推荐系统中的应用",children:[{level:3,title:"用户画像服务",slug:"用户画像服务",link:"#用户画像服务",children:[]},{level:3,title:"推荐算法服务",slug:"推荐算法服务",link:"#推荐算法服务",children:[]}]},{level:2,title:"什么时候适合用 RPC",slug:"什么时候适合用-rpc",link:"#什么时候适合用-rpc",children:[{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]},{level:3,title:"不适用场景",slug:"不适用场景",link:"#不适用场景",children:[]}]},{level:2,title:"与 MQ 和 REST 的对比",slug:"与-mq-和-rest-的对比",link:"#与-mq-和-rest-的对比",children:[{level:3,title:"RPC vs MQ",slug:"rpc-vs-mq",link:"#rpc-vs-mq",children:[]},{level:3,title:"RPC vs REST",slug:"rpc-vs-rest",link:"#rpc-vs-rest",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 接口设计原则",slug:"_1-接口设计原则",link:"#_1-接口设计原则",children:[]},{level:3,title:"2. 版本管理",slug:"_2-版本管理",link:"#_2-版本管理",children:[]},{level:3,title:"3. 性能优化",slug:"_3-性能优化",link:"#_3-性能优化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/3-1-rpc-applications.html",pathLocale:"/",extraFields:[]},{title:"分布式系统中的位置",headers:[{level:2,title:"分布式系统架构概述",slug:"分布式系统架构概述",link:"#分布式系统架构概述",children:[{level:3,title:"什么是分布式系统",slug:"什么是分布式系统",link:"#什么是分布式系统",children:[]},{level:3,title:"分布式系统的核心挑战",slug:"分布式系统的核心挑战",link:"#分布式系统的核心挑战",children:[]}]},{level:2,title:"RPC 在分布式系统中的核心地位",slug:"rpc-在分布式系统中的核心地位",link:"#rpc-在分布式系统中的核心地位",children:[{level:3,title:"服务间通信的桥梁",slug:"服务间通信的桥梁",link:"#服务间通信的桥梁",children:[]},{level:3,title:"微服务架构的基石",slug:"微服务架构的基石",link:"#微服务架构的基石",children:[]}]},{level:2,title:"RPC 与其他分布式组件的关系",slug:"rpc-与其他分布式组件的关系",link:"#rpc-与其他分布式组件的关系",children:[{level:3,title:"与服务注册中心的关系",slug:"与服务注册中心的关系",link:"#与服务注册中心的关系",children:[]},{level:3,title:"与负载均衡器的关系",slug:"与负载均衡器的关系",link:"#与负载均衡器的关系",children:[]},{level:3,title:"与配置中心的关系",slug:"与配置中心的关系",link:"#与配置中心的关系",children:[]},{level:3,title:"与监控系统的关系",slug:"与监控系统的关系",link:"#与监控系统的关系",children:[]}]},{level:2,title:"RPC 在分布式系统中的分层架构",slug:"rpc-在分布式系统中的分层架构",link:"#rpc-在分布式系统中的分层架构",children:[{level:3,title:"客户端代理层",slug:"客户端代理层",link:"#客户端代理层",children:[]},{level:3,title:"协议层",slug:"协议层",link:"#协议层",children:[]},{level:3,title:"传输层",slug:"传输层",link:"#传输层",children:[]},{level:3,title:"服务端处理层",slug:"服务端处理层",link:"#服务端处理层",children:[]}]},{level:2,title:"RPC 在分布式系统中的最佳实践",slug:"rpc-在分布式系统中的最佳实践",link:"#rpc-在分布式系统中的最佳实践",children:[{level:3,title:"1. 连接管理",slug:"_1-连接管理",link:"#_1-连接管理",children:[]},{level:3,title:"2. 容错机制",slug:"_2-容错机制",link:"#_2-容错机制",children:[]},{level:3,title:"3. 监控和追踪",slug:"_3-监控和追踪",link:"#_3-监控和追踪",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/3-2-distributed-system-position.html",pathLocale:"/",extraFields:[]},{title:"电商、支付、日志、推荐中的实践",headers:[{level:2,title:"电商系统中的 RPC 实践",slug:"电商系统中的-rpc-实践",link:"#电商系统中的-rpc-实践",children:[{level:3,title:"核心服务架构",slug:"核心服务架构",link:"#核心服务架构",children:[]},{level:3,title:"高并发场景优化",slug:"高并发场景优化",link:"#高并发场景优化",children:[]}]},{level:2,title:"支付系统中的 RPC 实践",slug:"支付系统中的-rpc-实践",link:"#支付系统中的-rpc-实践",children:[{level:3,title:"支付网关集成",slug:"支付网关集成",link:"#支付网关集成",children:[]},{level:3,title:"支付对账系统",slug:"支付对账系统",link:"#支付对账系统",children:[]}]},{level:2,title:"日志系统中的 RPC 实践",slug:"日志系统中的-rpc-实践",link:"#日志系统中的-rpc-实践",children:[{level:3,title:"分布式日志收集",slug:"分布式日志收集",link:"#分布式日志收集",children:[]},{level:3,title:"日志分析服务",slug:"日志分析服务",link:"#日志分析服务",children:[]}]},{level:2,title:"推荐系统中的 RPC 实践",slug:"推荐系统中的-rpc-实践",link:"#推荐系统中的-rpc-实践",children:[{level:3,title:"用户画像服务",slug:"用户画像服务",link:"#用户画像服务",children:[]},{level:3,title:"推荐算法服务",slug:"推荐算法服务",link:"#推荐算法服务",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"1. 性能优化",slug:"_1-性能优化",link:"#_1-性能优化",children:[]},{level:3,title:"2. 容错设计",slug:"_2-容错设计",link:"#_2-容错设计",children:[]},{level:3,title:"3. 监控和追踪",slug:"_3-监控和追踪",link:"#_3-监控和追踪",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/3-3-ecommerce-payment-log-recommendation-practices.html",pathLocale:"/",extraFields:[]},{title:"什么时候适合用 RPC，什么时候用 MQ 或 REST",headers:[{level:2,title:"RPC、MQ 和 REST 的核心特性对比",slug:"rpc、mq-和-rest-的核心特性对比",link:"#rpc、mq-和-rest-的核心特性对比",children:[{level:3,title:"RPC（Remote Procedure Call）",slug:"rpc-remote-procedure-call",link:"#rpc-remote-procedure-call",children:[]},{level:3,title:"MQ（Message Queue）",slug:"mq-message-queue",link:"#mq-message-queue",children:[]},{level:3,title:"REST（Representational State Transfer）",slug:"rest-representational-state-transfer",link:"#rest-representational-state-transfer",children:[]}]},{level:2,title:"详细对比分析",slug:"详细对比分析",link:"#详细对比分析",children:[{level:3,title:"通信模式对比",slug:"通信模式对比",link:"#通信模式对比",children:[]},{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]},{level:3,title:"可靠性对比",slug:"可靠性对比",link:"#可靠性对比",children:[]},{level:3,title:"使用复杂度对比",slug:"使用复杂度对比",link:"#使用复杂度对比",children:[]}]},{level:2,title:"适用场景分析",slug:"适用场景分析",link:"#适用场景分析",children:[{level:3,title:"什么时候适合用 RPC",slug:"什么时候适合用-rpc",link:"#什么时候适合用-rpc",children:[]},{level:3,title:"什么时候适合用 MQ",slug:"什么时候适合用-mq",link:"#什么时候适合用-mq",children:[]},{level:3,title:"什么时候适合用 REST",slug:"什么时候适合用-rest",link:"#什么时候适合用-rest",children:[]}]},{level:2,title:"混合使用策略",slug:"混合使用策略",link:"#混合使用策略",children:[]},{level:2,title:"选择决策树",slug:"选择决策树",link:"#选择决策树",children:[]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[{level:3,title:"1. 接口设计原则",slug:"_1-接口设计原则",link:"#_1-接口设计原则",children:[]},{level:3,title:"2. 错误处理",slug:"_2-错误处理",link:"#_2-错误处理",children:[]},{level:3,title:"3. 监控和追踪",slug:"_3-监控和追踪",link:"#_3-监控和追踪",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/3-4-when-to-use-rpc-mq-rest.html",pathLocale:"/",extraFields:[]},{title:"RPC 实现基础",headers:[{level:2,title:"RPC 的基本工作原理",slug:"rpc-的基本工作原理",link:"#rpc-的基本工作原理",children:[{level:3,title:"什么是 RPC",slug:"什么是-rpc",link:"#什么是-rpc",children:[]},{level:3,title:"RPC 的核心组件",slug:"rpc-的核心组件",link:"#rpc-的核心组件",children:[]},{level:3,title:"RPC 调用流程",slug:"rpc-调用流程",link:"#rpc-调用流程",children:[]}]},{level:2,title:"网络编程基础",slug:"网络编程基础",link:"#网络编程基础",children:[{level:3,title:"Socket 编程",slug:"socket-编程",link:"#socket-编程",children:[]},{level:3,title:"NIO（Non-blocking I/O）",slug:"nio-non-blocking-i-o",link:"#nio-non-blocking-i-o",children:[]}]},{level:2,title:"序列化技术",slug:"序列化技术",link:"#序列化技术",children:[{level:3,title:"Java 原生序列化",slug:"java-原生序列化",link:"#java-原生序列化",children:[]},{level:3,title:"JSON 序列化",slug:"json-序列化",link:"#json-序列化",children:[]},{level:3,title:"Protocol Buffers",slug:"protocol-buffers",link:"#protocol-buffers",children:[]}]},{level:2,title:"动态代理技术",slug:"动态代理技术",link:"#动态代理技术",children:[{level:3,title:"JDK 动态代理",slug:"jdk-动态代理",link:"#jdk-动态代理",children:[]},{level:3,title:"CGLIB 动态代理",slug:"cglib-动态代理",link:"#cglib-动态代理",children:[]}]},{level:2,title:"反射机制",slug:"反射机制",link:"#反射机制",children:[{level:3,title:"Java 反射基础",slug:"java-反射基础",link:"#java-反射基础",children:[]},{level:3,title:"在 RPC 中的应用",slug:"在-rpc-中的应用",link:"#在-rpc-中的应用",children:[]}]},{level:2,title:"网络协议设计",slug:"网络协议设计",link:"#网络协议设计",children:[{level:3,title:"自定义协议格式",slug:"自定义协议格式",link:"#自定义协议格式",children:[]}]},{level:2,title:"连接管理",slug:"连接管理",link:"#连接管理",children:[{level:3,title:"连接池实现",slug:"连接池实现",link:"#连接池实现",children:[]}]},{level:2,title:"容错机制",slug:"容错机制",link:"#容错机制",children:[{level:3,title:"超时控制",slug:"超时控制",link:"#超时控制",children:[]},{level:3,title:"重试机制",slug:"重试机制",link:"#重试机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/4-1-rpc-implementation-foundations.html",pathLocale:"/",extraFields:[]},{title:"Socket 编程实现远程调用",headers:[{level:2,title:"Socket 编程基础",slug:"socket-编程基础",link:"#socket-编程基础",children:[{level:3,title:"什么是 Socket",slug:"什么是-socket",link:"#什么是-socket",children:[]},{level:3,title:"Socket 的类型",slug:"socket-的类型",link:"#socket-的类型",children:[]},{level:3,title:"Socket 通信模型",slug:"socket-通信模型",link:"#socket-通信模型",children:[]}]},{level:2,title:"基础 Socket 实现",slug:"基础-socket-实现",link:"#基础-socket-实现",children:[{level:3,title:"简单的 Socket 服务端",slug:"简单的-socket-服务端",link:"#简单的-socket-服务端",children:[]},{level:3,title:"简单的 Socket 客户端",slug:"简单的-socket-客户端",link:"#简单的-socket-客户端",children:[]}]},{level:2,title:"基于对象的 Socket 通信",slug:"基于对象的-socket-通信",link:"#基于对象的-socket-通信",children:[{level:3,title:"请求和响应对象",slug:"请求和响应对象",link:"#请求和响应对象",children:[]},{level:3,title:"对象序列化工具",slug:"对象序列化工具",link:"#对象序列化工具",children:[]},{level:3,title:"基于对象的 Socket 服务端",slug:"基于对象的-socket-服务端",link:"#基于对象的-socket-服务端",children:[]},{level:3,title:"基于对象的 Socket 客户端",slug:"基于对象的-socket-客户端",link:"#基于对象的-socket-客户端",children:[]}]},{level:2,title:"高级 Socket 特性",slug:"高级-socket-特性",link:"#高级-socket-特性",children:[{level:3,title:"超时控制",slug:"超时控制",link:"#超时控制",children:[]},{level:3,title:"连接池管理",slug:"连接池管理",link:"#连接池管理",children:[]}]},{level:2,title:"错误处理和日志",slug:"错误处理和日志",link:"#错误处理和日志",children:[{level:3,title:"完善的错误处理",slug:"完善的错误处理",link:"#完善的错误处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/4-2-socket-programming-for-remote-calls.html",pathLocale:"/",extraFields:[]},{title:"阻塞 IO / NIO / Netty 基础",headers:[{level:2,title:"阻塞 IO（BIO）",slug:"阻塞-io-bio",link:"#阻塞-io-bio",children:[{level:3,title:"什么是阻塞 IO",slug:"什么是阻塞-io",link:"#什么是阻塞-io",children:[]},{level:3,title:"阻塞 IO 的特点",slug:"阻塞-io-的特点",link:"#阻塞-io-的特点",children:[]},{level:3,title:"阻塞 IO 示例",slug:"阻塞-io-示例",link:"#阻塞-io-示例",children:[]},{level:3,title:"阻塞 IO 的局限性",slug:"阻塞-io-的局限性",link:"#阻塞-io-的局限性",children:[]}]},{level:2,title:"NIO（Non-blocking IO）",slug:"nio-non-blocking-io",link:"#nio-non-blocking-io",children:[{level:3,title:"什么是 NIO",slug:"什么是-nio",link:"#什么是-nio",children:[]},{level:3,title:"NIO 的核心组件",slug:"nio-的核心组件",link:"#nio-的核心组件",children:[]},{level:3,title:"NIO 的特点",slug:"nio-的特点",link:"#nio-的特点",children:[]},{level:3,title:"NIO 示例",slug:"nio-示例",link:"#nio-示例",children:[]},{level:3,title:"NIO 的优势",slug:"nio-的优势",link:"#nio-的优势",children:[]},{level:3,title:"NIO 的局限性",slug:"nio-的局限性",link:"#nio-的局限性",children:[]}]},{level:2,title:"Netty 基础",slug:"netty-基础",link:"#netty-基础",children:[{level:3,title:"什么是 Netty",slug:"什么是-netty",link:"#什么是-netty",children:[]},{level:3,title:"Netty 的核心特性",slug:"netty-的核心特性",link:"#netty-的核心特性",children:[]},{level:3,title:"Netty 的核心组件",slug:"netty-的核心组件",link:"#netty-的核心组件",children:[]},{level:3,title:"Netty 示例",slug:"netty-示例",link:"#netty-示例",children:[]},{level:3,title:"Netty 的优势",slug:"netty-的优势",link:"#netty-的优势",children:[]},{level:3,title:"Netty 的适用场景",slug:"netty-的适用场景",link:"#netty-的适用场景",children:[]}]},{level:2,title:"三种 IO 模型对比",slug:"三种-io-模型对比",link:"#三种-io-模型对比",children:[{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/4-3-blocking-io-nio-netty-basics.html",pathLocale:"/",extraFields:[]},{title:"使用 Netty 封装请求和响应",headers:[{level:2,title:"RPC 协议设计",slug:"rpc-协议设计",link:"#rpc-协议设计",children:[{level:3,title:"自定义 RPC 协议格式",slug:"自定义-rpc-协议格式",link:"#自定义-rpc-协议格式",children:[]}]},{level:2,title:"RPC 请求和响应对象",slug:"rpc-请求和响应对象",link:"#rpc-请求和响应对象",children:[{level:3,title:"RPC 请求对象",slug:"rpc-请求对象",link:"#rpc-请求对象",children:[]},{level:3,title:"RPC 响应对象",slug:"rpc-响应对象",link:"#rpc-响应对象",children:[]}]},{level:2,title:"序列化工具",slug:"序列化工具",link:"#序列化工具",children:[{level:3,title:"序列化接口",slug:"序列化接口",link:"#序列化接口",children:[]},{level:3,title:"序列化管理器",slug:"序列化管理器",link:"#序列化管理器",children:[]}]},{level:2,title:"Netty 编解码器",slug:"netty-编解码器",link:"#netty-编解码器",children:[{level:3,title:"RPC 协议编码器",slug:"rpc-协议编码器",link:"#rpc-协议编码器",children:[]},{level:3,title:"RPC 协议解码器",slug:"rpc-协议解码器",link:"#rpc-协议解码器",children:[]}]},{level:2,title:"Netty 服务端实现",slug:"netty-服务端实现",link:"#netty-服务端实现",children:[{level:3,title:"RPC 服务端处理器",slug:"rpc-服务端处理器",link:"#rpc-服务端处理器",children:[]},{level:3,title:"RPC 服务端启动类",slug:"rpc-服务端启动类",link:"#rpc-服务端启动类",children:[]}]},{level:2,title:"Netty 客户端实现",slug:"netty-客户端实现",link:"#netty-客户端实现",children:[{level:3,title:"RPC 客户端处理器",slug:"rpc-客户端处理器",link:"#rpc-客户端处理器",children:[]},{level:3,title:"RPC 客户端",slug:"rpc-客户端",link:"#rpc-客户端",children:[]}]},{level:2,title:"高级特性",slug:"高级特性",link:"#高级特性",children:[{level:3,title:"连接池管理",slug:"连接池管理",link:"#连接池管理",children:[]},{level:3,title:"超时和重试机制",slug:"超时和重试机制",link:"#超时和重试机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/4-4-netty-request-response-encapsulation.html",pathLocale:"/",extraFields:[]},{title:"动态代理与服务调用",headers:[{level:2,title:"动态代理基础",slug:"动态代理基础",link:"#动态代理基础",children:[{level:3,title:"什么是动态代理",slug:"什么是动态代理",link:"#什么是动态代理",children:[]},{level:3,title:"JDK 动态代理",slug:"jdk-动态代理",link:"#jdk-动态代理",children:[]},{level:3,title:"CGLIB 动态代理",slug:"cglib-动态代理",link:"#cglib-动态代理",children:[]}]},{level:2,title:"RPC 动态代理实现",slug:"rpc-动态代理实现",link:"#rpc-动态代理实现",children:[{level:3,title:"RPC 代理工厂",slug:"rpc-代理工厂",link:"#rpc-代理工厂",children:[]},{level:3,title:"服务接口定义",slug:"服务接口定义",link:"#服务接口定义",children:[]},{level:3,title:"服务实现示例",slug:"服务实现示例",link:"#服务实现示例",children:[]}]},{level:2,title:"服务调用链",slug:"服务调用链",link:"#服务调用链",children:[{level:3,title:"调用链上下文",slug:"调用链上下文",link:"#调用链上下文",children:[]},{level:3,title:"调用链拦截器",slug:"调用链拦截器",link:"#调用链拦截器",children:[]},{level:3,title:"集成调用链的代理工厂",slug:"集成调用链的代理工厂",link:"#集成调用链的代理工厂",children:[]}]},{level:2,title:"异步服务调用",slug:"异步服务调用",link:"#异步服务调用",children:[{level:3,title:"异步调用支持",slug:"异步调用支持",link:"#异步调用支持",children:[]}]},{level:2,title:"服务发现集成",slug:"服务发现集成",link:"#服务发现集成",children:[{level:3,title:"服务发现感知的代理",slug:"服务发现感知的代理",link:"#服务发现感知的代理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/4-5-dynamic-proxy-service-invocation.html",pathLocale:"/",extraFields:[]},{title:"服务注册与发现",headers:[{level:2,title:"服务注册与发现概述",slug:"服务注册与发现概述",link:"#服务注册与发现概述",children:[{level:3,title:"什么是服务注册与发现",slug:"什么是服务注册与发现",link:"#什么是服务注册与发现",children:[]},{level:3,title:"服务注册与发现的重要性",slug:"服务注册与发现的重要性",link:"#服务注册与发现的重要性",children:[]},{level:3,title:"服务注册与发现的工作流程",slug:"服务注册与发现的工作流程",link:"#服务注册与发现的工作流程",children:[]}]},{level:2,title:"注册中心的设计与实现",slug:"注册中心的设计与实现",link:"#注册中心的设计与实现",children:[{level:3,title:"注册中心的核心功能",slug:"注册中心的核心功能",link:"#注册中心的核心功能",children:[]},{level:3,title:"注册中心的数据模型",slug:"注册中心的数据模型",link:"#注册中心的数据模型",children:[]}]},{level:2,title:"基于内存的注册中心实现",slug:"基于内存的注册中心实现",link:"#基于内存的注册中心实现",children:[{level:3,title:"简单的内存注册中心",slug:"简单的内存注册中心",link:"#简单的内存注册中心",children:[]}]},{level:2,title:"基于 ZooKeeper 的注册中心实现",slug:"基于-zookeeper-的注册中心实现",link:"#基于-zookeeper-的注册中心实现",children:[{level:3,title:"ZooKeeper 注册中心",slug:"zookeeper-注册中心",link:"#zookeeper-注册中心",children:[]}]},{level:2,title:"服务提供者实现",slug:"服务提供者实现",link:"#服务提供者实现",children:[{level:3,title:"服务提供者启动类",slug:"服务提供者启动类",link:"#服务提供者启动类",children:[]}]},{level:2,title:"服务消费者实现",slug:"服务消费者实现",link:"#服务消费者实现",children:[{level:3,title:"服务消费者",slug:"服务消费者",link:"#服务消费者",children:[]}]},{level:2,title:"健康检查机制",slug:"健康检查机制",link:"#健康检查机制",children:[{level:3,title:"主动健康检查",slug:"主动健康检查",link:"#主动健康检查",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/5-1-service-registration-discovery.html",pathLocale:"/",extraFields:[]},{title:"Zookeeper 实现服务注册",headers:[{level:2,title:"ZooKeeper 基础知识",slug:"zookeeper-基础知识",link:"#zookeeper-基础知识",children:[{level:3,title:"什么是 ZooKeeper",slug:"什么是-zookeeper",link:"#什么是-zookeeper",children:[]},{level:3,title:"ZooKeeper 的核心特性",slug:"zookeeper-的核心特性",link:"#zookeeper-的核心特性",children:[]},{level:3,title:"ZooKeeper 数据模型",slug:"zookeeper-数据模型",link:"#zookeeper-数据模型",children:[]}]},{level:2,title:"ZooKeeper 环境搭建",slug:"zookeeper-环境搭建",link:"#zookeeper-环境搭建",children:[{level:3,title:"安装 ZooKeeper",slug:"安装-zookeeper",link:"#安装-zookeeper",children:[]},{level:3,title:"ZooKeeper 配置文件",slug:"zookeeper-配置文件",link:"#zookeeper-配置文件",children:[]}]},{level:2,title:"ZooKeeper Java 客户端",slug:"zookeeper-java-客户端",link:"#zookeeper-java-客户端",children:[{level:3,title:"添加依赖",slug:"添加依赖",link:"#添加依赖",children:[]},{level:3,title:"基础 ZooKeeper 客户端",slug:"基础-zookeeper-客户端",link:"#基础-zookeeper-客户端",children:[]}]},{level:2,title:"基于 Curator 的高级客户端",slug:"基于-curator-的高级客户端",link:"#基于-curator-的高级客户端",children:[{level:3,title:"Curator 框架介绍",slug:"curator-框架介绍",link:"#curator-框架介绍",children:[]}]},{level:2,title:"ZooKeeper 服务注册实现",slug:"zookeeper-服务注册实现",link:"#zookeeper-服务注册实现",children:[{level:3,title:"服务注册中心设计",slug:"服务注册中心设计",link:"#服务注册中心设计",children:[]}]},{level:2,title:"服务提供者实现",slug:"服务提供者实现",link:"#服务提供者实现",children:[{level:3,title:"ZooKeeper 服务提供者",slug:"zookeeper-服务提供者",link:"#zookeeper-服务提供者",children:[]}]},{level:2,title:"服务消费者实现",slug:"服务消费者实现",link:"#服务消费者实现",children:[{level:3,title:"ZooKeeper 服务消费者",slug:"zookeeper-服务消费者",link:"#zookeeper-服务消费者",children:[]}]},{level:2,title:"高级特性实现",slug:"高级特性实现",link:"#高级特性实现",children:[{level:3,title:"服务监听机制",slug:"服务监听机制",link:"#服务监听机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/5-2-zookeeper-service-registration.html",pathLocale:"/",extraFields:[]},{title:"Nacos/Consul/Eureka 实现服务发现",headers:[{level:2,title:"服务发现组件对比",slug:"服务发现组件对比",link:"#服务发现组件对比",children:[{level:3,title:"核心特性对比",slug:"核心特性对比",link:"#核心特性对比",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"Nacos 服务发现实现",slug:"nacos-服务发现实现",link:"#nacos-服务发现实现",children:[{level:3,title:"Nacos 简介",slug:"nacos-简介",link:"#nacos-简介",children:[]},{level:3,title:"环境搭建",slug:"环境搭建",link:"#环境搭建",children:[]},{level:3,title:"添加依赖",slug:"添加依赖",link:"#添加依赖",children:[]},{level:3,title:"Nacos 服务注册中心实现",slug:"nacos-服务注册中心实现",link:"#nacos-服务注册中心实现",children:[]},{level:3,title:"Nacos 服务提供者",slug:"nacos-服务提供者",link:"#nacos-服务提供者",children:[]},{level:3,title:"Nacos 服务消费者",slug:"nacos-服务消费者",link:"#nacos-服务消费者",children:[]}]},{level:2,title:"Consul 服务发现实现",slug:"consul-服务发现实现",link:"#consul-服务发现实现",children:[{level:3,title:"Consul 简介",slug:"consul-简介",link:"#consul-简介",children:[]},{level:3,title:"环境搭建",slug:"环境搭建-1",link:"#环境搭建-1",children:[]},{level:3,title:"添加依赖",slug:"添加依赖-1",link:"#添加依赖-1",children:[]},{level:3,title:"Consul 服务注册中心实现",slug:"consul-服务注册中心实现",link:"#consul-服务注册中心实现",children:[]}]},{level:2,title:"Eureka 服务发现实现",slug:"eureka-服务发现实现",link:"#eureka-服务发现实现",children:[{level:3,title:"Eureka 简介",slug:"eureka-简介",link:"#eureka-简介",children:[]},{level:3,title:"环境搭建",slug:"环境搭建-2",link:"#环境搭建-2",children:[]},{level:3,title:"Eureka 服务注册中心实现",slug:"eureka-服务注册中心实现",link:"#eureka-服务注册中心实现",children:[]}]},{level:2,title:"统一服务发现接口",slug:"统一服务发现接口",link:"#统一服务发现接口",children:[{level:3,title:"抽象服务发现接口",slug:"抽象服务发现接口",link:"#抽象服务发现接口",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/5-3-nacos-consul-eureka-service-discovery.html",pathLocale:"/",extraFields:[]},{title:"超时控制、重试机制",headers:[{level:2,title:"超时控制的重要性",slug:"超时控制的重要性",link:"#超时控制的重要性",children:[{level:3,title:"为什么需要超时控制？",slug:"为什么需要超时控制",link:"#为什么需要超时控制",children:[]},{level:3,title:"超时类型",slug:"超时类型",link:"#超时类型",children:[]}]},{level:2,title:"重试机制设计",slug:"重试机制设计",link:"#重试机制设计",children:[{level:3,title:"重试策略",slug:"重试策略",link:"#重试策略",children:[]},{level:3,title:"基础重试实现",slug:"基础重试实现",link:"#基础重试实现",children:[]},{level:3,title:"高级重试策略",slug:"高级重试策略",link:"#高级重试策略",children:[]}]},{level:2,title:"超时与重试的最佳实践",slug:"超时与重试的最佳实践",link:"#超时与重试的最佳实践",children:[{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]},{level:3,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/6-1-timeout-retry-mechanism.html",pathLocale:"/",extraFields:[]},{title:"熔断与降级（参考 Hystrix、Resilience4j）",headers:[{level:2,title:"熔断器模式原理",slug:"熔断器模式原理",link:"#熔断器模式原理",children:[{level:3,title:"什么是熔断器模式？",slug:"什么是熔断器模式",link:"#什么是熔断器模式",children:[]},{level:3,title:"熔断器状态",slug:"熔断器状态",link:"#熔断器状态",children:[]},{level:3,title:"熔断器实现",slug:"熔断器实现",link:"#熔断器实现",children:[]},{level:3,title:"熔断器使用示例",slug:"熔断器使用示例",link:"#熔断器使用示例",children:[]}]},{level:2,title:"降级机制",slug:"降级机制",link:"#降级机制",children:[{level:3,title:"什么是服务降级？",slug:"什么是服务降级",link:"#什么是服务降级",children:[]},{level:3,title:"降级策略",slug:"降级策略",link:"#降级策略",children:[]}]},{level:2,title:"Hystrix 实现解析",slug:"hystrix-实现解析",link:"#hystrix-实现解析",children:[{level:3,title:"Hystrix 简介",slug:"hystrix-简介",link:"#hystrix-简介",children:[]},{level:3,title:"Hystrix 核心概念",slug:"hystrix-核心概念",link:"#hystrix-核心概念",children:[]},{level:3,title:"Hystrix Dashboard",slug:"hystrix-dashboard",link:"#hystrix-dashboard",children:[]}]},{level:2,title:"Resilience4j 实现解析",slug:"resilience4j-实现解析",link:"#resilience4j-实现解析",children:[{level:3,title:"Resilience4j 简介",slug:"resilience4j-简介",link:"#resilience4j-简介",children:[]},{level:3,title:"CircuitBreaker 使用",slug:"circuitbreaker-使用",link:"#circuitbreaker-使用",children:[]},{level:3,title:"Retry 和 RateLimiter 组合使用",slug:"retry-和-ratelimiter-组合使用",link:"#retry-和-ratelimiter-组合使用",children:[]}]},{level:2,title:"熔断与降级的最佳实践",slug:"熔断与降级的最佳实践",link:"#熔断与降级的最佳实践",children:[{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]},{level:3,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/6-2-circuit-breaker-degradation.html",pathLocale:"/",extraFields:[]},{title:"服务限流",headers:[{level:2,title:"限流的重要性",slug:"限流的重要性",link:"#限流的重要性",children:[{level:3,title:"为什么需要服务限流？",slug:"为什么需要服务限流",link:"#为什么需要服务限流",children:[]},{level:3,title:"限流的常见场景",slug:"限流的常见场景",link:"#限流的常见场景",children:[]}]},{level:2,title:"限流算法",slug:"限流算法",link:"#限流算法",children:[{level:3,title:"计数器算法（Fixed Window）",slug:"计数器算法-fixed-window",link:"#计数器算法-fixed-window",children:[]},{level:3,title:"滑动窗口算法（Sliding Window）",slug:"滑动窗口算法-sliding-window",link:"#滑动窗口算法-sliding-window",children:[]},{level:3,title:"令牌桶算法（Token Bucket）",slug:"令牌桶算法-token-bucket",link:"#令牌桶算法-token-bucket",children:[]},{level:3,title:"漏桶算法（Leaky Bucket）",slug:"漏桶算法-leaky-bucket",link:"#漏桶算法-leaky-bucket",children:[]}]},{level:2,title:"分布式限流",slug:"分布式限流",link:"#分布式限流",children:[{level:3,title:"基于 Redis 的分布式限流",slug:"基于-redis-的分布式限流",link:"#基于-redis-的分布式限流",children:[]}]},{level:2,title:"限流在 RPC 框架中的应用",slug:"限流在-rpc-框架中的应用",link:"#限流在-rpc-框架中的应用",children:[{level:3,title:"客户端限流",slug:"客户端限流",link:"#客户端限流",children:[]},{level:3,title:"服务端限流",slug:"服务端限流",link:"#服务端限流",children:[]}]},{level:2,title:"限流策略与最佳实践",slug:"限流策略与最佳实践",link:"#限流策略与最佳实践",children:[{level:3,title:"动态限流配置",slug:"动态限流配置",link:"#动态限流配置",children:[]},{level:3,title:"限流监控与告警",slug:"限流监控与告警",link:"#限流监控与告警",children:[]},{level:3,title:"优雅降级",slug:"优雅降级",link:"#优雅降级",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/6-3-service-rate-limiting.html",pathLocale:"/",extraFields:[]},{title:"Dubbo 架构设计与核心模块",headers:[{level:2,title:"Dubbo 架构概览",slug:"dubbo-架构概览",link:"#dubbo-架构概览",children:[{level:3,title:"整体架构",slug:"整体架构",link:"#整体架构",children:[]},{level:3,title:"核心组件交互流程",slug:"核心组件交互流程",link:"#核心组件交互流程",children:[]}]},{level:2,title:"核心模块详解",slug:"核心模块详解",link:"#核心模块详解",children:[{level:3,title:"1. Proxy 层（代理层）",slug:"_1-proxy-层-代理层",link:"#_1-proxy-层-代理层",children:[]},{level:3,title:"2. Registry 层（注册层）",slug:"_2-registry-层-注册层",link:"#_2-registry-层-注册层",children:[]},{level:3,title:"3. Protocol 层（协议层）",slug:"_3-protocol-层-协议层",link:"#_3-protocol-层-协议层",children:[]},{level:3,title:"4. Cluster 层（集群层）",slug:"_4-cluster-层-集群层",link:"#_4-cluster-层-集群层",children:[]}]},{level:2,title:"Dubbo SPI 机制",slug:"dubbo-spi-机制",link:"#dubbo-spi-机制",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/rpc/7-1-dubbo-architecture-core-modules.html",pathLocale:"/",extraFields:[]},{title:"《RPC 框架：从入门到精通》目录",headers:[{level:2,title:"第一部分 基础篇：走进 RPC",slug:"第一部分-基础篇-走进-rpc",link:"#第一部分-基础篇-走进-rpc",children:[]},{level:2,title:"第二部分 实战篇：从零实现一个 RPC 框架",slug:"第二部分-实战篇-从零实现一个-rpc-框架",link:"#第二部分-实战篇-从零实现一个-rpc-框架",children:[]},{level:2,title:"第三部分 框架篇：主流 RPC 框架深度解析",slug:"第三部分-框架篇-主流-rpc-框架深度解析",link:"#第三部分-框架篇-主流-rpc-框架深度解析",children:[]},{level:2,title:"第四部分 高级篇：RPC 框架设计的深水区",slug:"第四部分-高级篇-rpc-框架设计的深水区",link:"#第四部分-高级篇-rpc-框架设计的深水区",children:[]},{level:2,title:"第五部分 实践篇：RPC 在生产环境的落地",slug:"第五部分-实践篇-rpc-在生产环境的落地",link:"#第五部分-实践篇-rpc-在生产环境的落地",children:[]},{level:2,title:"第六部分 展望篇：RPC 的未来",slug:"第六部分-展望篇-rpc-的未来",link:"#第六部分-展望篇-rpc-的未来",children:[]}],path:"/posts/rpc/index-desc.html",pathLocale:"/",extraFields:[]},{title:"为什么需要分布式任务调度？",headers:[{level:2,title:"单机 Cron 的局限",slug:"单机-cron-的局限",link:"#单机-cron-的局限",children:[{level:3,title:"资源限制",slug:"资源限制",link:"#资源限制",children:[]},{level:3,title:"可靠性问题",slug:"可靠性问题",link:"#可靠性问题",children:[]},{level:3,title:"扩展性不足",slug:"扩展性不足",link:"#扩展性不足",children:[]}]},{level:2,title:"分布式系统中的任务需求",slug:"分布式系统中的任务需求",link:"#分布式系统中的任务需求",children:[{level:3,title:"跨服务协调",slug:"跨服务协调",link:"#跨服务协调",children:[]},{level:3,title:"负载均衡",slug:"负载均衡",link:"#负载均衡",children:[]},{level:3,title:"容错与高可用",slug:"容错与高可用",link:"#容错与高可用",children:[]}]},{level:2,title:"定时任务 vs 实时任务",slug:"定时任务-vs-实时任务",link:"#定时任务-vs-实时任务",children:[{level:3,title:"定时任务的特点",slug:"定时任务的特点",link:"#定时任务的特点",children:[]},{level:3,title:"实时任务的特点",slug:"实时任务的特点",link:"#实时任务的特点",children:[]}]},{level:2,title:"分布式任务调度的核心优势",slug:"分布式任务调度的核心优势",link:"#分布式任务调度的核心优势",children:[{level:3,title:"弹性伸缩",slug:"弹性伸缩",link:"#弹性伸缩",children:[]},{level:3,title:"统一管理",slug:"统一管理",link:"#统一管理",children:[]},{level:3,title:"故障恢复",slug:"故障恢复",link:"#故障恢复",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[{level:3,title:"电商系统",slug:"电商系统",link:"#电商系统",children:[]},{level:3,title:"金融系统",slug:"金融系统",link:"#金融系统",children:[]},{level:3,title:"大数据处理",slug:"大数据处理",link:"#大数据处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-1-1-why-distributed-scheduling.html",pathLocale:"/",extraFields:[]},{title:"任务调度的核心概念",headers:[{level:2,title:"任务、调度器、执行器",slug:"任务、调度器、执行器",link:"#任务、调度器、执行器",children:[{level:3,title:"任务（Job）",slug:"任务-job",link:"#任务-job",children:[]},{level:3,title:"调度器（Scheduler）",slug:"调度器-scheduler",link:"#调度器-scheduler",children:[]},{level:3,title:"执行器（Executor）",slug:"执行器-executor",link:"#执行器-executor",children:[]}]},{level:2,title:"时间表达式（Cron 表达式详解）",slug:"时间表达式-cron-表达式详解",link:"#时间表达式-cron-表达式详解",children:[{level:3,title:"Cron 表达式结构",slug:"cron-表达式结构",link:"#cron-表达式结构",children:[]},{level:3,title:"常用符号说明",slug:"常用符号说明",link:"#常用符号说明",children:[]},{level:3,title:"实际应用示例",slug:"实际应用示例",link:"#实际应用示例",children:[]}]},{level:2,title:"单次执行、周期执行、依赖执行",slug:"单次执行、周期执行、依赖执行",link:"#单次执行、周期执行、依赖执行",children:[{level:3,title:"单次执行任务",slug:"单次执行任务",link:"#单次执行任务",children:[]},{level:3,title:"周期执行任务",slug:"周期执行任务",link:"#周期执行任务",children:[]},{level:3,title:"依赖执行任务",slug:"依赖执行任务",link:"#依赖执行任务",children:[]}]},{level:2,title:"任务状态管理",slug:"任务状态管理",link:"#任务状态管理",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-1-2-core-concepts-of-scheduling.html",pathLocale:"/",extraFields:[]},{title:"分布式调度的基本模型",headers:[{level:2,title:"Master/Worker 架构",slug:"master-worker-架构",link:"#master-worker-架构",children:[{level:3,title:"Master 节点的职责",slug:"master-节点的职责",link:"#master-节点的职责",children:[]},{level:3,title:"Worker 节点的职责",slug:"worker-节点的职责",link:"#worker-节点的职责",children:[]},{level:3,title:"通信机制",slug:"通信机制",link:"#通信机制",children:[]}]},{level:2,title:"调度中心 vs 执行节点",slug:"调度中心-vs-执行节点",link:"#调度中心-vs-执行节点",children:[{level:3,title:"调度中心的设计原则",slug:"调度中心的设计原则",link:"#调度中心的设计原则",children:[]},{level:3,title:"执行节点的设计原则",slug:"执行节点的设计原则",link:"#执行节点的设计原则",children:[]}]},{level:2,title:"状态存储与一致性",slug:"状态存储与一致性",link:"#状态存储与一致性",children:[{level:3,title:"状态存储的设计",slug:"状态存储的设计",link:"#状态存储的设计",children:[]},{level:3,title:"一致性保障机制",slug:"一致性保障机制",link:"#一致性保障机制",children:[]},{level:3,title:"数据存储方案",slug:"数据存储方案",link:"#数据存储方案",children:[]}]},{level:2,title:"故障处理与恢复",slug:"故障处理与恢复",link:"#故障处理与恢复",children:[{level:3,title:"节点故障检测",slug:"节点故障检测",link:"#节点故障检测",children:[]},{level:3,title:"任务迁移机制",slug:"任务迁移机制",link:"#任务迁移机制",children:[]},{level:3,title:"数据恢复",slug:"数据恢复",link:"#数据恢复",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-1-3-basic-model-of-distributed-scheduling.html",pathLocale:"/",extraFields:[]},{title:"最小可用调度器",headers:[{level:2,title:"基于 Java Timer/ScheduledExecutorService",slug:"基于-java-timer-scheduledexecutorservice",link:"#基于-java-timer-scheduledexecutorservice",children:[{level:3,title:"Timer 的基本使用",slug:"timer-的基本使用",link:"#timer-的基本使用",children:[]},{level:3,title:"ScheduledExecutorService 的改进",slug:"scheduledexecutorservice-的改进",link:"#scheduledexecutorservice-的改进",children:[]}]},{level:2,title:"简单的 Cron 表达式解析",slug:"简单的-cron-表达式解析",link:"#简单的-cron-表达式解析",children:[]},{level:2,title:"单机定时任务实现",slug:"单机定时任务实现",link:"#单机定时任务实现",children:[]},{level:2,title:"核心设计要点",slug:"核心设计要点",link:"#核心设计要点",children:[{level:3,title:"1. 任务管理",slug:"_1-任务管理",link:"#_1-任务管理",children:[]},{level:3,title:"2. 时间调度",slug:"_2-时间调度",link:"#_2-时间调度",children:[]},{level:3,title:"3. 执行控制",slug:"_3-执行控制",link:"#_3-执行控制",children:[]},{level:3,title:"4. 系统监控",slug:"_4-系统监控",link:"#_4-系统监控",children:[]}]},{level:2,title:"性能优化考虑",slug:"性能优化考虑",link:"#性能优化考虑",children:[{level:3,title:"1. 线程池管理",slug:"_1-线程池管理",link:"#_1-线程池管理",children:[]},{level:3,title:"2. 时间检查优化",slug:"_2-时间检查优化",link:"#_2-时间检查优化",children:[]},{level:3,title:"3. 内存管理",slug:"_3-内存管理",link:"#_3-内存管理",children:[]}]},{level:2,title:"扩展性设计",slug:"扩展性设计",link:"#扩展性设计",children:[{level:3,title:"1. 插件化架构",slug:"_1-插件化架构",link:"#_1-插件化架构",children:[]},{level:3,title:"2. 配置管理",slug:"_2-配置管理",link:"#_2-配置管理",children:[]},{level:3,title:"3. 监控集成",slug:"_3-监控集成",link:"#_3-监控集成",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-2-1-minimal-viable-scheduler.html",pathLocale:"/",extraFields:[]},{title:"分布式调度雏形",headers:[{level:2,title:"使用数据库存储任务",slug:"使用数据库存储任务",link:"#使用数据库存储任务",children:[{level:3,title:"数据库表设计",slug:"数据库表设计",link:"#数据库表设计",children:[]},{level:3,title:"任务实体类",slug:"任务实体类",link:"#任务实体类",children:[]},{level:3,title:"数据访问层实现",slug:"数据访问层实现",link:"#数据访问层实现",children:[]}]},{level:2,title:"分布式锁保证任务唯一执行",slug:"分布式锁保证任务唯一执行",link:"#分布式锁保证任务唯一执行",children:[{level:3,title:"基于数据库的分布式锁实现",slug:"基于数据库的分布式锁实现",link:"#基于数据库的分布式锁实现",children:[]},{level:3,title:"创建分布式锁表",slug:"创建分布式锁表",link:"#创建分布式锁表",children:[]}]},{level:2,title:"执行日志与任务状态",slug:"执行日志与任务状态",link:"#执行日志与任务状态",children:[{level:3,title:"任务执行器实现",slug:"任务执行器实现",link:"#任务执行器实现",children:[]},{level:3,title:"示例任务实现",slug:"示例任务实现",link:"#示例任务实现",children:[]}]},{level:2,title:"分布式调度器核心实现",slug:"分布式调度器核心实现",link:"#分布式调度器核心实现",children:[]},{level:2,title:"系统架构优化",slug:"系统架构优化",link:"#系统架构优化",children:[{level:3,title:"1. 节点发现与注册",slug:"_1-节点发现与注册",link:"#_1-节点发现与注册",children:[]},{level:3,title:"2. 负载均衡策略",slug:"_2-负载均衡策略",link:"#_2-负载均衡策略",children:[]},{level:3,title:"3. 故障检测与恢复",slug:"_3-故障检测与恢复",link:"#_3-故障检测与恢复",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-2-2-distributed-scheduling-prototype.html",pathLocale:"/",extraFields:[]},{title:"高可用与扩展性设计",headers:[{level:2,title:"Leader 选举（Zookeeper/Etcd 实现）",slug:"leader-选举-zookeeper-etcd-实现",link:"#leader-选举-zookeeper-etcd-实现",children:[{level:3,title:"基于 Zookeeper 的 Leader 选举",slug:"基于-zookeeper-的-leader-选举",link:"#基于-zookeeper-的-leader-选举",children:[]},{level:3,title:"基于 Etcd 的 Leader 选举",slug:"基于-etcd-的-leader-选举",link:"#基于-etcd-的-leader-选举",children:[]}]},{level:2,title:"多节点容错与 Failover",slug:"多节点容错与-failover",link:"#多节点容错与-failover",children:[{level:3,title:"节点健康检查",slug:"节点健康检查",link:"#节点健康检查",children:[]},{level:3,title:"任务故障转移实现",slug:"任务故障转移实现",link:"#任务故障转移实现",children:[]}]},{level:2,title:"动态扩缩容",slug:"动态扩缩容",link:"#动态扩缩容",children:[{level:3,title:"节点注册与发现",slug:"节点注册与发现",link:"#节点注册与发现",children:[]},{level:3,title:"负载感知的扩缩容策略",slug:"负载感知的扩缩容策略",link:"#负载感知的扩缩容策略",children:[]}]},{level:2,title:"高可用架构设计要点",slug:"高可用架构设计要点",link:"#高可用架构设计要点",children:[{level:3,title:"1. 数据一致性",slug:"_1-数据一致性",link:"#_1-数据一致性",children:[]},{level:3,title:"2. 状态同步",slug:"_2-状态同步",link:"#_2-状态同步",children:[]},{level:3,title:"3. 故障检测",slug:"_3-故障检测",link:"#_3-故障检测",children:[]},{level:3,title:"4. 自动恢复",slug:"_4-自动恢复",link:"#_4-自动恢复",children:[]},{level:3,title:"5. 负载均衡",slug:"_5-负载均衡",link:"#_5-负载均衡",children:[]},{level:3,title:"6. 平滑扩缩容",slug:"_6-平滑扩缩容",link:"#_6-平滑扩缩容",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-2-3-high-availability-and-scalability.html",pathLocale:"/",extraFields:[]},{title:"Quartz 框架详解",headers:[{level:2,title:"Quartz 架构与核心组件",slug:"quartz-架构与核心组件",link:"#quartz-架构与核心组件",children:[{level:3,title:"Scheduler（调度器）",slug:"scheduler-调度器",link:"#scheduler-调度器",children:[]},{level:3,title:"Job（作业）",slug:"job-作业",link:"#job-作业",children:[]},{level:3,title:"JobDetail（作业详情）",slug:"jobdetail-作业详情",link:"#jobdetail-作业详情",children:[]},{level:3,title:"Trigger（触发器）",slug:"trigger-触发器",link:"#trigger-触发器",children:[]},{level:3,title:"JobStore（作业存储）",slug:"jobstore-作业存储",link:"#jobstore-作业存储",children:[]}]},{level:2,title:"集群模式与数据库持久化",slug:"集群模式与数据库持久化",link:"#集群模式与数据库持久化",children:[{level:3,title:"集群配置",slug:"集群配置",link:"#集群配置",children:[]},{level:3,title:"数据库表结构",slug:"数据库表结构",link:"#数据库表结构",children:[]},{level:3,title:"集群工作机制",slug:"集群工作机制",link:"#集群工作机制",children:[]}]},{level:2,title:"优缺点与典型应用",slug:"优缺点与典型应用",link:"#优缺点与典型应用",children:[{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]},{level:3,title:"典型应用场景",slug:"典型应用场景",link:"#典型应用场景",children:[]},{level:3,title:"实际应用示例",slug:"实际应用示例",link:"#实际应用示例",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 合理配置线程池",slug:"_1-合理配置线程池",link:"#_1-合理配置线程池",children:[]},{level:3,title:"2. 优化数据库性能",slug:"_2-优化数据库性能",link:"#_2-优化数据库性能",children:[]},{level:3,title:"3. 异常处理",slug:"_3-异常处理",link:"#_3-异常处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-3-1-quartz-framework.html",pathLocale:"/",extraFields:[]},{title:"Elastic-Job 框架详解",headers:[{level:2,title:"Elastic-Job 简介",slug:"elastic-job-简介",link:"#elastic-job-简介",children:[]},{level:2,title:"分片任务与弹性扩容",slug:"分片任务与弹性扩容",link:"#分片任务与弹性扩容",children:[{level:3,title:"分片概念",slug:"分片概念",link:"#分片概念",children:[]},{level:3,title:"分片策略",slug:"分片策略",link:"#分片策略",children:[]},{level:3,title:"弹性扩容",slug:"弹性扩容",link:"#弹性扩容",children:[]}]},{level:2,title:"Zookeeper 协调机制",slug:"zookeeper-协调机制",link:"#zookeeper-协调机制",children:[{level:3,title:"注册中心配置",slug:"注册中心配置",link:"#注册中心配置",children:[]},{level:3,title:"Zookeeper 节点结构",slug:"zookeeper-节点结构",link:"#zookeeper-节点结构",children:[]},{level:3,title:"故障检测与恢复",slug:"故障检测与恢复",link:"#故障检测与恢复",children:[]}]},{level:2,title:"作业事件追踪与监控",slug:"作业事件追踪与监控",link:"#作业事件追踪与监控",children:[{level:3,title:"事件追踪配置",slug:"事件追踪配置",link:"#事件追踪配置",children:[]},{level:3,title:"自定义事件处理器",slug:"自定义事件处理器",link:"#自定义事件处理器",children:[]}]},{level:2,title:"高级特性",slug:"高级特性",link:"#高级特性",children:[{level:3,title:"1. 作业禁用与失效转移",slug:"_1-作业禁用与失效转移",link:"#_1-作业禁用与失效转移",children:[]},{level:3,title:"2. 作业监听器",slug:"_2-作业监听器",link:"#_2-作业监听器",children:[]},{level:3,title:"3. 作业分片策略自定义",slug:"_3-作业分片策略自定义",link:"#_3-作业分片策略自定义",children:[]}]},{level:2,title:"与 Spring Boot 集成",slug:"与-spring-boot-集成",link:"#与-spring-boot-集成",children:[]},{level:2,title:"优缺点分析",slug:"优缺点分析",link:"#优缺点分析",children:[{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[{level:3,title:"1. 数据处理",slug:"_1-数据处理",link:"#_1-数据处理",children:[]},{level:3,title:"2. 定时报表生成",slug:"_2-定时报表生成",link:"#_2-定时报表生成",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 合理设置分片数量",slug:"_1-合理设置分片数量",link:"#_1-合理设置分片数量",children:[]},{level:3,title:"2. 异常处理和重试机制",slug:"_2-异常处理和重试机制",link:"#_2-异常处理和重试机制",children:[]},{level:3,title:"3. 监控和告警",slug:"_3-监控和告警",link:"#_3-监控和告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-3-2-elastic-job-framework.html",pathLocale:"/",extraFields:[]},{title:"XXL-JOB 框架详解",headers:[{level:2,title:"XXL-JOB 简介",slug:"xxl-job-简介",link:"#xxl-job-简介",children:[{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]}]},{level:2,title:"调度中心 + 执行器架构",slug:"调度中心-执行器架构",link:"#调度中心-执行器架构",children:[{level:3,title:"调度中心（XXL-JOB-Admin）",slug:"调度中心-xxl-job-admin",link:"#调度中心-xxl-job-admin",children:[]},{level:3,title:"执行器（XXL-JOB-Executor）",slug:"执行器-xxl-job-executor",link:"#执行器-xxl-job-executor",children:[]}]},{level:2,title:"动态任务管理与日志查询",slug:"动态任务管理与日志查询",link:"#动态任务管理与日志查询",children:[{level:3,title:"任务处理器开发",slug:"任务处理器开发",link:"#任务处理器开发",children:[]},{level:3,title:"GLUE 模式任务",slug:"glue-模式任务",link:"#glue-模式任务",children:[]},{level:3,title:"动态参数配置",slug:"动态参数配置",link:"#动态参数配置",children:[]}]},{level:2,title:"分布式调度与任务路由策略",slug:"分布式调度与任务路由策略",link:"#分布式调度与任务路由策略",children:[{level:3,title:"路由策略配置",slug:"路由策略配置",link:"#路由策略配置",children:[]},{level:3,title:"分片广播策略示例",slug:"分片广播策略示例",link:"#分片广播策略示例",children:[]}]},{level:2,title:"执行器注册与发现",slug:"执行器注册与发现",link:"#执行器注册与发现",children:[{level:3,title:"执行器自动注册",slug:"执行器自动注册",link:"#执行器自动注册",children:[]},{level:3,title:"执行器健康检查",slug:"执行器健康检查",link:"#执行器健康检查",children:[]}]},{level:2,title:"任务失败处理与重试机制",slug:"任务失败处理与重试机制",link:"#任务失败处理与重试机制",children:[{level:3,title:"失败重试配置",slug:"失败重试配置",link:"#失败重试配置",children:[]},{level:3,title:"告警机制",slug:"告警机制",link:"#告警机制",children:[]}]},{level:2,title:"与 Spring Boot 集成",slug:"与-spring-boot-集成",link:"#与-spring-boot-集成",children:[]},{level:2,title:"优缺点分析",slug:"优缺点分析",link:"#优缺点分析",children:[{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]}]},{level:2,title:"实际应用场景",slug:"实际应用场景",link:"#实际应用场景",children:[{level:3,title:"1. 数据同步任务",slug:"_1-数据同步任务",link:"#_1-数据同步任务",children:[]},{level:3,title:"2. 定时报表生成",slug:"_2-定时报表生成",link:"#_2-定时报表生成",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 任务设计原则",slug:"_1-任务设计原则",link:"#_1-任务设计原则",children:[]},{level:3,title:"2. 日志记录",slug:"_2-日志记录",link:"#_2-日志记录",children:[]},{level:3,title:"3. 性能监控",slug:"_3-性能监控",link:"#_3-性能监控",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-3-3-xxl-job-framework.html",pathLocale:"/",extraFields:[]},{title:"其他调度系统简析",headers:[{level:2,title:"TBSchedule",slug:"tbschedule",link:"#tbschedule",children:[{level:3,title:"核心特性",slug:"核心特性",link:"#核心特性",children:[]},{level:3,title:"架构设计",slug:"架构设计",link:"#架构设计",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"Saturn",slug:"saturn",link:"#saturn",children:[{level:3,title:"核心特性",slug:"核心特性-1",link:"#核心特性-1",children:[]},{level:3,title:"架构组件",slug:"架构组件",link:"#架构组件",children:[]},{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]},{level:3,title:"适用场景",slug:"适用场景-1",link:"#适用场景-1",children:[]}]},{level:2,title:"Kubernetes CronJob",slug:"kubernetes-cronjob",link:"#kubernetes-cronjob",children:[{level:3,title:"核心概念",slug:"核心概念",link:"#核心概念",children:[]},{level:3,title:"主要特性",slug:"主要特性",link:"#主要特性",children:[]},{level:3,title:"并发策略",slug:"并发策略",link:"#并发策略",children:[]},{level:3,title:"适用场景",slug:"适用场景-2",link:"#适用场景-2",children:[]}]},{level:2,title:"其他调度系统",slug:"其他调度系统",link:"#其他调度系统",children:[{level:3,title:"1. Apache Airflow",slug:"_1-apache-airflow",link:"#_1-apache-airflow",children:[]},{level:3,title:"2. Azkaban",slug:"_2-azkaban",link:"#_2-azkaban",children:[]},{level:3,title:"3. DolphinScheduler",slug:"_3-dolphinscheduler",link:"#_3-dolphinscheduler",children:[]}]},{level:2,title:"调度系统选型指南",slug:"调度系统选型指南",link:"#调度系统选型指南",children:[{level:3,title:"1. 技术栈匹配",slug:"_1-技术栈匹配",link:"#_1-技术栈匹配",children:[]},{level:3,title:"2. 功能需求",slug:"_2-功能需求",link:"#_2-功能需求",children:[]},{level:3,title:"3. 运维复杂度",slug:"_3-运维复杂度",link:"#_3-运维复杂度",children:[]},{level:3,title:"4. 社区支持",slug:"_4-社区支持",link:"#_4-社区支持",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-3-4-other-scheduling-systems.html",pathLocale:"/",extraFields:[]},{title:"分布式协调机制",headers:[{level:2,title:"分布式锁实现（Zookeeper/Redis）",slug:"分布式锁实现-zookeeper-redis",link:"#分布式锁实现-zookeeper-redis",children:[{level:3,title:"基于 Zookeeper 的分布式锁",slug:"基于-zookeeper-的分布式锁",link:"#基于-zookeeper-的分布式锁",children:[]},{level:3,title:"基于 Redis 的分布式锁",slug:"基于-redis-的分布式锁",link:"#基于-redis-的分布式锁",children:[]},{level:3,title:"锁的使用示例",slug:"锁的使用示例",link:"#锁的使用示例",children:[]}]},{level:2,title:"心跳与任务抢占",slug:"心跳与任务抢占",link:"#心跳与任务抢占",children:[{level:3,title:"心跳检测实现",slug:"心跳检测实现",link:"#心跳检测实现",children:[]},{level:3,title:"任务抢占机制",slug:"任务抢占机制",link:"#任务抢占机制",children:[]}]},{level:2,title:"一致性协议（Raft/Paxos）在调度中的应用",slug:"一致性协议-raft-paxos-在调度中的应用",link:"#一致性协议-raft-paxos-在调度中的应用",children:[{level:3,title:"Raft 协议简介",slug:"raft-协议简介",link:"#raft-协议简介",children:[]},{level:3,title:"在调度系统中的应用",slug:"在调度系统中的应用",link:"#在调度系统中的应用",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-4-1-distributed-coordination-mechanisms.html",pathLocale:"/",extraFields:[]},{title:"任务依赖与工作流调度",headers:[{level:2,title:"DAG（有向无环图）模型",slug:"dag-有向无环图-模型",link:"#dag-有向无环图-模型",children:[{level:3,title:"DAG 基本概念",slug:"dag-基本概念",link:"#dag-基本概念",children:[]},{level:3,title:"DAG 实现",slug:"dag-实现",link:"#dag-实现",children:[]},{level:3,title:"DAG 使用示例",slug:"dag-使用示例",link:"#dag-使用示例",children:[]}]},{level:2,title:"上下游依赖处理",slug:"上下游依赖处理",link:"#上下游依赖处理",children:[{level:3,title:"依赖状态管理",slug:"依赖状态管理",link:"#依赖状态管理",children:[]},{level:3,title:"任务执行器",slug:"任务执行器",link:"#任务执行器",children:[]}]},{level:2,title:"工作流引擎（Azkaban、Airflow、DolphinScheduler）",slug:"工作流引擎-azkaban、airflow、dolphinscheduler",link:"#工作流引擎-azkaban、airflow、dolphinscheduler",children:[{level:3,title:"Apache Airflow",slug:"apache-airflow",link:"#apache-airflow",children:[]},{level:3,title:"Azkaban",slug:"azkaban",link:"#azkaban",children:[]},{level:3,title:"DolphinScheduler",slug:"dolphinscheduler",link:"#dolphinscheduler",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-4-2-task-dependency-and-workflow-scheduling.html",pathLocale:"/",extraFields:[]},{title:"任务执行与容错机制",headers:[{level:2,title:"重试机制与补偿任务",slug:"重试机制与补偿任务",link:"#重试机制与补偿任务",children:[{level:3,title:"重试机制实现",slug:"重试机制实现",link:"#重试机制实现",children:[]},{level:3,title:"补偿任务实现",slug:"补偿任务实现",link:"#补偿任务实现",children:[]}]},{level:2,title:"超时控制与中断执行",slug:"超时控制与中断执行",link:"#超时控制与中断执行",children:[{level:3,title:"超时控制实现",slug:"超时控制实现",link:"#超时控制实现",children:[]},{level:3,title:"中断执行机制",slug:"中断执行机制",link:"#中断执行机制",children:[]}]},{level:2,title:"幂等性保障",slug:"幂等性保障",link:"#幂等性保障",children:[{level:3,title:"幂等性实现",slug:"幂等性实现",link:"#幂等性实现",children:[]}]},{level:2,title:"综合示例",slug:"综合示例",link:"#综合示例",children:[]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 合理配置重试策略",slug:"_1-合理配置重试策略",link:"#_1-合理配置重试策略",children:[]},{level:3,title:"2. 监控和告警",slug:"_2-监控和告警",link:"#_2-监控和告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-4-3-task-execution-and-fault-tolerance.html",pathLocale:"/",extraFields:[]},{title:"调度性能优化",headers:[{level:2,title:"大规模任务并发调度",slug:"大规模任务并发调度",link:"#大规模任务并发调度",children:[{level:3,title:"任务分发策略",slug:"任务分发策略",link:"#任务分发策略",children:[]},{level:3,title:"任务队列管理",slug:"任务队列管理",link:"#任务队列管理",children:[]}]},{level:2,title:"数据分片与批处理优化",slug:"数据分片与批处理优化",link:"#数据分片与批处理优化",children:[{level:3,title:"数据分片策略",slug:"数据分片策略",link:"#数据分片策略",children:[]},{level:3,title:"批处理优化",slug:"批处理优化",link:"#批处理优化",children:[]}]},{level:2,title:"调度延迟与准确性",slug:"调度延迟与准确性",link:"#调度延迟与准确性",children:[{level:3,title:"调度延迟优化",slug:"调度延迟优化",link:"#调度延迟优化",children:[]},{level:3,title:"调度准确性保障",slug:"调度准确性保障",link:"#调度准确性保障",children:[]}]},{level:2,title:"综合性能优化示例",slug:"综合性能优化示例",link:"#综合性能优化示例",children:[]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 性能监控与调优",slug:"_1-性能监控与调优",link:"#_1-性能监控与调优",children:[]},{level:3,title:"2. 资源管理优化",slug:"_2-资源管理优化",link:"#_2-资源管理优化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-4-4-scheduling-performance-optimization.html",pathLocale:"/",extraFields:[]},{title:"安全与多租户",headers:[{level:2,title:"任务隔离与权限控制",slug:"任务隔离与权限控制",link:"#任务隔离与权限控制",children:[{level:3,title:"任务隔离机制",slug:"任务隔离机制",link:"#任务隔离机制",children:[]},{level:3,title:"执行上下文",slug:"执行上下文",link:"#执行上下文",children:[]}]},{level:2,title:"任务数据加密与审计",slug:"任务数据加密与审计",link:"#任务数据加密与审计",children:[{level:3,title:"数据加密管理",slug:"数据加密管理",link:"#数据加密管理",children:[]},{level:3,title:"审计日志管理",slug:"审计日志管理",link:"#审计日志管理",children:[]}]},{level:2,title:"多租户架构设计",slug:"多租户架构设计",link:"#多租户架构设计",children:[{level:3,title:"多租户管理",slug:"多租户管理",link:"#多租户管理",children:[]},{level:3,title:"多租户资源配额管理",slug:"多租户资源配额管理",link:"#多租户资源配额管理",children:[]}]},{level:2,title:"综合安全示例",slug:"综合安全示例",link:"#综合安全示例",children:[]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 安全配置管理",slug:"_1-安全配置管理",link:"#_1-安全配置管理",children:[]},{level:3,title:"2. 安全监控和告警",slug:"_2-安全监控和告警",link:"#_2-安全监控和告警",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-4-5-security-and-multi-tenancy.html",pathLocale:"/",extraFields:[]},{title:"调度平台的企业实践",headers:[{level:2,title:"电商订单定时关闭",slug:"电商订单定时关闭",link:"#电商订单定时关闭",children:[{level:3,title:"业务场景分析",slug:"业务场景分析",link:"#业务场景分析",children:[]},{level:3,title:"技术实现方案",slug:"技术实现方案",link:"#技术实现方案",children:[]},{level:3,title:"调度任务配置",slug:"调度任务配置",link:"#调度任务配置",children:[]},{level:3,title:"性能优化考虑",slug:"性能优化考虑",link:"#性能优化考虑",children:[]}]},{level:2,title:"大数据 ETL 与批量计算",slug:"大数据-etl-与批量计算",link:"#大数据-etl-与批量计算",children:[{level:3,title:"ETL 任务架构",slug:"etl-任务架构",link:"#etl-任务架构",children:[]},{level:3,title:"大数据批量计算任务",slug:"大数据批量计算任务",link:"#大数据批量计算任务",children:[]}]},{level:2,title:"金融风控定时校验",slug:"金融风控定时校验",link:"#金融风控定时校验",children:[{level:3,title:"风控校验任务架构",slug:"风控校验任务架构",link:"#风控校验任务架构",children:[]},{level:3,title:"风控调度配置",slug:"风控调度配置",link:"#风控调度配置",children:[]}]},{level:2,title:"企业实践总结",slug:"企业实践总结",link:"#企业实践总结",children:[{level:3,title:"1. 可靠性保障",slug:"_1-可靠性保障",link:"#_1-可靠性保障",children:[]},{level:3,title:"2. 性能优化",slug:"_2-性能优化",link:"#_2-性能优化",children:[]},{level:3,title:"3. 安全性考虑",slug:"_3-安全性考虑",link:"#_3-安全性考虑",children:[]},{level:3,title:"4. 可维护性",slug:"_4-可维护性",link:"#_4-可维护性",children:[]}]}],path:"/posts/schedule/1-5-1-scheduling-platform-enterprise-practices.html",pathLocale:"/",extraFields:[]},{title:"与微服务体系的结合",headers:[{level:2,title:"Spring Cloud/Spring Boot 集成调度框架",slug:"spring-cloud-spring-boot-集成调度框架",link:"#spring-cloud-spring-boot-集成调度框架",children:[{level:3,title:"Spring Boot 集成 Quartz",slug:"spring-boot-集成-quartz",link:"#spring-boot-集成-quartz",children:[]},{level:3,title:"Spring Cloud 集成分布式调度",slug:"spring-cloud-集成分布式调度",link:"#spring-cloud-集成分布式调度",children:[]}]},{level:2,title:"配置中心与调度的联动",slug:"配置中心与调度的联动",link:"#配置中心与调度的联动",children:[{level:3,title:"基于 Spring Cloud Config 的配置管理",slug:"基于-spring-cloud-config-的配置管理",link:"#基于-spring-cloud-config-的配置管理",children:[]},{level:3,title:"基于 Apollo 的配置管理",slug:"基于-apollo-的配置管理",link:"#基于-apollo-的配置管理",children:[]}]},{level:2,title:"服务发现与任务路由策略",slug:"服务发现与任务路由策略",link:"#服务发现与任务路由策略",children:[{level:3,title:"基于服务发现的任务路由",slug:"基于服务发现的任务路由",link:"#基于服务发现的任务路由",children:[]},{level:3,title:"智能任务路由实现",slug:"智能任务路由实现",link:"#智能任务路由实现",children:[]}]},{level:2,title:"微服务调度集成示例",slug:"微服务调度集成示例",link:"#微服务调度集成示例",children:[]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"1. 配置管理最佳实践",slug:"_1-配置管理最佳实践",link:"#_1-配置管理最佳实践",children:[]},{level:3,title:"2. 服务发现最佳实践",slug:"_2-服务发现最佳实践",link:"#_2-服务发现最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-5-2-microservices-integration.html",pathLocale:"/",extraFields:[]},{title:"监控与运维",headers:[{level:2,title:"任务执行日志采集",slug:"任务执行日志采集",link:"#任务执行日志采集",children:[{level:3,title:"日志采集架构",slug:"日志采集架构",link:"#日志采集架构",children:[]},{level:3,title:"日志采集集成",slug:"日志采集集成",link:"#日志采集集成",children:[]}]},{level:2,title:"调度指标监控",slug:"调度指标监控",link:"#调度指标监控",children:[{level:3,title:"指标收集与上报",slug:"指标收集与上报",link:"#指标收集与上报",children:[]},{level:3,title:"自定义指标仪表板",slug:"自定义指标仪表板",link:"#自定义指标仪表板",children:[]}]},{level:2,title:"告警与自动化运维",slug:"告警与自动化运维",link:"#告警与自动化运维",children:[{level:3,title:"告警规则引擎",slug:"告警规则引擎",link:"#告警规则引擎",children:[]},{level:3,title:"自动化运维",slug:"自动化运维",link:"#自动化运维",children:[]}]},{level:2,title:"监控与运维最佳实践",slug:"监控与运维最佳实践",link:"#监控与运维最佳实践",children:[{level:3,title:"1. 监控指标设计",slug:"_1-监控指标设计",link:"#_1-监控指标设计",children:[]},{level:3,title:"2. 告警策略配置",slug:"_2-告警策略配置",link:"#_2-告警策略配置",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-5-3-monitoring-and-operations.html",pathLocale:"/",extraFields:[]},{title:"云原生与容器化调度",headers:[{level:2,title:"Kubernetes CronJob 的原理与实践",slug:"kubernetes-cronjob-的原理与实践",link:"#kubernetes-cronjob-的原理与实践",children:[{level:3,title:"CronJob 工作原理",slug:"cronjob-工作原理",link:"#cronjob-工作原理",children:[]},{level:3,title:"CronJob 高级特性",slug:"cronjob-高级特性",link:"#cronjob-高级特性",children:[]},{level:3,title:"并发控制与失败处理",slug:"并发控制与失败处理",link:"#并发控制与失败处理",children:[]}]},{level:2,title:"调度与 Service Mesh 结合",slug:"调度与-service-mesh-结合",link:"#调度与-service-mesh-结合",children:[{level:3,title:"服务网格中的任务调度",slug:"服务网格中的任务调度",link:"#服务网格中的任务调度",children:[]},{level:3,title:"任务治理策略",slug:"任务治理策略",link:"#任务治理策略",children:[]}]},{level:2,title:"Serverless 下的任务调度",slug:"serverless-下的任务调度",link:"#serverless-下的任务调度",children:[{level:3,title:"函数即服务（FaaS）调度",slug:"函数即服务-faas-调度",link:"#函数即服务-faas-调度",children:[]},{level:3,title:"事件驱动的任务调度",slug:"事件驱动的任务调度",link:"#事件驱动的任务调度",children:[]},{level:3,title:"Serverless 调度最佳实践",slug:"serverless-调度最佳实践",link:"#serverless-调度最佳实践",children:[]}]},{level:2,title:"云原生调度架构设计",slug:"云原生调度架构设计",link:"#云原生调度架构设计",children:[{level:3,title:"多集群调度",slug:"多集群调度",link:"#多集群调度",children:[]},{level:3,title:"弹性伸缩集成",slug:"弹性伸缩集成",link:"#弹性伸缩集成",children:[]}]},{level:2,title:"云原生调度监控与运维",slug:"云原生调度监控与运维",link:"#云原生调度监控与运维",children:[{level:3,title:"Prometheus 监控集成",slug:"prometheus-监控集成",link:"#prometheus-监控集成",children:[]},{level:3,title:"自定义监控指标",slug:"自定义监控指标",link:"#自定义监控指标",children:[]}]},{level:2,title:"最佳实践与注意事项",slug:"最佳实践与注意事项",link:"#最佳实践与注意事项",children:[{level:3,title:"1. 资源管理",slug:"_1-资源管理",link:"#_1-资源管理",children:[]},{level:3,title:"2. 安全配置",slug:"_2-安全配置",link:"#_2-安全配置",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-6-1-cloud-native-and-containerized-scheduling.html",pathLocale:"/",extraFields:[]},{title:"AI 驱动的智能调度",headers:[{level:2,title:"基于历史数据的任务优化",slug:"基于历史数据的任务优化",link:"#基于历史数据的任务优化",children:[{level:3,title:"任务执行模式识别",slug:"任务执行模式识别",link:"#任务执行模式识别",children:[]},{level:3,title:"执行时间预测模型",slug:"执行时间预测模型",link:"#执行时间预测模型",children:[]}]},{level:2,title:"智能任务优先级与资源分配",slug:"智能任务优先级与资源分配",link:"#智能任务优先级与资源分配",children:[{level:3,title:"基于强化学习的优先级调度",slug:"基于强化学习的优先级调度",link:"#基于强化学习的优先级调度",children:[]},{level:3,title:"动态资源分配算法",slug:"动态资源分配算法",link:"#动态资源分配算法",children:[]}]},{level:2,title:"AIOps 在调度平台中的应用",slug:"aiops-在调度平台中的应用",link:"#aiops-在调度平台中的应用",children:[{level:3,title:"智能异常检测",slug:"智能异常检测",link:"#智能异常检测",children:[]},{level:3,title:"自动故障诊断与修复",slug:"自动故障诊断与修复",link:"#自动故障诊断与修复",children:[]}]},{level:2,title:"智能调度优化算法",slug:"智能调度优化算法",link:"#智能调度优化算法",children:[{level:3,title:"遗传算法优化调度",slug:"遗传算法优化调度",link:"#遗传算法优化调度",children:[]}]},{level:2,title:"AI 调度系统架构",slug:"ai-调度系统架构",link:"#ai-调度系统架构",children:[{level:3,title:"微服务架构设计",slug:"微服务架构设计",link:"#微服务架构设计",children:[]},{level:3,title:"核心服务实现",slug:"核心服务实现",link:"#核心服务实现",children:[]}]},{level:2,title:"最佳实践与注意事项",slug:"最佳实践与注意事项",link:"#最佳实践与注意事项",children:[{level:3,title:"1. 模型训练与更新",slug:"_1-模型训练与更新",link:"#_1-模型训练与更新",children:[]},{level:3,title:"2. 监控与评估",slug:"_2-监控与评估",link:"#_2-监控与评估",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/schedule/1-6-2-ai-driven-intelligent-scheduling.html",pathLocale:"/",extraFields:[]},{title:"总结与学习路径",headers:[{level:2,title:"内容回顾与总结",slug:"内容回顾与总结",link:"#内容回顾与总结",children:[{level:3,title:"从单机到分布式的演进",slug:"从单机到分布式的演进",link:"#从单机到分布式的演进",children:[]},{level:3,title:"从理论到实践的跨越",slug:"从理论到实践的跨越",link:"#从理论到实践的跨越",children:[]},{level:3,title:"主流框架深度解析",slug:"主流框架深度解析",link:"#主流框架深度解析",children:[]},{level:3,title:"高级架构与思维模式",slug:"高级架构与思维模式",link:"#高级架构与思维模式",children:[]},{level:3,title:"企业级实践应用",slug:"企业级实践应用",link:"#企业级实践应用",children:[]},{level:3,title:"未来发展趋势展望",slug:"未来发展趋势展望",link:"#未来发展趋势展望",children:[]}]},{level:2,title:"从入门到精通的学习路径",slug:"从入门到精通的学习路径",link:"#从入门到精通的学习路径",children:[{level:3,title:"初学者阶段（0-3个月）",slug:"初学者阶段-0-3个月",link:"#初学者阶段-0-3个月",children:[]},{level:3,title:"进阶学习阶段（3-6个月）",slug:"进阶学习阶段-3-6个月",link:"#进阶学习阶段-3-6个月",children:[]},{level:3,title:"高级应用阶段（6-12个月）",slug:"高级应用阶段-6-12个月",link:"#高级应用阶段-6-12个月",children:[]},{level:3,title:"专家级发展阶段（1年以上）",slug:"专家级发展阶段-1年以上",link:"#专家级发展阶段-1年以上",children:[]}]},{level:2,title:"技能树构建",slug:"技能树构建",link:"#技能树构建",children:[{level:3,title:"核心技能",slug:"核心技能",link:"#核心技能",children:[]},{level:3,title:"学习资源推荐",slug:"学习资源推荐",link:"#学习资源推荐",children:[]}]},{level:2,title:"实践项目建议",slug:"实践项目建议",link:"#实践项目建议",children:[{level:3,title:"初级项目",slug:"初级项目",link:"#初级项目",children:[]},{level:3,title:"中级项目",slug:"中级项目",link:"#中级项目",children:[]},{level:3,title:"高级项目",slug:"高级项目",link:"#高级项目",children:[]}]},{level:2,title:"职业发展路径",slug:"职业发展路径",link:"#职业发展路径",children:[{level:3,title:"技术专家路线",slug:"技术专家路线",link:"#技术专家路线",children:[]},{level:3,title:"产品管理路线",slug:"产品管理路线",link:"#产品管理路线",children:[]}]},{level:2,title:"常见问题与解决方案",slug:"常见问题与解决方案",link:"#常见问题与解决方案",children:[{level:3,title:"技术选型困惑",slug:"技术选型困惑",link:"#技术选型困惑",children:[]},{level:3,title:"性能瓶颈处理",slug:"性能瓶颈处理",link:"#性能瓶颈处理",children:[]},{level:3,title:"故障恢复机制",slug:"故障恢复机制",link:"#故障恢复机制",children:[]}]},{level:2,title:"总结与展望",slug:"总结与展望",link:"#总结与展望",children:[]}],path:"/posts/schedule/1-6-3-summary-and-learning-path.html",pathLocale:"/",extraFields:[]},{title:"《分布式任务调度：从入门到精通》索引",headers:[{level:2,title:"目录结构",slug:"目录结构",link:"#目录结构",children:[{level:3,title:"第一部分 基础篇：理解调度",slug:"第一部分-基础篇-理解调度",link:"#第一部分-基础篇-理解调度",children:[]},{level:3,title:"第二部分 实战篇：从零实现一个调度系统",slug:"第二部分-实战篇-从零实现一个调度系统",link:"#第二部分-实战篇-从零实现一个调度系统",children:[]},{level:3,title:"第三部分 框架篇：主流分布式调度框架解析",slug:"第三部分-框架篇-主流分布式调度框架解析",link:"#第三部分-框架篇-主流分布式调度框架解析",children:[]},{level:3,title:"第四部分 高级篇：进阶与架构思维",slug:"第四部分-高级篇-进阶与架构思维",link:"#第四部分-高级篇-进阶与架构思维",children:[]},{level:3,title:"第五部分 实践篇：生产环境落地",slug:"第五部分-实践篇-生产环境落地",link:"#第五部分-实践篇-生产环境落地",children:[]},{level:3,title:"第六部分 展望篇：未来趋势",slug:"第六部分-展望篇-未来趋势",link:"#第六部分-展望篇-未来趋势",children:[]}]}],path:"/posts/schedule/",pathLocale:"/",extraFields:[]},{title:"《分布式任务调度：从入门到精通》目录",headers:[{level:2,title:"第一部分 基础篇：理解调度",slug:"第一部分-基础篇-理解调度",link:"#第一部分-基础篇-理解调度",children:[]},{level:2,title:"第二部分 实战篇：从零实现一个调度系统",slug:"第二部分-实战篇-从零实现一个调度系统",link:"#第二部分-实战篇-从零实现一个调度系统",children:[]},{level:2,title:"第三部分 框架篇：主流分布式调度框架解析",slug:"第三部分-框架篇-主流分布式调度框架解析",link:"#第三部分-框架篇-主流分布式调度框架解析",children:[]},{level:2,title:"第四部分 高级篇：进阶与架构思维",slug:"第四部分-高级篇-进阶与架构思维",link:"#第四部分-高级篇-进阶与架构思维",children:[]},{level:2,title:"第五部分 实践篇：生产环境落地",slug:"第五部分-实践篇-生产环境落地",link:"#第五部分-实践篇-生产环境落地",children:[]},{level:2,title:"第六部分 展望篇：未来趋势",slug:"第六部分-展望篇-未来趋势",link:"#第六部分-展望篇-未来趋势",children:[]}],path:"/posts/schedule/index-desc.html",pathLocale:"/",extraFields:[]},{title:"传统数据库与搜索引擎的技术对决：架构设计与适用场景深度剖析",headers:[{level:2,title:"技术架构的根本差异",slug:"技术架构的根本差异",link:"#技术架构的根本差异",children:[{level:3,title:"传统关系型数据库的架构设计",slug:"传统关系型数据库的架构设计",link:"#传统关系型数据库的架构设计",children:[]},{level:3,title:"搜索引擎的架构设计",slug:"搜索引擎的架构设计",link:"#搜索引擎的架构设计",children:[]}]},{level:2,title:"数据模型的对比分析",slug:"数据模型的对比分析",link:"#数据模型的对比分析",children:[{level:3,title:"关系型数据模型",slug:"关系型数据模型",link:"#关系型数据模型",children:[]},{level:3,title:"文档数据模型",slug:"文档数据模型",link:"#文档数据模型",children:[]}]},{level:2,title:"查询能力的深度对比",slug:"查询能力的深度对比",link:"#查询能力的深度对比",children:[{level:3,title:"传统数据库的查询能力",slug:"传统数据库的查询能力",link:"#传统数据库的查询能力",children:[]},{level:3,title:"搜索引擎的查询能力",slug:"搜索引擎的查询能力",link:"#搜索引擎的查询能力",children:[]}]},{level:2,title:"性能特征对比",slug:"性能特征对比",link:"#性能特征对比",children:[{level:3,title:"传统数据库性能特征",slug:"传统数据库性能特征",link:"#传统数据库性能特征",children:[]},{level:3,title:"搜索引擎性能特征",slug:"搜索引擎性能特征",link:"#搜索引擎性能特征",children:[]}]},{level:2,title:"适用场景分析",slug:"适用场景分析",link:"#适用场景分析",children:[{level:3,title:"传统数据库适用场景",slug:"传统数据库适用场景",link:"#传统数据库适用场景",children:[]},{level:3,title:"搜索引擎适用场景",slug:"搜索引擎适用场景",link:"#搜索引擎适用场景",children:[]}]},{level:2,title:"技术选型建议",slug:"技术选型建议",link:"#技术选型建议",children:[{level:3,title:"选型决策矩阵",slug:"选型决策矩阵",link:"#选型决策矩阵",children:[]},{level:3,title:"混合架构实践",slug:"混合架构实践",link:"#混合架构实践",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-1-1-traditional-database-vs-search-engine.html",pathLocale:"/",extraFields:[]},{title:"OLAP、日志分析与实时分析：现代企业数据处理的三大核心需求",headers:[{level:2,title:"OLAP：多维数据分析的核心引擎",slug:"olap-多维数据分析的核心引擎",link:"#olap-多维数据分析的核心引擎",children:[{level:3,title:"OLAP的基本概念",slug:"olap的基本概念",link:"#olap的基本概念",children:[]},{level:3,title:"OLAP的核心特征",slug:"olap的核心特征",link:"#olap的核心特征",children:[]},{level:3,title:"现代OLAP技术栈",slug:"现代olap技术栈",link:"#现代olap技术栈",children:[]},{level:3,title:"OLAP应用场景",slug:"olap应用场景",link:"#olap应用场景",children:[]}]},{level:2,title:"日志分析：系统洞察的眼睛",slug:"日志分析-系统洞察的眼睛",link:"#日志分析-系统洞察的眼睛",children:[{level:3,title:"日志数据的特征与挑战",slug:"日志数据的特征与挑战",link:"#日志数据的特征与挑战",children:[]},{level:3,title:"现代日志分析架构",slug:"现代日志分析架构",link:"#现代日志分析架构",children:[]},{level:3,title:"日志分析的高级功能",slug:"日志分析的高级功能",link:"#日志分析的高级功能",children:[]},{level:3,title:"日志分析应用场景",slug:"日志分析应用场景",link:"#日志分析应用场景",children:[]}]},{level:2,title:"实时分析：决策的即时支持",slug:"实时分析-决策的即时支持",link:"#实时分析-决策的即时支持",children:[{level:3,title:"实时分析的核心需求",slug:"实时分析的核心需求",link:"#实时分析的核心需求",children:[]},{level:3,title:"实时分析技术栈",slug:"实时分析技术栈",link:"#实时分析技术栈",children:[]},{level:3,title:"实时分析应用场景",slug:"实时分析应用场景",link:"#实时分析应用场景",children:[]}]},{level:2,title:"三大分析需求的融合",slug:"三大分析需求的融合",link:"#三大分析需求的融合",children:[{level:3,title:"统一分析平台架构",slug:"统一分析平台架构",link:"#统一分析平台架构",children:[]},{level:3,title:"Lambda架构实现",slug:"lambda架构实现",link:"#lambda架构实现",children:[]},{level:3,title:"技术选型建议",slug:"技术选型建议",link:"#技术选型建议",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-1-2-olap-log-analytics-realtime-demand.html",pathLocale:"/",extraFields:[]},{title:"企业信息检索与数据驱动决策：构建智能化商业智能体系",headers:[{level:2,title:"企业信息检索的现状与挑战",slug:"企业信息检索的现状与挑战",link:"#企业信息检索的现状与挑战",children:[{level:3,title:"信息孤岛问题",slug:"信息孤岛问题",link:"#信息孤岛问题",children:[]},{level:3,title:"非结构化数据的挑战",slug:"非结构化数据的挑战",link:"#非结构化数据的挑战",children:[]},{level:3,title:"检索效率问题",slug:"检索效率问题",link:"#检索效率问题",children:[]}]},{level:2,title:"现代企业信息检索解决方案",slug:"现代企业信息检索解决方案",link:"#现代企业信息检索解决方案",children:[{level:3,title:"统一搜索平台",slug:"统一搜索平台",link:"#统一搜索平台",children:[]},{level:3,title:"智能化检索功能",slug:"智能化检索功能",link:"#智能化检索功能",children:[]},{level:3,title:"多模态检索",slug:"多模态检索",link:"#多模态检索",children:[]}]},{level:2,title:"数据驱动决策体系构建",slug:"数据驱动决策体系构建",link:"#数据驱动决策体系构建",children:[{level:3,title:"决策支持系统架构",slug:"决策支持系统架构",link:"#决策支持系统架构",children:[]},{level:3,title:"实时决策支持",slug:"实时决策支持",link:"#实时决策支持",children:[]},{level:3,title:"预测性分析",slug:"预测性分析",link:"#预测性分析",children:[]},{level:3,title:"业务智能仪表板",slug:"业务智能仪表板",link:"#业务智能仪表板",children:[]}]},{level:2,title:"企业级应用场景",slug:"企业级应用场景",link:"#企业级应用场景",children:[{level:3,title:"客户关系管理",slug:"客户关系管理",link:"#客户关系管理",children:[]},{level:3,title:"供应链优化",slug:"供应链优化",link:"#供应链优化",children:[]},{level:3,title:"风险管理与合规",slug:"风险管理与合规",link:"#风险管理与合规",children:[]}]},{level:2,title:"技术实现要点",slug:"技术实现要点",link:"#技术实现要点",children:[{level:3,title:"数据治理与质量管理",slug:"数据治理与质量管理",link:"#数据治理与质量管理",children:[]},{level:3,title:"安全与隐私保护",slug:"安全与隐私保护",link:"#安全与隐私保护",children:[]}]},{level:2,title:"最佳实践与实施建议",slug:"最佳实践与实施建议",link:"#最佳实践与实施建议",children:[{level:3,title:"分阶段实施策略",slug:"分阶段实施策略",link:"#分阶段实施策略",children:[]},{level:3,title:"关键成功因素",slug:"关键成功因素",link:"#关键成功因素",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-1-3-enterprise-information-retrieval-data-driven-decision.html",pathLocale:"/",extraFields:[]},{title:"为什么需要搜索与数据分析中间件：数字化时代的数据处理革命",headers:[{level:2,title:"数据爆炸时代的挑战",slug:"数据爆炸时代的挑战",link:"#数据爆炸时代的挑战",children:[{level:3,title:"数据量的指数级增长",slug:"数据量的指数级增长",link:"#数据量的指数级增长",children:[]},{level:3,title:"数据类型的多样化",slug:"数据类型的多样化",link:"#数据类型的多样化",children:[]},{level:3,title:"实时性要求的提升",slug:"实时性要求的提升",link:"#实时性要求的提升",children:[]}]},{level:2,title:"传统数据处理方式的局限性",slug:"传统数据处理方式的局限性",link:"#传统数据处理方式的局限性",children:[{level:3,title:"关系型数据库的瓶颈",slug:"关系型数据库的瓶颈",link:"#关系型数据库的瓶颈",children:[]},{level:3,title:"文件系统的局限性",slug:"文件系统的局限性",link:"#文件系统的局限性",children:[]}]},{level:2,title:"搜索与数据分析中间件的诞生",slug:"搜索与数据分析中间件的诞生",link:"#搜索与数据分析中间件的诞生",children:[{level:3,title:"搜索引擎的演进",slug:"搜索引擎的演进",link:"#搜索引擎的演进",children:[]},{level:3,title:"数据分析平台的发展",slug:"数据分析平台的发展",link:"#数据分析平台的发展",children:[]}]},{level:2,title:"搜索与数据分析中间件的核心价值",slug:"搜索与数据分析中间件的核心价值",link:"#搜索与数据分析中间件的核心价值",children:[{level:3,title:"1. 高性能数据检索",slug:"_1-高性能数据检索",link:"#_1-高性能数据检索",children:[]},{level:3,title:"2. 实时数据分析能力",slug:"_2-实时数据分析能力",link:"#_2-实时数据分析能力",children:[]},{level:3,title:"3. 水平扩展能力",slug:"_3-水平扩展能力",link:"#_3-水平扩展能力",children:[]},{level:3,title:"4. 灵活的数据模型",slug:"_4-灵活的数据模型",link:"#_4-灵活的数据模型",children:[]}]},{level:2,title:"企业级应用场景",slug:"企业级应用场景",link:"#企业级应用场景",children:[{level:3,title:"1. 电子商务搜索",slug:"_1-电子商务搜索",link:"#_1-电子商务搜索",children:[]},{level:3,title:"2. 日志分析与监控",slug:"_2-日志分析与监控",link:"#_2-日志分析与监控",children:[]},{level:3,title:"3. 用户行为分析",slug:"_3-用户行为分析",link:"#_3-用户行为分析",children:[]}]},{level:2,title:"技术发展趋势",slug:"技术发展趋势",link:"#技术发展趋势",children:[{level:3,title:"1. 云原生架构",slug:"_1-云原生架构",link:"#_1-云原生架构",children:[]},{level:3,title:"2. 向量搜索技术",slug:"_2-向量搜索技术",link:"#_2-向量搜索技术",children:[]},{level:3,title:"3. 实时分析与批处理融合",slug:"_3-实时分析与批处理融合",link:"#_3-实时分析与批处理融合",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-1-why-search-and-analytics-middleware.html",pathLocale:"/",extraFields:[]},{title:"深入理解索引机制：倒排索引与正排索引的技术原理解析",headers:[{level:2,title:"索引的本质与分类",slug:"索引的本质与分类",link:"#索引的本质与分类",children:[{level:3,title:"索引的定义",slug:"索引的定义",link:"#索引的定义",children:[]},{level:3,title:"索引的分类",slug:"索引的分类",link:"#索引的分类",children:[]}]},{level:2,title:"正排索引：传统的数据组织方式",slug:"正排索引-传统的数据组织方式",link:"#正排索引-传统的数据组织方式",children:[{level:3,title:"正排索引的结构",slug:"正排索引的结构",link:"#正排索引的结构",children:[]},{level:3,title:"正排索引的实现",slug:"正排索引的实现",link:"#正排索引的实现",children:[]},{level:3,title:"正排索引的优缺点",slug:"正排索引的优缺点",link:"#正排索引的优缺点",children:[]}]},{level:2,title:"倒排索引：搜索引擎的核心技术",slug:"倒排索引-搜索引擎的核心技术",link:"#倒排索引-搜索引擎的核心技术",children:[{level:3,title:"倒排索引的结构",slug:"倒排索引的结构",link:"#倒排索引的结构",children:[]},{level:3,title:"倒排索引的实现",slug:"倒排索引的实现",link:"#倒排索引的实现",children:[]},{level:3,title:"倒排索引的优化技术",slug:"倒排索引的优化技术",link:"#倒排索引的优化技术",children:[]},{level:3,title:"倒排索引的优缺点",slug:"倒排索引的优缺点",link:"#倒排索引的优缺点",children:[]}]},{level:2,title:"倒排索引与正排索引的对比分析",slug:"倒排索引与正排索引的对比分析",link:"#倒排索引与正排索引的对比分析",children:[{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]},{level:3,title:"应用场景对比",slug:"应用场景对比",link:"#应用场景对比",children:[]}]},{level:2,title:"实际应用中的索引技术",slug:"实际应用中的索引技术",link:"#实际应用中的索引技术",children:[{level:3,title:"Elasticsearch中的索引实现",slug:"elasticsearch中的索引实现",link:"#elasticsearch中的索引实现",children:[]},{level:3,title:"Lucene中的倒排索引结构",slug:"lucene中的倒排索引结构",link:"#lucene中的倒排索引结构",children:[]}]},{level:2,title:"索引优化策略",slug:"索引优化策略",link:"#索引优化策略",children:[{level:3,title:"1. 分片策略",slug:"_1-分片策略",link:"#_1-分片策略",children:[]},{level:3,title:"2. 合并策略",slug:"_2-合并策略",link:"#_2-合并策略",children:[]},{level:3,title:"3. 缓存策略",slug:"_3-缓存策略",link:"#_3-缓存策略",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-2-1-index-inverted-index-forward-index.html",pathLocale:"/",extraFields:[]},{title:"文档、字段、分词与分析器：构建搜索与分析系统的基础构件",headers:[{level:2,title:"文档：数据的基本单位",slug:"文档-数据的基本单位",link:"#文档-数据的基本单位",children:[{level:3,title:"文档的定义与特征",slug:"文档的定义与特征",link:"#文档的定义与特征",children:[]},{level:3,title:"文档的生命周期",slug:"文档的生命周期",link:"#文档的生命周期",children:[]}]},{level:2,title:"字段：文档的构成要素",slug:"字段-文档的构成要素",link:"#字段-文档的构成要素",children:[{level:3,title:"字段类型系统",slug:"字段类型系统",link:"#字段类型系统",children:[]},{level:3,title:"字段的特殊属性",slug:"字段的特殊属性",link:"#字段的特殊属性",children:[]}]},{level:2,title:"分词：文本处理的基础",slug:"分词-文本处理的基础",link:"#分词-文本处理的基础",children:[{level:3,title:"分词的概念与重要性",slug:"分词的概念与重要性",link:"#分词的概念与重要性",children:[]},{level:3,title:"分词算法分类",slug:"分词算法分类",link:"#分词算法分类",children:[]},{level:3,title:"中文分词的挑战与解决方案",slug:"中文分词的挑战与解决方案",link:"#中文分词的挑战与解决方案",children:[]}]},{level:2,title:"分析器：文本处理的完整流程",slug:"分析器-文本处理的完整流程",link:"#分析器-文本处理的完整流程",children:[{level:3,title:"分析器的组成结构",slug:"分析器的组成结构",link:"#分析器的组成结构",children:[]},{level:3,title:"内置分析器详解",slug:"内置分析器详解",link:"#内置分析器详解",children:[]},{level:3,title:"自定义分析器实践",slug:"自定义分析器实践",link:"#自定义分析器实践",children:[]},{level:3,title:"多语言分析器配置",slug:"多语言分析器配置",link:"#多语言分析器配置",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商商品搜索优化",slug:"电商商品搜索优化",link:"#电商商品搜索优化",children:[]},{level:3,title:"内容管理系统",slug:"内容管理系统",link:"#内容管理系统",children:[]}]},{level:2,title:"性能优化建议",slug:"性能优化建议",link:"#性能优化建议",children:[{level:3,title:"1. 合理选择字段类型",slug:"_1-合理选择字段类型",link:"#_1-合理选择字段类型",children:[]},{level:3,title:"2. 优化分析器配置",slug:"_2-优化分析器配置",link:"#_2-优化分析器配置",children:[]},{level:3,title:"3. 使用多字段映射",slug:"_3-使用多字段映射",link:"#_3-使用多字段映射",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-2-2-document-field-tokenization-analyzer.html",pathLocale:"/",extraFields:[]},{title:"聚合、过滤、排序与评分：搜索与分析系统的核心操作机制",headers:[{level:2,title:"聚合：数据分析的利器",slug:"聚合-数据分析的利器",link:"#聚合-数据分析的利器",children:[{level:3,title:"聚合的概念与分类",slug:"聚合的概念与分类",link:"#聚合的概念与分类",children:[]},{level:3,title:"Bucket聚合详解",slug:"bucket聚合详解",link:"#bucket聚合详解",children:[]},{level:3,title:"Metric聚合详解",slug:"metric聚合详解",link:"#metric聚合详解",children:[]},{level:3,title:"Pipeline聚合详解",slug:"pipeline聚合详解",link:"#pipeline聚合详解",children:[]},{level:3,title:"复杂聚合示例",slug:"复杂聚合示例",link:"#复杂聚合示例",children:[]}]},{level:2,title:"过滤：精确匹配的关键",slug:"过滤-精确匹配的关键",link:"#过滤-精确匹配的关键",children:[{level:3,title:"过滤的概念与特点",slug:"过滤的概念与特点",link:"#过滤的概念与特点",children:[]},{level:3,title:"常用过滤器",slug:"常用过滤器",link:"#常用过滤器",children:[]},{level:3,title:"过滤器的性能优化",slug:"过滤器的性能优化",link:"#过滤器的性能优化",children:[]}]},{level:2,title:"排序：结果呈现的艺术",slug:"排序-结果呈现的艺术",link:"#排序-结果呈现的艺术",children:[{level:3,title:"排序的基本概念",slug:"排序的基本概念",link:"#排序的基本概念",children:[]},{level:3,title:"排序方式详解",slug:"排序方式详解",link:"#排序方式详解",children:[]},{level:3,title:"多字段排序",slug:"多字段排序",link:"#多字段排序",children:[]},{level:3,title:"排序优化技巧",slug:"排序优化技巧",link:"#排序优化技巧",children:[]}]},{level:2,title:"评分：相关性计算的核心",slug:"评分-相关性计算的核心",link:"#评分-相关性计算的核心",children:[{level:3,title:"评分的基本原理",slug:"评分的基本原理",link:"#评分的基本原理",children:[]},{level:3,title:"评分算法详解",slug:"评分算法详解",link:"#评分算法详解",children:[]},{level:3,title:"自定义评分",slug:"自定义评分",link:"#自定义评分",children:[]},{level:3,title:"评分优化策略",slug:"评分优化策略",link:"#评分优化策略",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商搜索系统",slug:"电商搜索系统",link:"#电商搜索系统",children:[]},{level:3,title:"内容推荐系统",slug:"内容推荐系统",link:"#内容推荐系统",children:[]}]},{level:2,title:"性能优化建议",slug:"性能优化建议",link:"#性能优化建议",children:[{level:3,title:"1. 合理使用聚合",slug:"_1-合理使用聚合",link:"#_1-合理使用聚合",children:[]},{level:3,title:"2. 优化过滤器使用",slug:"_2-优化过滤器使用",link:"#_2-优化过滤器使用",children:[]},{level:3,title:"3. 合理设计排序策略",slug:"_3-合理设计排序策略",link:"#_3-合理设计排序策略",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-2-3-aggregation-filter-sort-scoring.html",pathLocale:"/",extraFields:[]},{title:"搜索与数据分析中间件核心概念：理解索引、文档与聚合的基石",headers:[{level:2,title:"索引：数据组织的核心",slug:"索引-数据组织的核心",link:"#索引-数据组织的核心",children:[{level:3,title:"索引的定义",slug:"索引的定义",link:"#索引的定义",children:[]},{level:3,title:"索引的结构",slug:"索引的结构",link:"#索引的结构",children:[]},{level:3,title:"索引的创建与管理",slug:"索引的创建与管理",link:"#索引的创建与管理",children:[]}]},{level:2,title:"倒排索引与正排索引",slug:"倒排索引与正排索引",link:"#倒排索引与正排索引",children:[{level:3,title:"倒排索引（Inverted Index）",slug:"倒排索引-inverted-index",link:"#倒排索引-inverted-index",children:[]},{level:3,title:"正排索引（Forward Index）",slug:"正排索引-forward-index",link:"#正排索引-forward-index",children:[]}]},{level:2,title:"文档与字段：数据的基本单位",slug:"文档与字段-数据的基本单位",link:"#文档与字段-数据的基本单位",children:[{level:3,title:"文档（Document）",slug:"文档-document",link:"#文档-document",children:[]},{level:3,title:"字段（Field）",slug:"字段-field",link:"#字段-field",children:[]}]},{level:2,title:"分词与分析器：文本处理的核心",slug:"分词与分析器-文本处理的核心",link:"#分词与分析器-文本处理的核心",children:[{level:3,title:"分词（Tokenization）",slug:"分词-tokenization",link:"#分词-tokenization",children:[]},{level:3,title:"分析器（Analyzer）",slug:"分析器-analyzer",link:"#分析器-analyzer",children:[]}]},{level:2,title:"聚合：数据分析的利器",slug:"聚合-数据分析的利器",link:"#聚合-数据分析的利器",children:[{level:3,title:"聚合的概念",slug:"聚合的概念",link:"#聚合的概念",children:[]},{level:3,title:"聚合的类型",slug:"聚合的类型",link:"#聚合的类型",children:[]}]},{level:2,title:"过滤、排序与评分：查询优化的关键",slug:"过滤、排序与评分-查询优化的关键",link:"#过滤、排序与评分-查询优化的关键",children:[{level:3,title:"过滤（Filter）",slug:"过滤-filter",link:"#过滤-filter",children:[]},{level:3,title:"排序（Sort）",slug:"排序-sort",link:"#排序-sort",children:[]},{level:3,title:"评分（Scoring）",slug:"评分-scoring",link:"#评分-scoring",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-2-core-concepts.html",pathLocale:"/",extraFields:[]},{title:"单机与分布式架构深度对比：搜索与分析系统的技术选型指南",headers:[{level:2,title:"单机架构：简单而直接的解决方案",slug:"单机架构-简单而直接的解决方案",link:"#单机架构-简单而直接的解决方案",children:[{level:3,title:"单机架构的定义与特点",slug:"单机架构的定义与特点",link:"#单机架构的定义与特点",children:[]},{level:3,title:"单机架构的技术实现",slug:"单机架构的技术实现",link:"#单机架构的技术实现",children:[]},{level:3,title:"单机架构的优势",slug:"单机架构的优势",link:"#单机架构的优势",children:[]},{level:3,title:"单机架构的局限性",slug:"单机架构的局限性",link:"#单机架构的局限性",children:[]}]},{level:2,title:"分布式架构：可扩展的现代解决方案",slug:"分布式架构-可扩展的现代解决方案",link:"#分布式架构-可扩展的现代解决方案",children:[{level:3,title:"分布式架构的定义与特点",slug:"分布式架构的定义与特点",link:"#分布式架构的定义与特点",children:[]},{level:3,title:"分布式架构的技术实现",slug:"分布式架构的技术实现",link:"#分布式架构的技术实现",children:[]},{level:3,title:"分布式架构的优势",slug:"分布式架构的优势",link:"#分布式架构的优势",children:[]},{level:3,title:"分布式架构的挑战",slug:"分布式架构的挑战",link:"#分布式架构的挑战",children:[]}]},{level:2,title:"架构选型指南",slug:"架构选型指南",link:"#架构选型指南",children:[{level:3,title:"选择单机架构的场景",slug:"选择单机架构的场景",link:"#选择单机架构的场景",children:[]},{level:3,title:"选择分布式架构的场景",slug:"选择分布式架构的场景",link:"#选择分布式架构的场景",children:[]}]},{level:2,title:"性能对比分析",slug:"性能对比分析",link:"#性能对比分析",children:[{level:3,title:"存储容量对比",slug:"存储容量对比",link:"#存储容量对比",children:[]},{level:3,title:"查询性能对比",slug:"查询性能对比",link:"#查询性能对比",children:[]},{level:3,title:"可用性对比",slug:"可用性对比",link:"#可用性对比",children:[]}]},{level:2,title:"成本效益分析",slug:"成本效益分析",link:"#成本效益分析",children:[{level:3,title:"初期投入成本",slug:"初期投入成本",link:"#初期投入成本",children:[]},{level:3,title:"运维成本",slug:"运维成本",link:"#运维成本",children:[]}]},{level:2,title:"迁移策略",slug:"迁移策略",link:"#迁移策略",children:[{level:3,title:"从单机到分布式",slug:"从单机到分布式",link:"#从单机到分布式",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-3-1-standalone-vs-distributed-architecture.html",pathLocale:"/",extraFields:[]},{title:"实时数据流与离线批处理：现代数据处理的双引擎架构",headers:[{level:2,title:"实时数据流处理：即时响应的数据处理引擎",slug:"实时数据流处理-即时响应的数据处理引擎",link:"#实时数据流处理-即时响应的数据处理引擎",children:[{level:3,title:"实时数据流的概念与特征",slug:"实时数据流的概念与特征",link:"#实时数据流的概念与特征",children:[]},{level:3,title:"实时数据流处理架构",slug:"实时数据流处理架构",link:"#实时数据流处理架构",children:[]},{level:3,title:"主流流处理技术",slug:"主流流处理技术",link:"#主流流处理技术",children:[]},{level:3,title:"实时数据流处理的优势",slug:"实时数据流处理的优势",link:"#实时数据流处理的优势",children:[]},{level:3,title:"实时数据流处理的挑战",slug:"实时数据流处理的挑战",link:"#实时数据流处理的挑战",children:[]}]},{level:2,title:"离线批处理：大规模数据处理的重型武器",slug:"离线批处理-大规模数据处理的重型武器",link:"#离线批处理-大规模数据处理的重型武器",children:[{level:3,title:"离线批处理的概念与特征",slug:"离线批处理的概念与特征",link:"#离线批处理的概念与特征",children:[]},{level:3,title:"离线批处理架构",slug:"离线批处理架构",link:"#离线批处理架构",children:[]},{level:3,title:"主流批处理技术",slug:"主流批处理技术",link:"#主流批处理技术",children:[]},{level:3,title:"离线批处理的优势",slug:"离线批处理的优势",link:"#离线批处理的优势",children:[]},{level:3,title:"离线批处理的局限性",slug:"离线批处理的局限性",link:"#离线批处理的局限性",children:[]}]},{level:2,title:"Lambda架构：融合实时与批处理的解决方案",slug:"lambda架构-融合实时与批处理的解决方案",link:"#lambda架构-融合实时与批处理的解决方案",children:[{level:3,title:"Lambda架构的概念",slug:"lambda架构的概念",link:"#lambda架构的概念",children:[]},{level:3,title:"Lambda架构实现",slug:"lambda架构实现",link:"#lambda架构实现",children:[]},{level:3,title:"Lambda架构的优势",slug:"lambda架构的优势",link:"#lambda架构的优势",children:[]},{level:3,title:"Lambda架构的挑战",slug:"lambda架构的挑战",link:"#lambda架构的挑战",children:[]}]},{level:2,title:"Kappa架构：简化的流处理架构",slug:"kappa架构-简化的流处理架构",link:"#kappa架构-简化的流处理架构",children:[{level:3,title:"Kappa架构的概念",slug:"kappa架构的概念",link:"#kappa架构的概念",children:[]},{level:3,title:"Kappa架构实现",slug:"kappa架构实现",link:"#kappa架构实现",children:[]},{level:3,title:"Kappa架构的优势",slug:"kappa架构的优势",link:"#kappa架构的优势",children:[]}]},{level:2,title:"实际应用场景对比",slug:"实际应用场景对比",link:"#实际应用场景对比",children:[{level:3,title:"实时数据流处理适用场景",slug:"实时数据流处理适用场景",link:"#实时数据流处理适用场景",children:[]},{level:3,title:"离线批处理适用场景",slug:"离线批处理适用场景",link:"#离线批处理适用场景",children:[]}]},{level:2,title:"技术选型指南",slug:"技术选型指南",link:"#技术选型指南",children:[{level:3,title:"选择实时数据流处理的考虑因素",slug:"选择实时数据流处理的考虑因素",link:"#选择实时数据流处理的考虑因素",children:[]},{level:3,title:"选择离线批处理的考虑因素",slug:"选择离线批处理的考虑因素",link:"#选择离线批处理的考虑因素",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-3-2-real-time-streaming-vs-batch-processing.html",pathLocale:"/",extraFields:[]},{title:"数据采集、存储、查询与可视化全链路：构建端到端的数据处理生态系统",headers:[{level:2,title:"数据采集层：数据处理的起点",slug:"数据采集层-数据处理的起点",link:"#数据采集层-数据处理的起点",children:[{level:3,title:"数据采集的概念与重要性",slug:"数据采集的概念与重要性",link:"#数据采集的概念与重要性",children:[]},{level:3,title:"数据源类型与特征",slug:"数据源类型与特征",link:"#数据源类型与特征",children:[]},{level:3,title:"数据采集技术栈",slug:"数据采集技术栈",link:"#数据采集技术栈",children:[]},{level:3,title:"数据采集的最佳实践",slug:"数据采集的最佳实践",link:"#数据采集的最佳实践",children:[]}]},{level:2,title:"数据存储层：持久化与高效访问",slug:"数据存储层-持久化与高效访问",link:"#数据存储层-持久化与高效访问",children:[{level:3,title:"数据存储的核心要求",slug:"数据存储的核心要求",link:"#数据存储的核心要求",children:[]},{level:3,title:"存储类型与技术选型",slug:"存储类型与技术选型",link:"#存储类型与技术选型",children:[]},{level:3,title:"存储层的最佳实践",slug:"存储层的最佳实践",link:"#存储层的最佳实践",children:[]}]},{level:2,title:"数据查询层：灵活高效的数据访问",slug:"数据查询层-灵活高效的数据访问",link:"#数据查询层-灵活高效的数据访问",children:[{level:3,title:"查询层的核心要求",slug:"查询层的核心要求",link:"#查询层的核心要求",children:[]},{level:3,title:"查询技术与实现",slug:"查询技术与实现",link:"#查询技术与实现",children:[]},{level:3,title:"查询层的最佳实践",slug:"查询层的最佳实践",link:"#查询层的最佳实践",children:[]}]},{level:2,title:"数据可视化层：直观展现数据价值",slug:"数据可视化层-直观展现数据价值",link:"#数据可视化层-直观展现数据价值",children:[{level:3,title:"可视化层的核心要求",slug:"可视化层的核心要求",link:"#可视化层的核心要求",children:[]},{level:3,title:"可视化工具与技术",slug:"可视化工具与技术",link:"#可视化工具与技术",children:[]},{level:3,title:"可视化层的最佳实践",slug:"可视化层的最佳实践",link:"#可视化层的最佳实践",children:[]}]},{level:2,title:"端到端链路优化",slug:"端到端链路优化",link:"#端到端链路优化",children:[{level:3,title:"链路监控与追踪",slug:"链路监控与追踪",link:"#链路监控与追踪",children:[]},{level:3,title:"错误处理与容错",slug:"错误处理与容错",link:"#错误处理与容错",children:[]},{level:3,title:"性能调优",slug:"性能调优",link:"#性能调优",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-3-3-data-ingestion-storage-query-visualization-pipeline.html",pathLocale:"/",extraFields:[]},{title:"搜索与数据分析架构：从单机到分布式的技术演进之路",headers:[{level:2,title:"架构演进的历史脉络",slug:"架构演进的历史脉络",link:"#架构演进的历史脉络",children:[{level:3,title:"单机时代的局限性",slug:"单机时代的局限性",link:"#单机时代的局限性",children:[]},{level:3,title:"分布式架构的兴起",slug:"分布式架构的兴起",link:"#分布式架构的兴起",children:[]}]},{level:2,title:"单机 vs 分布式架构对比",slug:"单机-vs-分布式架构对比",link:"#单机-vs-分布式架构对比",children:[{level:3,title:"单机架构的特点",slug:"单机架构的特点",link:"#单机架构的特点",children:[]},{level:3,title:"分布式架构的特点",slug:"分布式架构的特点",link:"#分布式架构的特点",children:[]}]},{level:2,title:"实时数据流 vs 离线批处理",slug:"实时数据流-vs-离线批处理",link:"#实时数据流-vs-离线批处理",children:[{level:3,title:"实时数据流处理",slug:"实时数据流处理",link:"#实时数据流处理",children:[]},{level:3,title:"离线批处理",slug:"离线批处理",link:"#离线批处理",children:[]},{level:3,title:"Lambda架构",slug:"lambda架构",link:"#lambda架构",children:[]}]},{level:2,title:"数据采集、存储、查询与可视化链路",slug:"数据采集、存储、查询与可视化链路",link:"#数据采集、存储、查询与可视化链路",children:[{level:3,title:"数据采集层",slug:"数据采集层",link:"#数据采集层",children:[]},{level:3,title:"数据存储层",slug:"数据存储层",link:"#数据存储层",children:[]},{level:3,title:"数据查询层",slug:"数据查询层",link:"#数据查询层",children:[]},{level:3,title:"数据可视化层",slug:"数据可视化层",link:"#数据可视化层",children:[]}]},{level:2,title:"架构设计原则",slug:"架构设计原则",link:"#架构设计原则",children:[{level:3,title:"高可用性设计",slug:"高可用性设计",link:"#高可用性设计",children:[]},{level:3,title:"可扩展性设计",slug:"可扩展性设计",link:"#可扩展性设计",children:[]},{level:3,title:"性能优化设计",slug:"性能优化设计",link:"#性能优化设计",children:[]},{level:3,title:"数据一致性设计",slug:"数据一致性设计",link:"#数据一致性设计",children:[]}]},{level:2,title:"现代架构趋势",slug:"现代架构趋势",link:"#现代架构趋势",children:[{level:3,title:"云原生架构",slug:"云原生架构",link:"#云原生架构",children:[]},{level:3,title:"Serverless架构",slug:"serverless架构",link:"#serverless架构",children:[]},{level:3,title:"边缘计算架构",slug:"边缘计算架构",link:"#边缘计算架构",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/posts/search/1-3-search-analytics-architecture.html",pathLocale:"/",extraFields:[]},{title:"搜索与数据分析中间件：从入门到精通",headers:[{level:2,title:"目录",slug:"目录",link:"#目录",children:[{level:3,title:"第一篇：基础篇 · 搜索与分析概览",slug:"第一篇-基础篇-·-搜索与分析概览",link:"#第一篇-基础篇-·-搜索与分析概览",children:[]}]}],path:"/posts/search/",pathLocale:"/",extraFields:[]},{title:"《搜索 & 数据分析中间件：从入门到精通》目录",headers:[{level:2,title:"第一篇：基础篇 · 搜索与分析概览",slug:"第一篇-基础篇-·-搜索与分析概览",link:"#第一篇-基础篇-·-搜索与分析概览",children:[]},{level:2,title:"第二篇：搜索引擎核心中间件",slug:"第二篇-搜索引擎核心中间件",link:"#第二篇-搜索引擎核心中间件",children:[]},{level:2,title:"第三篇：数据分析中间件",slug:"第三篇-数据分析中间件",link:"#第三篇-数据分析中间件",children:[]},{level:2,title:"第四篇：搜索与分析核心技术",slug:"第四篇-搜索与分析核心技术",link:"#第四篇-搜索与分析核心技术",children:[]},{level:2,title:"第五篇：分布式与高可用设计",slug:"第五篇-分布式与高可用设计",link:"#第五篇-分布式与高可用设计",children:[]},{level:2,title:"第六篇：企业级应用与实践",slug:"第六篇-企业级应用与实践",link:"#第六篇-企业级应用与实践",children:[]},{level:2,title:"第七篇：未来趋势篇",slug:"第七篇-未来趋势篇",link:"#第七篇-未来趋势篇",children:[]}],path:"/posts/search/index-desc.html",pathLocale:"/",extraFields:[]},{title:"为什么需要链路追踪与监控：现代分布式系统的可观测性需求",headers:[{level:2,title:"分布式系统的复杂性挑战",slug:"分布式系统的复杂性挑战",link:"#分布式系统的复杂性挑战",children:[]},{level:2,title:"传统监控手段的局限性",slug:"传统监控手段的局限性",link:"#传统监控手段的局限性",children:[]},{level:2,title:"链路追踪的核心价值",slug:"链路追踪的核心价值",link:"#链路追踪的核心价值",children:[]},{level:2,title:"监控技术的演进",slug:"监控技术的演进",link:"#监控技术的演进",children:[]},{level:2,title:"业务价值的体现",slug:"业务价值的体现",link:"#业务价值的体现",children:[]},{level:2,title:"技术发展趋势",slug:"技术发展趋势",link:"#技术发展趋势",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/1-1-why-distributed-tracing-and-monitoring.html",pathLocale:"/",extraFields:[]},{title:"从单体到分布式：系统架构演进中的监控需求变迁",headers:[{level:2,title:"单体架构时代",slug:"单体架构时代",link:"#单体架构时代",children:[{level:3,title:"单体架构的优势",slug:"单体架构的优势",link:"#单体架构的优势",children:[]},{level:3,title:"单体架构下的监控特点",slug:"单体架构下的监控特点",link:"#单体架构下的监控特点",children:[]},{level:3,title:"单体架构的局限性",slug:"单体架构的局限性",link:"#单体架构的局限性",children:[]}]},{level:2,title:"SOA架构的出现",slug:"soa架构的出现",link:"#soa架构的出现",children:[{level:3,title:"SOA架构的特点",slug:"soa架构的特点",link:"#soa架构的特点",children:[]},{level:3,title:"SOA架构下的监控挑战",slug:"soa架构下的监控挑战",link:"#soa架构下的监控挑战",children:[]}]},{level:2,title:"微服务架构的兴起",slug:"微服务架构的兴起",link:"#微服务架构的兴起",children:[{level:3,title:"微服务架构的优势",slug:"微服务架构的优势",link:"#微服务架构的优势",children:[]},{level:3,title:"微服务架构下的监控复杂性",slug:"微服务架构下的监控复杂性",link:"#微服务架构下的监控复杂性",children:[]}]},{level:2,title:"容器化与云原生时代",slug:"容器化与云原生时代",link:"#容器化与云原生时代",children:[{level:3,title:"容器化架构的特点",slug:"容器化架构的特点",link:"#容器化架构的特点",children:[]},{level:3,title:"云原生架构的监控需求",slug:"云原生架构的监控需求",link:"#云原生架构的监控需求",children:[]}]},{level:2,title:"无服务器架构的挑战",slug:"无服务器架构的挑战",link:"#无服务器架构的挑战",children:[{level:3,title:"无服务器架构的特点",slug:"无服务器架构的特点",link:"#无服务器架构的特点",children:[]},{level:3,title:"无服务器架构的监控挑战",slug:"无服务器架构的监控挑战",link:"#无服务器架构的监控挑战",children:[]}]},{level:2,title:"监控需求的演进总结",slug:"监控需求的演进总结",link:"#监控需求的演进总结",children:[]},{level:2,title:"未来发展趋势",slug:"未来发展趋势",link:"#未来发展趋势",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/1-2-evolution-from-monolith-to-distributed-systems.html",pathLocale:"/",extraFields:[]},{title:"服务调用链的复杂性：微服务架构下的调用关系解析",headers:[{level:2,title:"服务调用链的基本概念",slug:"服务调用链的基本概念",link:"#服务调用链的基本概念",children:[{level:3,title:"调用链的组成要素",slug:"调用链的组成要素",link:"#调用链的组成要素",children:[]},{level:3,title:"调用链示例",slug:"调用链示例",link:"#调用链示例",children:[]}]},{level:2,title:"服务调用链复杂性的表现",slug:"服务调用链复杂性的表现",link:"#服务调用链复杂性的表现",children:[{level:3,title:"调用层级深度",slug:"调用层级深度",link:"#调用层级深度",children:[]},{level:3,title:"服务依赖关系复杂",slug:"服务依赖关系复杂",link:"#服务依赖关系复杂",children:[]},{level:3,title:"异步调用增加复杂性",slug:"异步调用增加复杂性",link:"#异步调用增加复杂性",children:[]},{level:3,title:"跨语言调用",slug:"跨语言调用",link:"#跨语言调用",children:[]}]},{level:2,title:"服务调用链复杂性的成因",slug:"服务调用链复杂性的成因",link:"#服务调用链复杂性的成因",children:[{level:3,title:"业务复杂性驱动",slug:"业务复杂性驱动",link:"#业务复杂性驱动",children:[]},{level:3,title:"技术架构演进",slug:"技术架构演进",link:"#技术架构演进",children:[]},{level:3,title:"组织结构影响",slug:"组织结构影响",link:"#组织结构影响",children:[]}]},{level:2,title:"服务调用链复杂性的影响",slug:"服务调用链复杂性的影响",link:"#服务调用链复杂性的影响",children:[{level:3,title:"性能影响",slug:"性能影响",link:"#性能影响",children:[]},{level:3,title:"可靠性影响",slug:"可靠性影响",link:"#可靠性影响",children:[]},{level:3,title:"可维护性影响",slug:"可维护性影响",link:"#可维护性影响",children:[]}]},{level:2,title:"应对服务调用链复杂性的策略",slug:"应对服务调用链复杂性的策略",link:"#应对服务调用链复杂性的策略",children:[{level:3,title:"链路追踪技术",slug:"链路追踪技术",link:"#链路追踪技术",children:[]},{level:3,title:"服务治理",slug:"服务治理",link:"#服务治理",children:[]},{level:3,title:"架构优化",slug:"架构优化",link:"#架构优化",children:[]}]},{level:2,title:"链路追踪在应对复杂性中的作用",slug:"链路追踪在应对复杂性中的作用",link:"#链路追踪在应对复杂性中的作用",children:[{level:3,title:"调用链可视化",slug:"调用链可视化",link:"#调用链可视化",children:[]},{level:3,title:"性能瓶颈分析",slug:"性能瓶颈分析",link:"#性能瓶颈分析",children:[]},{level:3,title:"故障快速定位",slug:"故障快速定位",link:"#故障快速定位",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/1-3-complexity-of-service-call-chains.html",pathLocale:"/",extraFields:[]},{title:"性能分析与故障诊断：微服务架构下的监控挑战与解决方案",headers:[{level:2,title:"传统监控手段的局限性",slug:"传统监控手段的局限性",link:"#传统监控手段的局限性",children:[{level:3,title:"缺乏端到端的可见性",slug:"缺乏端到端的可见性",link:"#缺乏端到端的可见性",children:[]},{level:3,title:"数据分散与关联困难",slug:"数据分散与关联困难",link:"#数据分散与关联困难",children:[]},{level:3,title:"实时性不足",slug:"实时性不足",link:"#实时性不足",children:[]}]},{level:2,title:"性能分析的难点",slug:"性能分析的难点",link:"#性能分析的难点",children:[{level:3,title:"性能瓶颈难以定位",slug:"性能瓶颈难以定位",link:"#性能瓶颈难以定位",children:[]},{level:3,title:"性能数据的多维度分析",slug:"性能数据的多维度分析",link:"#性能数据的多维度分析",children:[]},{level:3,title:"性能基线的建立",slug:"性能基线的建立",link:"#性能基线的建立",children:[]}]},{level:2,title:"故障诊断的难点",slug:"故障诊断的难点",link:"#故障诊断的难点",children:[{level:3,title:"故障传播路径复杂",slug:"故障传播路径复杂",link:"#故障传播路径复杂",children:[]},{level:3,title:"故障根源分析困难",slug:"故障根源分析困难",link:"#故障根源分析困难",children:[]},{level:3,title:"故障恢复复杂",slug:"故障恢复复杂",link:"#故障恢复复杂",children:[]}]},{level:2,title:"链路追踪与监控技术的应对策略",slug:"链路追踪与监控技术的应对策略",link:"#链路追踪与监控技术的应对策略",children:[{level:3,title:"端到端的调用链追踪",slug:"端到端的调用链追踪",link:"#端到端的调用链追踪",children:[]},{level:3,title:"实时监控与告警",slug:"实时监控与告警",link:"#实时监控与告警",children:[]},{level:3,title:"多维度数据分析",slug:"多维度数据分析",link:"#多维度数据分析",children:[]}]},{level:2,title:"性能分析的最佳实践",slug:"性能分析的最佳实践",link:"#性能分析的最佳实践",children:[{level:3,title:"建立完整的性能指标体系",slug:"建立完整的性能指标体系",link:"#建立完整的性能指标体系",children:[]},{level:3,title:"性能基线管理",slug:"性能基线管理",link:"#性能基线管理",children:[]},{level:3,title:"性能瓶颈识别",slug:"性能瓶颈识别",link:"#性能瓶颈识别",children:[]}]},{level:2,title:"故障诊断的最佳实践",slug:"故障诊断的最佳实践",link:"#故障诊断的最佳实践",children:[{level:3,title:"故障快速发现",slug:"故障快速发现",link:"#故障快速发现",children:[]},{level:3,title:"故障根源分析",slug:"故障根源分析",link:"#故障根源分析",children:[]},{level:3,title:"故障恢复与预防",slug:"故障恢复与预防",link:"#故障恢复与预防",children:[]}]},{level:2,title:"监控工具的选择与使用",slug:"监控工具的选择与使用",link:"#监控工具的选择与使用",children:[{level:3,title:"链路追踪工具",slug:"链路追踪工具",link:"#链路追踪工具",children:[]},{level:3,title:"监控平台",slug:"监控平台",link:"#监控平台",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/1-4-performance-analysis-and-fault-diagnosis.html",pathLocale:"/",extraFields:[]},{title:"核心概念与指标体系：链路追踪与监控的基础理论",headers:[{level:2,title:"链路追踪的核心概念",slug:"链路追踪的核心概念",link:"#链路追踪的核心概念",children:[{level:3,title:"Span（跨度）",slug:"span-跨度",link:"#span-跨度",children:[]},{level:3,title:"Trace（追踪）",slug:"trace-追踪",link:"#trace-追踪",children:[]},{level:3,title:"TraceID与SpanID",slug:"traceid与spanid",link:"#traceid与spanid",children:[]},{level:3,title:"Parent-Span关系",slug:"parent-span关系",link:"#parent-span关系",children:[]}]},{level:2,title:"监控的三大支柱",slug:"监控的三大支柱",link:"#监控的三大支柱",children:[{level:3,title:"Logs（日志）",slug:"logs-日志",link:"#logs-日志",children:[]},{level:3,title:"Metrics（指标）",slug:"metrics-指标",link:"#metrics-指标",children:[]},{level:3,title:"Traces（链路追踪）",slug:"traces-链路追踪",link:"#traces-链路追踪",children:[]}]},{level:2,title:"SLA、SLO与SLI的理解",slug:"sla、slo与sli的理解",link:"#sla、slo与sli的理解",children:[{level:3,title:"SLA（Service Level Agreement）服务等级协议",slug:"sla-service-level-agreement-服务等级协议",link:"#sla-service-level-agreement-服务等级协议",children:[]},{level:3,title:"SLO（Service Level Objective）服务等级目标",slug:"slo-service-level-objective-服务等级目标",link:"#slo-service-level-objective-服务等级目标",children:[]},{level:3,title:"SLI（Service Level Indicator）服务等级指标",slug:"sli-service-level-indicator-服务等级指标",link:"#sli-service-level-indicator-服务等级指标",children:[]}]},{level:2,title:"指标体系设计原则",slug:"指标体系设计原则",link:"#指标体系设计原则",children:[{level:3,title:"业务导向原则",slug:"业务导向原则",link:"#业务导向原则",children:[]},{level:3,title:"分层设计原则",slug:"分层设计原则",link:"#分层设计原则",children:[]},{level:3,title:"可操作性原则",slug:"可操作性原则",link:"#可操作性原则",children:[]},{level:3,title:"平衡性原则",slug:"平衡性原则",link:"#平衡性原则",children:[]},{level:3,title:"可扩展性原则",slug:"可扩展性原则",link:"#可扩展性原则",children:[]}]},{level:2,title:"监控指标的分类",slug:"监控指标的分类",link:"#监控指标的分类",children:[{level:3,title:"按数据类型分类",slug:"按数据类型分类",link:"#按数据类型分类",children:[]},{level:3,title:"按业务层次分类",slug:"按业务层次分类",link:"#按业务层次分类",children:[]},{level:3,title:"按监控目的分类",slug:"按监控目的分类",link:"#按监控目的分类",children:[]}]},{level:2,title:"指标收集与存储",slug:"指标收集与存储",link:"#指标收集与存储",children:[{level:3,title:"指标收集方式",slug:"指标收集方式",link:"#指标收集方式",children:[]},{level:3,title:"指标存储方案",slug:"指标存储方案",link:"#指标存储方案",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/2-1-core-concepts-and-metrics-system.html",pathLocale:"/",extraFields:[]},{title:"链路追踪核心概念详解：Span、Trace与TraceID的深度解析",headers:[{level:2,title:"Span：链路追踪的基本单元",slug:"span-链路追踪的基本单元",link:"#span-链路追踪的基本单元",children:[{level:3,title:"Span的核心属性",slug:"span的核心属性",link:"#span的核心属性",children:[]},{level:3,title:"Span的生命周期",slug:"span的生命周期",link:"#span的生命周期",children:[]},{level:3,title:"Span的类型",slug:"span的类型",link:"#span的类型",children:[]}]},{level:2,title:"Trace：完整的请求追踪",slug:"trace-完整的请求追踪",link:"#trace-完整的请求追踪",children:[{level:3,title:"Trace的结构特征",slug:"trace的结构特征",link:"#trace的结构特征",children:[]},{level:3,title:"Trace的构建过程",slug:"trace的构建过程",link:"#trace的构建过程",children:[]},{level:3,title:"Trace的可视化",slug:"trace的可视化",link:"#trace的可视化",children:[]}]},{level:2,title:"TraceID：全局唯一标识符",slug:"traceid-全局唯一标识符",link:"#traceid-全局唯一标识符",children:[{level:3,title:"TraceID的设计原则",slug:"traceid的设计原则",link:"#traceid的设计原则",children:[]},{level:3,title:"TraceID的生成方式",slug:"traceid的生成方式",link:"#traceid的生成方式",children:[]},{level:3,title:"TraceID的传递机制",slug:"traceid的传递机制",link:"#traceid的传递机制",children:[]}]},{level:2,title:"Span与Trace的关系",slug:"span与trace的关系",link:"#span与trace的关系",children:[{level:3,title:"包含关系",slug:"包含关系",link:"#包含关系",children:[]},{level:3,title:"层次关系",slug:"层次关系",link:"#层次关系",children:[]},{level:3,title:"时间关系",slug:"时间关系",link:"#时间关系",children:[]}]},{level:2,title:"实际应用中的最佳实践",slug:"实际应用中的最佳实践",link:"#实际应用中的最佳实践",children:[{level:3,title:"Span设计最佳实践",slug:"span设计最佳实践",link:"#span设计最佳实践",children:[]},{level:3,title:"Trace构建最佳实践",slug:"trace构建最佳实践",link:"#trace构建最佳实践",children:[]},{level:3,title:"TraceID管理最佳实践",slug:"traceid管理最佳实践",link:"#traceid管理最佳实践",children:[]}]},{level:2,title:"不同追踪系统的实现差异",slug:"不同追踪系统的实现差异",link:"#不同追踪系统的实现差异",children:[{level:3,title:"Zipkin实现",slug:"zipkin实现",link:"#zipkin实现",children:[]},{level:3,title:"Jaeger实现",slug:"jaeger实现",link:"#jaeger实现",children:[]},{level:3,title:"OpenTelemetry实现",slug:"opentelemetry实现",link:"#opentelemetry实现",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/2-2-span-trace-traceid.html",pathLocale:"/",extraFields:[]},{title:"监控三支柱详解：Logs、Metrics、Traces的深度剖析",headers:[{level:2,title:"Logs（日志）：系统的详细记录",slug:"logs-日志-系统的详细记录",link:"#logs-日志-系统的详细记录",children:[{level:3,title:"日志的核心特征",slug:"日志的核心特征",link:"#日志的核心特征",children:[]},{level:3,title:"日志的分类",slug:"日志的分类",link:"#日志的分类",children:[]},{level:3,title:"日志的应用场景",slug:"日志的应用场景",link:"#日志的应用场景",children:[]},{level:3,title:"日志处理的挑战",slug:"日志处理的挑战",link:"#日志处理的挑战",children:[]}]},{level:2,title:"Metrics（指标）：系统的量化度量",slug:"metrics-指标-系统的量化度量",link:"#metrics-指标-系统的量化度量",children:[{level:3,title:"指标的特征",slug:"指标的特征",link:"#指标的特征",children:[]},{level:3,title:"指标的数据类型",slug:"指标的数据类型",link:"#指标的数据类型",children:[]},{level:3,title:"指标的应用场景",slug:"指标的应用场景",link:"#指标的应用场景",children:[]},{level:3,title:"指标的收集方式",slug:"指标的收集方式",link:"#指标的收集方式",children:[]}]},{level:2,title:"Traces（链路追踪）：请求的完整视图",slug:"traces-链路追踪-请求的完整视图",link:"#traces-链路追踪-请求的完整视图",children:[{level:3,title:"链路追踪的特征",slug:"链路追踪的特征",link:"#链路追踪的特征",children:[]},{level:3,title:"链路追踪的核心概念",slug:"链路追踪的核心概念",link:"#链路追踪的核心概念",children:[]},{level:3,title:"链路追踪的应用场景",slug:"链路追踪的应用场景",link:"#链路追踪的应用场景",children:[]}]},{level:2,title:"三大支柱的互补关系",slug:"三大支柱的互补关系",link:"#三大支柱的互补关系",children:[{level:3,title:"信息维度的互补",slug:"信息维度的互补",link:"#信息维度的互补",children:[]},{level:3,title:"应用场景的互补",slug:"应用场景的互补",link:"#应用场景的互补",children:[]},{level:3,title:"数据特性的互补",slug:"数据特性的互补",link:"#数据特性的互补",children:[]}]},{level:2,title:"构建统一的可观测性平台",slug:"构建统一的可观测性平台",link:"#构建统一的可观测性平台",children:[{level:3,title:"统一数据模型",slug:"统一数据模型",link:"#统一数据模型",children:[]},{level:3,title:"统一查询分析",slug:"统一查询分析",link:"#统一查询分析",children:[]},{level:3,title:"统一存储管理",slug:"统一存储管理",link:"#统一存储管理",children:[]}]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[{level:3,title:"Logs最佳实践",slug:"logs最佳实践",link:"#logs最佳实践",children:[]},{level:3,title:"Metrics最佳实践",slug:"metrics最佳实践",link:"#metrics最佳实践",children:[]},{level:3,title:"Traces最佳实践",slug:"traces最佳实践",link:"#traces最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/2-3-logs-metrics-traces.html",pathLocale:"/",extraFields:[]},{title:"SLA、SLO、SLI深度解析：构建可靠服务质量体系的关键要素",headers:[{level:2,title:"SLA、SLO、SLI的基本概念",slug:"sla、slo、sli的基本概念",link:"#sla、slo、sli的基本概念",children:[{level:3,title:"SLA（Service Level Agreement）服务等级协议",slug:"sla-service-level-agreement-服务等级协议",link:"#sla-service-level-agreement-服务等级协议",children:[]},{level:3,title:"SLO（Service Level Objective）服务等级目标",slug:"slo-service-level-objective-服务等级目标",link:"#slo-service-level-objective-服务等级目标",children:[]},{level:3,title:"SLI（Service Level Indicator）服务等级指标",slug:"sli-service-level-indicator-服务等级指标",link:"#sli-service-level-indicator-服务等级指标",children:[]}]},{level:2,title:"三者之间的关系",slug:"三者之间的关系",link:"#三者之间的关系",children:[{level:3,title:"层次关系",slug:"层次关系",link:"#层次关系",children:[]},{level:3,title:"相互关系",slug:"相互关系",link:"#相互关系",children:[]},{level:3,title:"设计原则",slug:"设计原则",link:"#设计原则",children:[]}]},{level:2,title:"SLI的设计与实现",slug:"sli的设计与实现",link:"#sli的设计与实现",children:[{level:3,title:"SLI的选择标准",slug:"sli的选择标准",link:"#sli的选择标准",children:[]},{level:3,title:"常见的SLI类型",slug:"常见的sli类型",link:"#常见的sli类型",children:[]},{level:3,title:"SLI的测量方法",slug:"sli的测量方法",link:"#sli的测量方法",children:[]},{level:3,title:"SLI实现的技术考虑",slug:"sli实现的技术考虑",link:"#sli实现的技术考虑",children:[]}]},{level:2,title:"SLO的设计与管理",slug:"slo的设计与管理",link:"#slo的设计与管理",children:[{level:3,title:"SLO目标设定",slug:"slo目标设定",link:"#slo目标设定",children:[]},{level:3,title:"SLO的分类",slug:"slo的分类",link:"#slo的分类",children:[]},{level:3,title:"SLO的管理策略",slug:"slo的管理策略",link:"#slo的管理策略",children:[]}]},{level:2,title:"SLA的设计与实施",slug:"sla的设计与实施",link:"#sla的设计与实施",children:[{level:3,title:"SLA条款设计",slug:"sla条款设计",link:"#sla条款设计",children:[]},{level:3,title:"SLA实施要点",slug:"sla实施要点",link:"#sla实施要点",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"云服务提供商的SLA实践",slug:"云服务提供商的sla实践",link:"#云服务提供商的sla实践",children:[]},{level:3,title:"电商平台的SLO实践",slug:"电商平台的slo实践",link:"#电商平台的slo实践",children:[]},{level:3,title:"移动应用的SLI实践",slug:"移动应用的sli实践",link:"#移动应用的sli实践",children:[]}]},{level:2,title:"最佳实践建议",slug:"最佳实践建议",link:"#最佳实践建议",children:[{level:3,title:"SLI设计最佳实践",slug:"sli设计最佳实践",link:"#sli设计最佳实践",children:[]},{level:3,title:"SLO设定最佳实践",slug:"slo设定最佳实践",link:"#slo设定最佳实践",children:[]},{level:3,title:"SLA制定最佳实践",slug:"sla制定最佳实践",link:"#sla制定最佳实践",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/2-4-sla-slo-sli.html",pathLocale:"/",extraFields:[]},{title:"指标体系设计原则：构建科学有效的监控体系",headers:[{level:2,title:"指标体系设计的核心原则",slug:"指标体系设计的核心原则",link:"#指标体系设计的核心原则",children:[{level:3,title:"业务导向原则",slug:"业务导向原则",link:"#业务导向原则",children:[]},{level:3,title:"分层设计原则",slug:"分层设计原则",link:"#分层设计原则",children:[]},{level:3,title:"可操作性原则",slug:"可操作性原则",link:"#可操作性原则",children:[]},{level:3,title:"平衡性原则",slug:"平衡性原则",link:"#平衡性原则",children:[]},{level:3,title:"可扩展性原则",slug:"可扩展性原则",link:"#可扩展性原则",children:[]}]},{level:2,title:"指标分类与选择",slug:"指标分类与选择",link:"#指标分类与选择",children:[{level:3,title:"按数据类型分类",slug:"按数据类型分类",link:"#按数据类型分类",children:[]},{level:3,title:"按业务层次分类",slug:"按业务层次分类",link:"#按业务层次分类",children:[]},{level:3,title:"按监控目的分类",slug:"按监控目的分类",link:"#按监控目的分类",children:[]}]},{level:2,title:"指标命名规范",slug:"指标命名规范",link:"#指标命名规范",children:[{level:3,title:"命名结构",slug:"命名结构",link:"#命名结构",children:[]},{level:3,title:"命名原则",slug:"命名原则",link:"#命名原则",children:[]}]},{level:2,title:"指标收集与存储",slug:"指标收集与存储",link:"#指标收集与存储",children:[{level:3,title:"指标收集方式",slug:"指标收集方式",link:"#指标收集方式",children:[]},{level:3,title:"指标存储方案",slug:"指标存储方案",link:"#指标存储方案",children:[]}]},{level:2,title:"指标质量保障",slug:"指标质量保障",link:"#指标质量保障",children:[{level:3,title:"数据准确性",slug:"数据准确性",link:"#数据准确性",children:[]},{level:3,title:"数据完整性",slug:"数据完整性",link:"#数据完整性",children:[]}]},{level:2,title:"指标体系的演进与维护",slug:"指标体系的演进与维护",link:"#指标体系的演进与维护",children:[{level:3,title:"定期评估",slug:"定期评估",link:"#定期评估",children:[]},{level:3,title:"持续优化",slug:"持续优化",link:"#持续优化",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商平台指标体系",slug:"电商平台指标体系",link:"#电商平台指标体系",children:[]},{level:3,title:"金融服务指标体系",slug:"金融服务指标体系",link:"#金融服务指标体系",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/2-5-metrics-system-design-principles.html",pathLocale:"/",extraFields:[]},{title:"日志结构化与非结构化：现代日志处理的基础概念",headers:[{level:2,title:"日志的基本概念",slug:"日志的基本概念",link:"#日志的基本概念",children:[{level:3,title:"日志的重要性",slug:"日志的重要性",link:"#日志的重要性",children:[]}]},{level:2,title:"结构化日志",slug:"结构化日志",link:"#结构化日志",children:[{level:3,title:"结构化日志的特点",slug:"结构化日志的特点",link:"#结构化日志的特点",children:[]},{level:3,title:"结构化日志的优势",slug:"结构化日志的优势",link:"#结构化日志的优势",children:[]},{level:3,title:"结构化日志的实现",slug:"结构化日志的实现",link:"#结构化日志的实现",children:[]},{level:3,title:"结构化日志的最佳实践",slug:"结构化日志的最佳实践",link:"#结构化日志的最佳实践",children:[]}]},{level:2,title:"非结构化日志",slug:"非结构化日志",link:"#非结构化日志",children:[{level:3,title:"非结构化日志的特点",slug:"非结构化日志的特点",link:"#非结构化日志的特点",children:[]},{level:3,title:"非结构化日志的示例",slug:"非结构化日志的示例",link:"#非结构化日志的示例",children:[]},{level:3,title:"非结构化日志的处理挑战",slug:"非结构化日志的处理挑战",link:"#非结构化日志的处理挑战",children:[]}]},{level:2,title:"结构化与非结构化的对比",slug:"结构化与非结构化的对比",link:"#结构化与非结构化的对比",children:[{level:3,title:"处理效率对比",slug:"处理效率对比",link:"#处理效率对比",children:[]},{level:3,title:"适用场景对比",slug:"适用场景对比",link:"#适用场景对比",children:[]}]},{level:2,title:"日志结构化转换",slug:"日志结构化转换",link:"#日志结构化转换",children:[{level:3,title:"转换策略",slug:"转换策略",link:"#转换策略",children:[]},{level:3,title:"转换工具",slug:"转换工具",link:"#转换工具",children:[]},{level:3,title:"转换示例",slug:"转换示例",link:"#转换示例",children:[]}]},{level:2,title:"结构化日志设计原则",slug:"结构化日志设计原则",link:"#结构化日志设计原则",children:[{level:3,title:"字段设计原则",slug:"字段设计原则",link:"#字段设计原则",children:[]},{level:3,title:"时间戳设计",slug:"时间戳设计",link:"#时间戳设计",children:[]},{level:3,title:"日志级别设计",slug:"日志级别设计",link:"#日志级别设计",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商平台日志结构化",slug:"电商平台日志结构化",link:"#电商平台日志结构化",children:[]},{level:3,title:"金融服务日志结构化",slug:"金融服务日志结构化",link:"#金融服务日志结构化",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/4-1-log-structured-and-unstructured.html",pathLocale:"/",extraFields:[]},{title:"日志采集工具详解：Fluentd、Logstash、Filebeat的对比与选择",headers:[{level:2,title:"日志采集工具概述",slug:"日志采集工具概述",link:"#日志采集工具概述",children:[]},{level:2,title:"Fluentd：云原生日志采集器",slug:"fluentd-云原生日志采集器",link:"#fluentd-云原生日志采集器",children:[{level:3,title:"Fluentd的核心特性",slug:"fluentd的核心特性",link:"#fluentd的核心特性",children:[]},{level:3,title:"Fluentd架构",slug:"fluentd架构",link:"#fluentd架构",children:[]},{level:3,title:"Fluentd配置示例",slug:"fluentd配置示例",link:"#fluentd配置示例",children:[]},{level:3,title:"Fluentd的优势",slug:"fluentd的优势",link:"#fluentd的优势",children:[]},{level:3,title:"Fluentd的局限性",slug:"fluentd的局限性",link:"#fluentd的局限性",children:[]}]},{level:2,title:"Logstash：强大的数据处理管道",slug:"logstash-强大的数据处理管道",link:"#logstash-强大的数据处理管道",children:[{level:3,title:"Logstash的核心特性",slug:"logstash的核心特性",link:"#logstash的核心特性",children:[]},{level:3,title:"Logstash架构",slug:"logstash架构",link:"#logstash架构",children:[]},{level:3,title:"Logstash配置示例",slug:"logstash配置示例",link:"#logstash配置示例",children:[]},{level:3,title:"Logstash的优势",slug:"logstash的优势",link:"#logstash的优势",children:[]},{level:3,title:"Logstash的局限性",slug:"logstash的局限性",link:"#logstash的局限性",children:[]}]},{level:2,title:"Filebeat：轻量级日志Shipper",slug:"filebeat-轻量级日志shipper",link:"#filebeat-轻量级日志shipper",children:[{level:3,title:"Filebeat的核心特性",slug:"filebeat的核心特性",link:"#filebeat的核心特性",children:[]},{level:3,title:"Filebeat架构",slug:"filebeat架构",link:"#filebeat架构",children:[]},{level:3,title:"Filebeat配置示例",slug:"filebeat配置示例",link:"#filebeat配置示例",children:[]},{level:3,title:"Filebeat的优势",slug:"filebeat的优势",link:"#filebeat的优势",children:[]},{level:3,title:"Filebeat的局限性",slug:"filebeat的局限性",link:"#filebeat的局限性",children:[]}]},{level:2,title:"工具对比与选择指南",slug:"工具对比与选择指南",link:"#工具对比与选择指南",children:[{level:3,title:"性能对比",slug:"性能对比",link:"#性能对比",children:[]},{level:3,title:"功能对比",slug:"功能对比",link:"#功能对比",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]}]},{level:2,title:"实际部署建议",slug:"实际部署建议",link:"#实际部署建议",children:[{level:3,title:"混合部署策略",slug:"混合部署策略",link:"#混合部署策略",children:[]},{level:3,title:"部署架构示例",slug:"部署架构示例",link:"#部署架构示例",children:[]}]},{level:2,title:"最佳实践",slug:"最佳实践",link:"#最佳实践",children:[{level:3,title:"配置管理",slug:"配置管理",link:"#配置管理",children:[]},{level:3,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[]},{level:3,title:"故障处理",slug:"故障处理",link:"#故障处理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/4-2-log-collection-tools.html",pathLocale:"/",extraFields:[]},{title:"分布式日志聚合与查询：构建高效的日志分析体系",headers:[{level:2,title:"分布式日志聚合的挑战",slug:"分布式日志聚合的挑战",link:"#分布式日志聚合的挑战",children:[{level:3,title:"数据分散性挑战",slug:"数据分散性挑战",link:"#数据分散性挑战",children:[]},{level:3,title:"数据量挑战",slug:"数据量挑战",link:"#数据量挑战",children:[]},{level:3,title:"数据格式挑战",slug:"数据格式挑战",link:"#数据格式挑战",children:[]}]},{level:2,title:"分布式日志聚合架构",slug:"分布式日志聚合架构",link:"#分布式日志聚合架构",children:[{level:3,title:"典型架构模式",slug:"典型架构模式",link:"#典型架构模式",children:[]},{level:3,title:"核心组件",slug:"核心组件",link:"#核心组件",children:[]}]},{level:2,title:"日志收集策略",slug:"日志收集策略",link:"#日志收集策略",children:[{level:3,title:"主动收集 vs 被动收集",slug:"主动收集-vs-被动收集",link:"#主动收集-vs-被动收集",children:[]},{level:3,title:"实时收集 vs 批量收集",slug:"实时收集-vs-批量收集",link:"#实时收集-vs-批量收集",children:[]},{level:3,title:"文件轮转处理",slug:"文件轮转处理",link:"#文件轮转处理",children:[]}]},{level:2,title:"传输层设计",slug:"传输层设计",link:"#传输层设计",children:[{level:3,title:"可靠传输机制",slug:"可靠传输机制",link:"#可靠传输机制",children:[]},{level:3,title:"数据压缩",slug:"数据压缩",link:"#数据压缩",children:[]},{level:3,title:"加密传输",slug:"加密传输",link:"#加密传输",children:[]}]},{level:2,title:"缓冲层实现",slug:"缓冲层实现",link:"#缓冲层实现",children:[{level:3,title:"内存缓冲",slug:"内存缓冲",link:"#内存缓冲",children:[]},{level:3,title:"磁盘缓冲",slug:"磁盘缓冲",link:"#磁盘缓冲",children:[]},{level:3,title:"混合缓冲",slug:"混合缓冲",link:"#混合缓冲",children:[]}]},{level:2,title:"处理层设计",slug:"处理层设计",link:"#处理层设计",children:[{level:3,title:"数据解析",slug:"数据解析",link:"#数据解析",children:[]},{level:3,title:"数据丰富",slug:"数据丰富",link:"#数据丰富",children:[]},{level:3,title:"数据过滤",slug:"数据过滤",link:"#数据过滤",children:[]}]},{level:2,title:"存储层设计",slug:"存储层设计",link:"#存储层设计",children:[{level:3,title:"存储系统选择",slug:"存储系统选择",link:"#存储系统选择",children:[]},{level:3,title:"索引策略",slug:"索引策略",link:"#索引策略",children:[]},{level:3,title:"数据生命周期管理",slug:"数据生命周期管理",link:"#数据生命周期管理",children:[]}]},{level:2,title:"查询层实现",slug:"查询层实现",link:"#查询层实现",children:[{level:3,title:"查询接口设计",slug:"查询接口设计",link:"#查询接口设计",children:[]},{level:3,title:"查询优化",slug:"查询优化",link:"#查询优化",children:[]},{level:3,title:"实时查询 vs 批量查询",slug:"实时查询-vs-批量查询",link:"#实时查询-vs-批量查询",children:[]}]},{level:2,title:"性能优化策略",slug:"性能优化策略",link:"#性能优化策略",children:[{level:3,title:"资源优化",slug:"资源优化",link:"#资源优化",children:[]},{level:3,title:"架构优化",slug:"架构优化",link:"#架构优化",children:[]},{level:3,title:"算法优化",slug:"算法优化",link:"#算法优化",children:[]}]},{level:2,title:"监控与告警",slug:"监控与告警",link:"#监控与告警",children:[{level:3,title:"系统监控",slug:"系统监控",link:"#系统监控",children:[]},{level:3,title:"性能监控",slug:"性能监控",link:"#性能监控",children:[]},{level:3,title:"告警机制",slug:"告警机制",link:"#告警机制",children:[]}]},{level:2,title:"安全与合规",slug:"安全与合规",link:"#安全与合规",children:[{level:3,title:"数据安全",slug:"数据安全",link:"#数据安全",children:[]},{level:3,title:"合规要求",slug:"合规要求",link:"#合规要求",children:[]}]},{level:2,title:"实际应用案例",slug:"实际应用案例",link:"#实际应用案例",children:[{level:3,title:"电商平台日志聚合",slug:"电商平台日志聚合",link:"#电商平台日志聚合",children:[]},{level:3,title:"金融服务日志聚合",slug:"金融服务日志聚合",link:"#金融服务日志聚合",children:[]}]},{level:2,title:"最佳实践总结",slug:"最佳实践总结",link:"#最佳实践总结",children:[{level:3,title:"设计原则",slug:"设计原则",link:"#设计原则",children:[]},{level:3,title:"实施建议",slug:"实施建议",link:"#实施建议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/4-3-distributed-log-aggregation-and-query.html",pathLocale:"/",extraFields:[]},{title:"日志分析与故障排查：从数据到洞察的实践指南",headers:[{level:2,title:"日志分析的价值与挑战",slug:"日志分析的价值与挑战",link:"#日志分析的价值与挑战",children:[{level:3,title:"日志分析的核心价值",slug:"日志分析的核心价值",link:"#日志分析的核心价值",children:[]},{level:3,title:"日志分析面临的主要挑战",slug:"日志分析面临的主要挑战",link:"#日志分析面临的主要挑战",children:[]}]},{level:2,title:"日志分析方法论",slug:"日志分析方法论",link:"#日志分析方法论",children:[{level:3,title:"结构化分析方法",slug:"结构化分析方法",link:"#结构化分析方法",children:[]},{level:3,title:"机器学习分析方法",slug:"机器学习分析方法",link:"#机器学习分析方法",children:[]},{level:3,title:"实时流分析方法",slug:"实时流分析方法",link:"#实时流分析方法",children:[]}]},{level:2,title:"故障排查流程",slug:"故障排查流程",link:"#故障排查流程",children:[{level:3,title:"故障发现阶段",slug:"故障发现阶段",link:"#故障发现阶段",children:[]},{level:3,title:"信息收集阶段",slug:"信息收集阶段",link:"#信息收集阶段",children:[]},{level:3,title:"根因分析阶段",slug:"根因分析阶段",link:"#根因分析阶段",children:[]},{level:3,title:"问题解决阶段",slug:"问题解决阶段",link:"#问题解决阶段",children:[]}]},{level:2,title:"日志分析工具与技术",slug:"日志分析工具与技术",link:"#日志分析工具与技术",children:[{level:3,title:"日志分析平台",slug:"日志分析平台",link:"#日志分析平台",children:[]},{level:3,title:"查询语言与接口",slug:"查询语言与接口",link:"#查询语言与接口",children:[]},{level:3,title:"可视化技术",slug:"可视化技术",link:"#可视化技术",children:[]}]},{level:2,title:"故障排查最佳实践",slug:"故障排查最佳实践",link:"#故障排查最佳实践",children:[{level:3,title:"建立完善的日志规范",slug:"建立完善的日志规范",link:"#建立完善的日志规范",children:[]},{level:3,title:"构建端到端追踪能力",slug:"构建端到端追踪能力",link:"#构建端到端追踪能力",children:[]},{level:3,title:"实施智能告警机制",slug:"实施智能告警机制",link:"#实施智能告警机制",children:[]},{level:3,title:"建立知识库和经验分享机制",slug:"建立知识库和经验分享机制",link:"#建立知识库和经验分享机制",children:[]}]},{level:2,title:"实际案例分析",slug:"实际案例分析",link:"#实际案例分析",children:[{level:3,title:"电商系统性能问题排查",slug:"电商系统性能问题排查",link:"#电商系统性能问题排查",children:[]},{level:3,title:"金融服务安全事件分析",slug:"金融服务安全事件分析",link:"#金融服务安全事件分析",children:[]},{level:3,title:"微服务架构故障传播分析",slug:"微服务架构故障传播分析",link:"#微服务架构故障传播分析",children:[]}]},{level:2,title:"自动化与智能化趋势",slug:"自动化与智能化趋势",link:"#自动化与智能化趋势",children:[{level:3,title:"自动化日志分析",slug:"自动化日志分析",link:"#自动化日志分析",children:[]},{level:3,title:"智能化故障预测",slug:"智能化故障预测",link:"#智能化故障预测",children:[]},{level:3,title:"AIOps应用",slug:"aiops应用",link:"#aiops应用",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/posts/trace/4-4-log-analysis-and-troubleshooting.html",pathLocale:"/",extraFields:[]},{title:"链路追踪 & 监控中间件：从入门到精通",headers:[{level:2,title:"第一篇：基础篇 · 理解链路与监控",slug:"第一篇-基础篇-·-理解链路与监控",link:"#第一篇-基础篇-·-理解链路与监控",children:[{level:3,title:"第1章 为什么需要链路追踪与监控",slug:"第1章-为什么需要链路追踪与监控",link:"#第1章-为什么需要链路追踪与监控",children:[]},{level:3,title:"第2章 核心概念与指标体系",slug:"第2章-核心概念与指标体系",link:"#第2章-核心概念与指标体系",children:[]}]},{level:2,title:"其他文件",slug:"其他文件",link:"#其他文件",children:[]}],path:"/posts/trace/",pathLocale:"/",extraFields:[]},{title:"《链路追踪 & 监控中间件：从入门到精通》目录",headers:[{level:2,title:"第一篇：基础篇 · 理解链路与监控",slug:"第一篇-基础篇-·-理解链路与监控",link:"#第一篇-基础篇-·-理解链路与监控",children:[]},{level:2,title:"第二篇：数据采集篇",slug:"第二篇-数据采集篇",link:"#第二篇-数据采集篇",children:[]},{level:2,title:"第三篇：核心中间件篇",slug:"第三篇-核心中间件篇",link:"#第三篇-核心中间件篇",children:[]},{level:2,title:"第四篇：实践篇 · 构建完整的可观测体系",slug:"第四篇-实践篇-·-构建完整的可观测体系",link:"#第四篇-实践篇-·-构建完整的可观测体系",children:[]},{level:2,title:"第五篇：高阶篇 · 性能优化与扩展",slug:"第五篇-高阶篇-·-性能优化与扩展",link:"#第五篇-高阶篇-·-性能优化与扩展",children:[]},{level:2,title:"第六篇：企业级落地篇",slug:"第六篇-企业级落地篇",link:"#第六篇-企业级落地篇",children:[]},{level:2,title:"第七篇：未来趋势篇",slug:"第七篇-未来趋势篇",link:"#第七篇-未来趋势篇",children:[]}],path:"/posts/trace/index-desc.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]},{title:"Posts",headers:[],path:"/posts/",pathLocale:"/",extraFields:[]},{title:"Distributed Tx",headers:[],path:"/posts/distributed-tx/",pathLocale:"/",extraFields:[]},{title:"Cache",headers:[],path:"/posts/cache/",pathLocale:"/",extraFields:[]},{title:"Rpc",headers:[],path:"/posts/rpc/",pathLocale:"/",extraFields:[]},{title:"分类",headers:[],path:"/category/",pathLocale:"/",extraFields:[]},{title:"ApiGateway 分类",headers:[],path:"/category/apigateway/",pathLocale:"/",extraFields:[]},{title:"DisTx 分类",headers:[],path:"/category/distx/",pathLocale:"/",extraFields:[]},{title:"Cache 分类",headers:[],path:"/category/cache/",pathLocale:"/",extraFields:[]},{title:"MQ 分类",headers:[],path:"/category/mq/",pathLocale:"/",extraFields:[]},{title:"RegisterCenter 分类",headers:[],path:"/category/registercenter/",pathLocale:"/",extraFields:[]},{title:"rpc 分类",headers:[],path:"/category/rpc/",pathLocale:"/",extraFields:[]},{title:"Schedule 分类",headers:[],path:"/category/schedule/",pathLocale:"/",extraFields:[]},{title:"Search 分类",headers:[],path:"/category/search/",pathLocale:"/",extraFields:[]},{title:"Trace 分类",headers:[],path:"/category/trace/",pathLocale:"/",extraFields:[]},{title:"标签",headers:[],path:"/tag/",pathLocale:"/",extraFields:[]},{title:"标签: api-gateway",headers:[],path:"/tag/api-gateway/",pathLocale:"/",extraFields:[]},{title:"标签: dis-tx",headers:[],path:"/tag/dis-tx/",pathLocale:"/",extraFields:[]},{title:"标签: cache",headers:[],path:"/tag/cache/",pathLocale:"/",extraFields:[]},{title:"标签: mq",headers:[],path:"/tag/mq/",pathLocale:"/",extraFields:[]},{title:"标签: register-center",headers:[],path:"/tag/register-center/",pathLocale:"/",extraFields:[]},{title:"标签: microservices",headers:[],path:"/tag/microservices/",pathLocale:"/",extraFields:[]},{title:"标签: service-discovery",headers:[],path:"/tag/service-discovery/",pathLocale:"/",extraFields:[]},{title:"标签: heartbeat",headers:[],path:"/tag/heartbeat/",pathLocale:"/",extraFields:[]},{title:"标签: apollo",headers:[],path:"/tag/apollo/",pathLocale:"/",extraFields:[]},{title:"标签: rpc",headers:[],path:"/tag/rpc/",pathLocale:"/",extraFields:[]},{title:"标签: schedule",headers:[],path:"/tag/schedule/",pathLocale:"/",extraFields:[]},{title:"标签: search",headers:[],path:"/tag/search/",pathLocale:"/",extraFields:[]},{title:"标签: data-analysis",headers:[],path:"/tag/data-analysis/",pathLocale:"/",extraFields:[]},{title:"标签: trace",headers:[],path:"/tag/trace/",pathLocale:"/",extraFields:[]},{title:"标签: monitor",headers:[],path:"/tag/monitor/",pathLocale:"/",extraFields:[]},{title:"文章",headers:[],path:"/article/",pathLocale:"/",extraFields:[]},{title:"星标",headers:[],path:"/star/",pathLocale:"/",extraFields:[]},{title:"时间轴",headers:[],path:"/timeline/",pathLocale:"/",extraFields:[]}],L4=ii(x4),R4=()=>L4,P4=/[^\x00-\x7F]/,I4=i=>i.split(/\s+/g).map(s=>s.trim()).filter(s=>!!s),br=i=>i.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),_r=(i,s)=>{const l=s.join(" "),e=I4(i);if(P4.test(i))return e.some(t=>l.toLowerCase().includes(t));const n=i.endsWith(" ");return new RegExp(`${e.map((t,a)=>e.length===a+1&&!n?`(?=.*\\b${br(t)})`:`(?=.*\\b${br(t)}\\b)`).join("")}.+`,"gi").test(l)},O4=({searchIndex:i,routeLocale:s,query:l,maxSuggestions:e})=>{const n=C(()=>i.value.filter(t=>t.pathLocale===s.value));return C(()=>{const t=l.value.trim().toLowerCase();if(!t)return[];const a=[],h=(k,d)=>{_r(t,[d.title])&&a.push({link:`${k.path}#${d.slug}`,title:k.title,header:d.title});for(const p of d.children){if(a.length>=e.value)return;h(k,p)}};for(const k of n.value){if(a.length>=e.value)break;if(_r(t,[k.title,...k.extraFields])){a.push({link:k.path,title:k.title});continue}for(const d of k.headers){if(a.length>=e.value)break;h(k,d)}}return a})},M4=i=>{const s=ii(0);return{focusIndex:s,focusNext:()=>{s.value<i.value.length-1?s.value+=1:s.value=0},focusPrev:()=>{s.value>0?s.value-=1:s.value=i.value.length-1}}},N4=O({name:"SearchBox",props:{locales:{type:Object,default:()=>({})},hotKeys:Array,maxSuggestions:{type:Number,default:5}},setup(i){const{locales:s,hotKeys:l,maxSuggestions:e}=da(i),n=Ll(s),t=Xs(),a=_a(),h=R4(),k=ii(null),d=ii(!1),p=ii(""),c=O4({searchIndex:h,routeLocale:a,query:p,maxSuggestions:e}),{focusIndex:g,focusNext:o,focusPrev:B}=M4(c);V3(l,()=>{k.value?.focus()});const m=C(()=>d.value&&!!c.value.length),E=()=>{m.value&&B()},_=()=>{m.value&&o()},f=A=>{if(!m.value)return;const F=c.value[A];F&&t.push(F.link).then(()=>{p.value="",g.value=0})};return()=>r("form",{class:"search-box",role:"search"},[r("input",{ref:k,type:"search",placeholder:n.value.placeholder,autocomplete:"off",spellcheck:!1,value:p.value,onFocus:()=>{d.value=!0},onBlur:()=>{d.value=!1},onInput:A=>{p.value=A.target.value},onKeydown:A=>{switch(A.key){case"ArrowUp":{E();break}case"ArrowDown":{_();break}case"Enter":{A.preventDefault(),f(g.value);break}}}}),m.value&&r("ul",{class:"suggestions",onMouseleave:()=>{g.value=-1}},c.value.map(({link:A,title:F,header:w},j)=>r("li",{class:["suggestion",{focus:g.value===j}],onMouseenter:()=>{g.value=j},onMousedown:()=>{f(j)}},r("a",{href:A,onClick:M=>{M.preventDefault()}},[r("span",{class:"page-title"},F),w&&r("span",{class:"page-header"},`> ${w}`)]))))])}});var $4=["s","/"],j4={"/":{placeholder:"搜索"}};const V4=j4,H4=$4,z4=5;var q4=Ss({enhance({app:i}){i.component("SearchBox",s=>r(N4,{locales:V4,hotKeys:H4,maxSuggestions:z4,...s}))}});const U4=Object.freeze(Object.defineProperty({__proto__:null,default:q4},Symbol.toStringTag,{value:"Module"})),ld="VUEPRESS_REDIRECT_STATUS",Dr=I3(ld,{}),Sr=Ma(ld,{}),G4=i=>{const s=O3(),l=_a(),e=ke(i.config);return C(()=>{if(e.some(([n])=>l.value===n)){for(const n of s.value)for(const[t,a]of e)if(a.includes(n))return t===l.value?null:{lang:n,localePath:t}}return null})};var W4=O({name:"RedirectModal",props:{config:{type:Object,required:!0},locales:{type:Object,required:!0}},setup(i){const s=Xs(),{routeLocale:l,routePath:e}=wl(),n=G4(i.config),t=ii(),a=Oa(t),h=ii(!1),k=C(()=>{if(!n.value)return null;const{lang:p,localePath:c}=n.value,g=[i.locales[c],i.locales[l.value]];return{hint:g.map(({hint:o})=>o.replace("$1",p)),switch:g.map(({switch:o})=>o.replace("$1",p)).join(" / "),cancel:g.map(({cancel:o})=>o).join(" / "),remember:g.map(({remember:o})=>o).join(" / ")}}),d=()=>{Sr.value[l.value]=!0,h.value&&(Dr.value[l.value]=!0),a.value=!1};return Si(e,()=>{a.value=!1}),oi(async()=>{t.value=document.body,await Os(),n.value&&!Sr.value[l.value]&&!Dr.value[l.value]&&(a.value=!0)}),ua(()=>{a.value=!1}),()=>r(ep,{name:"fade-in-scale-up"},()=>a.value?r("div",{key:"mask",class:"redirect-modal-mask"},r("div",{key:"popup",class:"redirect-modal-wrapper"},[r("div",{class:"redirect-modal-content"},k.value?.hint.map(p=>r("p",p))),r("div",{class:"redirect-modal-hint"},[r("input",{id:"remember-redirect",type:"checkbox",value:h.value,onChange:()=>{h.value=!h.value}}),r("label",{for:"remember-redirect"},k.value?.remember)]),r("button",{type:"button",class:"redirect-modal-action primary",onClick:()=>{d(),s.replace(e.value.replace(l.value,n.value.localePath))}},k.value?.switch),r("button",{type:"button",class:"redirect-modal-action",onClick:()=>{d()}},k.value?.cancel)])):null)}}),K4={config:{"/":["zh-CN"]},autoLocale:!1,defaultLocale:"/",localeFallback:!0,defaultBehavior:"defaultLocale"},Q4={"/":{name:"简体中文",hint:"你的首选语言是 $1，是否切换到该语言？",switch:"切换到 $1",cancel:"取消",remember:"记住我的选择"}};const ed=K4;var J4=Ss({setup(){},rootComponents:[()=>r(W4,{config:ed,locales:Q4})]});const Z4=Object.freeze(Object.defineProperty({__proto__:null,config:ed,default:J4},Symbol.toStringTag,{value:"Module"}));var Tr={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const nd=()=>{const i=Ke();return C(()=>i.value.readingTime??null)},td=(i,s)=>{const{minutes:l,words:e}=i,{less1Minute:n,word:t,time:a}=s;return{time:l<1?n:a.replace("$time",Math.round(l).toString()),words:t.replace("$word",e.toString())}},wr={words:"",time:""},Ht=typeof Tr>"u"?null:Tr,ad=()=>Ht?Ll(Ht):C(()=>null),Y4=()=>{if(Ht===null)return C(()=>wr);const i=nd(),s=ad();return C(()=>i.value&&s.value?td(i.value,s.value):wr)},Fn=()=>null,Fi=({name:i="",color:s="currentColor",ariaLabel:l},{attrs:e,slots:n})=>r("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${i}-icon`],viewBox:"0 0 1024 1024",fill:s,"aria-label":l??`${i} icon`,...e},n.default());Fi.displayName="IconBase";const X4=i=>re(i)?i:`https://github.com/${i}`,$a=(i="")=>!re(i)||i.includes("github.com")?"GitHub":i.includes("bitbucket.org")?"Bitbucket":i.includes("gitlab.com")?"GitLab":i.includes("gitee.com")?"Gitee":null,hd=()=>r(Fi,{name:"github"},()=>r("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));hd.displayName="GitHubIcon";const rd=()=>r(Fi,{name:"gitee"},()=>r("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));rd.displayName="GiteeIcon";const kd=()=>r(Fi,{name:"bitbucket"},()=>r("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));kd.displayName="BitbucketIcon";const pd=()=>r(Fi,{name:"source"},()=>r("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));pd.displayName="SourceIcon";const iy=({link:i,type:s=$a(i??"")})=>{if(!s)return null;const l=s.toLowerCase();return r(l==="bitbucket"?kd:l==="github"?hd:l==="gitlab"?"GitLab":l==="gitee"?rd:pd)},sy=(i,s=0)=>{let l=3735928559^s,e=1103547991^s;for(let n=0,t;n<i.length;n++)t=i.charCodeAt(n),l=Math.imul(l^t,2654435761),e=Math.imul(e^t,1597334677);return l=Math.imul(l^l>>>16,2246822507),l^=Math.imul(e^e>>>13,3266489909),e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(l^l>>>13,3266489909),4294967296*(2097151&e)+(l>>>0)},Ye=(i,s)=>sy(i)%s,dd=/#.*$/u,ly=i=>{const s=dd.exec(i);return s?s[0]:""},xr=i=>decodeURI(i).replace(dd,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),cd=(i,s)=>{if(!wa(s))return!1;const l=xr(i.path),e=xr(s),n=ly(s);return n?n===i.hash&&(!e||l===e):l===e},ey="719px",ny="1440px",ty="9",ce={mobileBreakPoint:ey,pcBreakPoint:ny,colorNumber:ty},ul=()=>Kp(),Ts=()=>RA(),xi=()=>({...wl(),theme:ul(),themeLocale:Ts()}),is=()=>{const i=ul();return C(()=>!!i.value.pure)},gd=()=>{const i=Ts();return C(()=>i.value.author)},Lr=i=>ol(i)&&Bi(i.name),Ne=(i,s=!1)=>i?Qs(i)?i.map(l=>Bi(l)?{name:l}:Lr(l)?l:null).filter(l=>l!==null):Bi(i)?[{name:i}]:Lr(i)?[i]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${s?"":"| false"} | undefined\`, but got`,i),[]):[],od=(i,s)=>{if(i){if(Qs(i)&&i.every(Bi))return i;if(Bi(i))return[i];console.error(`Expect ${s} to be \`string[] | string | undefined\`, but got`,i)}return[]},ud=i=>od(i,"category"),Ad=i=>od(i,"tag"),yd=()=>{const i=ks(),s=gd();return C(()=>{const{author:l}=i.value;return l?Ne(l):l===!1?[]:Ne(s.value,!1)})},ay=()=>{const i=ks(),s=bi(Symbol.for("categoryMap"),null);return C(()=>ud(i.value.category??i.value.categories).map(l=>({name:l,path:s?.value.map[l]?.path??""})))},hy=()=>{const i=ks(),s=bi(Symbol.for("tagMap"),null);return C(()=>Ad(i.value.tag??i.value.tags).map(l=>({name:l,path:s?.value.map[l]?.path??""})))},ry=()=>{const{frontmatter:i,page:s}=xi();return C(()=>{const l=xa(i.value.date);if(l)return l;const{createdTime:e}=s.value.git??{};return e?new Date(e):null})},ky=()=>{const{frontmatter:i,themeLocale:s}=xi(),l=yd(),e=ay(),n=hy(),t=ry(),a=nd(),h=Y4(),k=C(()=>({author:l.value,category:e.value,date:t.value,tag:n.value,isOriginal:i.value.isOriginal??!1,readingTime:a.value,readingTimeLocale:h.value,pageview:i.value.pageview??!0})),d=C(()=>i.value.pageInfo??s.value.pageInfo??null);return{info:k,items:d}},ys=()=>{const i=Ts();return C(()=>i.value.metaLocales)},py="http://.",il=()=>{const i=Xs(),s=Ms();return l=>{if(!l)return;if(We(l))return window.open(l);if(zn(l))return s.fullPath===l?void 0:void i.push(l);const e=s.path.slice(0,s.path.lastIndexOf("/"));return void i.push(new URL(`${e}/${encodeURI(l)}`,py).pathname)}},Bd=()=>r(Fi,{name:"author"},()=>r("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Bd.displayName="AuthorIcon";const vd=()=>r(Fi,{name:"calendar"},()=>r("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));vd.displayName="CalendarIcon";const md=()=>r(Fi,{name:"category"},()=>r("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));md.displayName="CategoryIcon";const Fd=()=>r(Fi,{name:"print"},()=>r("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Fd.displayName="PrintIcon";const fd=()=>r(Fi,{name:"tag"},()=>r("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));fd.displayName="TagIcon";const Cd=()=>r(Fi,{name:"timer"},()=>r("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Cd.displayName="TimerIcon";const Ed=()=>r(Fi,{name:"word"},()=>[r("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),r("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Ed.displayName="WordIcon";var dy=O({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(i){const s=ys(),l=is();return()=>i.author.length?r("span",{class:"page-author-info","aria-label":`${s.value.author}${l.value?"":"🖊"}`,...l.value?{}:{"data-balloon-pos":"up"}},[r(Bd),r("span",i.author.map(e=>e.url?r("a",{class:"page-author-item",href:e.url,target:"_blank",rel:"noopener noreferrer"},e.name):r("span",{class:"page-author-item"},e.name))),r("span",{property:"author",content:i.author.map(e=>e.name).join(", ")})]):null}}),cy=O({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(i){const s=ys(),l=il(),e=is();return()=>i.category.length?r("span",{class:"page-category-info","aria-label":`${s.value.category}${e.value?"":"🌈"}`,...e.value?{}:{"data-balloon-pos":"up"}},[r(md),i.category.map(({name:n,path:t})=>r("span",{class:["page-category-item",{[`color${Ye(n,Number(ce.colorNumber))}`]:!e.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&l(t)}},n)),r("meta",{property:"articleSection",content:i.category.map(({name:n})=>n).join(",")})]):null}}),gy=O({name:"DateInfo",inheritAttrs:!1,props:{date:Object},setup(i){const s=Fp(),l=ys(),e=is(),n=C(()=>new Intl.DateTimeFormat(s.value,{dateStyle:"short"})),t=C(()=>i.date?n.value.format(i.date):null);return()=>i.date?r("span",{class:"page-date-info","aria-label":`${l.value.date}${e.value?"":"📅"}`,...e.value?{}:{"data-balloon-pos":"up"}},[r(vd),r("span",{"data-allow-mismatch":"text"},t.value),r("meta",{property:"datePublished",content:i.date.toISOString()||""})]):null}}),oy=O({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(i){const s=ys();return()=>i.isOriginal?r("span",{class:"page-original-info"},s.value.origin):null}}),uy=O({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:Object,readingTimeLocale:Object},setup(i){const s=ys(),l=is(),e=C(()=>{if(!i.readingTime)return null;const{minutes:n}=i.readingTime;return n<1?"PT1M":`PT${Math.round(n)}M`});return()=>i.readingTimeLocale?.time?r("span",{class:"page-reading-time-info","aria-label":`${s.value.readingTime}${l.value?"":"⌛"}`,...l.value?{}:{"data-balloon-pos":"up"}},[r(Cd),r("span",i.readingTimeLocale.time),r("meta",{property:"timeRequired",content:e.value})]):null}}),Ay=O({name:"TagInfo",inheritAttrs:!1,props:{tag:Array},setup(i){const s=ys(),l=il(),e=is();return()=>i.tag?.length?r("span",{class:"page-tag-info","aria-label":`${s.value.tag}${e.value?"":"🏷"}`,...e.value?{}:{"data-balloon-pos":"up"}},[r(fd),i.tag.map(({name:n,path:t})=>r("span",{class:["page-tag-item",{[`color${Ye(n,Number(ce.colorNumber))}`]:!e.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&l(t)}},n)),r("meta",{property:"keywords",content:i.tag.map(({name:n})=>n).join(",")})]):null}}),yy=O({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:Object,readingTimeLocale:Object},setup(i){const s=ys(),l=is();return()=>i.readingTimeLocale?.words?r("span",{class:"page-word-info","aria-label":`${s.value.words}${l.value?"":"🔠"}`,...l.value?{}:{"data-balloon-pos":"up"}},[r(Ed),r("span",i.readingTimeLocale.words),r("meta",{property:"wordCount",content:i.readingTime?.words})]):null}}),bd=O({name:"PageInfo",components:{AuthorInfo:dy,CategoryInfo:cy,DateInfo:gy,OriginalInfo:oy,PageViewInfo:Fn,ReadingTimeInfo:uy,TagInfo:Ay,WordInfo:yy},props:{items:[Boolean,Array],info:{type:Object,required:!0}},setup(i){const s=is();return()=>{const l=i.items??["Author","Original","Date","PageView","ReadingTime","Category","Tag"];return l?r("div",{class:"page-info"},l.map(e=>r(Di(`${e}Info`),{...i.info,isPure:s.value}))):null}}});const ja={"/zh/demo/":[],"/zh/posts/":[]},_d=Symbol(""),Xe=()=>{const i=bi(_d);if(!i)throw new Error("useDarkMode() is called without provider.");return i},By=i=>{const s=T3(),l=ul(),e=C(()=>l.value.darkmode??"switch"),n=Pl("vuepress-theme-hope-scheme","auto"),t=C(()=>{const h=e.value;return h==="disable"?!1:h==="enable"?!0:h==="auto"?s.value:h==="toggle"?n.value==="dark":n.value==="dark"||n.value==="auto"&&s.value}),a=C(()=>{const h=e.value;return h==="switch"||h==="toggle"});i.provide(_d,{canToggle:a,config:e,isDarkMode:t,status:n}),Object.defineProperties(i.config.globalProperties,{$isDarkMode:{get:()=>t.value}})},vy=()=>{const{config:i,isDarkMode:s,status:l}=Xe();Ba(()=>{i.value==="disable"?l.value="light":i.value==="enable"?l.value="dark":i.value==="toggle"&&l.value==="auto"&&(l.value="light")}),ki("beforeprint",()=>{s.value&&document.documentElement.setAttribute("data-theme","light")}),ki("afterprint",()=>{s.value&&document.documentElement.setAttribute("data-theme","dark")}),oi(()=>{us(s,e=>{document.documentElement.setAttribute("data-theme",e?"dark":"light")})})},zt=i=>!We(i)&&!jn(i),xn=(i,s=!1,l)=>{const{meta:e,path:n,notFound:t}=os(i,l);return t?{text:n,link:n}:{text:!s&&e.shortTitle?e.shortTitle:e.title||n,link:n,icon:e.icon}},Fl=(i="",s="")=>We(s)||zn(s)?s:`${tp(i)}${s}`,Dd=(i,s)=>{const l=Bi(i)?xn(Fl(s,i)):Bi(i.link)?{...i,link:zt(i.link)?os(Fl(s,i.link)).path:i.link}:i;if("children"in l){const e=Fl(s,l.prefix),n=l.children==="structure"?ja[e]:l.children;return{...l,prefix:e,children:n.map(t=>Dd(t,e))}}return{...l}},qt=({config:i,prefix:s=""})=>i.map(l=>Dd(l,s)),my=({config:i,routePath:s})=>{const l=_s(i).sort((e,n)=>n.length-e.length);for(const e of l)if(Oe(decodeURI(s),e)){const n=i[e];return qt({config:n==="structure"?ja[e]:n||[],prefix:e})}return console.warn(`${decodeURI(s)} is missing it's sidebar config.`),[]},Fy=({config:i,routeLocale:s,routePath:l})=>i==="structure"?qt({config:ja[s],prefix:s}):Qs(i)?qt({config:i}):ol(i)?my({config:i,routePath:l}):[],Sd=Symbol(""),fy=()=>{const{frontmatter:i,routeLocale:s,routePath:l,themeLocale:e}=xi(),n=C(()=>i.value.home?!1:i.value.sidebar??e.value.sidebar??"structure"),t=C(()=>Fy({config:n.value,routeLocale:s.value,routePath:l.value}));Cs(Sd,t)},Va=()=>{const i=bi(Sd);if(!i)throw new Error("useSidebarItems() is called without provider.");return i};var Cy=O({name:"PageFooter",setup(){const{frontmatter:i,theme:s,themeLocale:l}=xi(),e=yd(),n=C(()=>{const{copyright:d,footer:p}=i.value;return p!==!1&&!!(d||p||l.value.displayFooter)}),t=C(()=>{const{footer:d}=i.value;return Bi(d)?d:l.value.footer??""}),a=C(()=>e.value.map(({name:d})=>d).join(", ")),h=d=>`Copyright © ${new Date().getFullYear()} ${a.value} ${d?`${d} Licensed`:""}`,k=C(()=>{const{copyright:d,license:p=""}=i.value,{license:c}=s.value,{copyright:g}=l.value;return d??(p?h(p):g??(a.value||c?h(c):!1))});return()=>n.value?r("footer",{class:"vp-footer-wrapper","vp-footer":""},[t.value?r("div",{class:"vp-footer",innerHTML:t.value}):null,k.value?r("div",{class:"vp-copyright",innerHTML:k.value}):null]):null}});const Td=()=>r(Fi,{name:"outlook"},()=>[r("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Td.displayName="AppearanceIcon";const wd=()=>r(Fi,{name:"auto"},()=>r("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));wd.displayName="AutoColorModeIcon";const xd=()=>r(Fi,{name:"light"},()=>r("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));xd.displayName="LightColorModeIcon";const Ld=()=>r(Fi,{name:"dark"},()=>r("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Ld.displayName="DarkColorModeIcon";var Rd=O({name:"ColorModeSwitch",setup(){const{config:i,isDarkMode:s,status:l}=Xe(),e=is(),n=()=>{i.value==="switch"?l.value={light:"dark",dark:"auto",auto:"light"}[l.value]:l.value=l.value==="light"?"dark":"light"},t=async a=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!e.value)){n();return}const h=a.clientX,k=a.clientY,d=Math.hypot(Math.max(h,innerWidth-h),Math.max(k,innerHeight-k)),p=s.value;await document.startViewTransition(async()=>{n(),await Os()}).ready,s.value!==p&&document.documentElement.animate({clipPath:s.value?[`circle(${d}px at ${h}px ${k}px)`,`circle(0px at ${h}px ${k}px)`]:[`circle(0px at ${h}px ${k}px)`,`circle(${d}px at ${h}px ${k}px)`]},{duration:400,pseudoElement:s.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>r("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:t},[r(wd,{style:{display:l.value==="auto"?"block":"none"}}),r(Ld,{style:{display:l.value==="dark"?"block":"none"}}),r(xd,{style:{display:l.value==="light"?"block":"none"}})])}});const Pd=()=>{const i=Ts();return C(()=>i.value.outlookLocales)};var Ey=O({name:"ColorMode",setup(){const i=Pd(),{canToggle:s}=Xe();return()=>s.value?r("div",{class:"vp-color-mode"},[r("label",{class:"vp-color-mode-title",for:"color-mode-switch"},i.value.darkmode),r(Rd)]):null}});const Id=()=>r(Fi,{name:"cancel-fullscreen"},()=>r("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Id.displayName="CancelFullScreenIcon";const Od=()=>r(Fi,{name:"enter-fullscreen"},()=>r("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Od.displayName="EnterFullScreenIcon";var Md=O({name:"ToggleFullScreenButton",setup(){const{isSupported:i,isFullscreen:s,toggle:l}=qn();return()=>i.value?r("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:s.value,onClick:()=>l()},s.value?r(Id):r(Od)):null}}),by=O({name:"ToggleFullScreenButton",setup(){const i=Pd(),{isSupported:s}=qn();return()=>s.value?r("div",{class:"full-screen-wrapper"},[r("label",{class:"full-screen-title",for:"full-screen-switch"},i.value.fullscreen),r(Md)]):null}}),Nd=O({name:"AppearanceSettings",setup(){const i=ul(),s=is(),l=C(()=>!s.value&&i.value.fullscreen);return()=>r(Da,()=>[null,r(Ey),l.value?r(by):null])}}),_y=O({name:"AppearanceButton",setup(){const i=ul(),{canToggle:s}=Xe(),{isSupported:l}=qn(),e=is(),n=ii(!1),t=C(()=>!e.value&&i.value.fullscreen&&l),a=C(()=>s.value||t.value);return As(()=>{n.value=!1}),()=>a.value?r("div",{class:"vp-nav-item hide-in-mobile"},s.value&&!t.value?r(Rd):t.value&&!s.value?r(Md):r("button",{type:"button",class:["vp-appearance-button",{open:n.value}],tabindex:"-1","aria-hidden":!0},[r(Td),r("div",{class:"vp-appearance-dropdown"},r(Nd))])):null}});const Ki=({config:i,iconSizing:s="both"},{emit:l,slots:e})=>{const{icon:n}=i;return r(Eu,{config:i,onFocusout:()=>{l("focusout")}},{...e,before:e.before??(n?()=>r(Di("VPIcon"),{icon:n,sizing:s}):null)})};Ki.displayName="AutoLink";var Dy=O({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(i,{slots:s}){const l=he(i,"config"),e=C(()=>l.value.ariaLabel??l.value.text),n=ii(!1),t=a=>{a.detail===0&&(n.value=!n.value)};return As(()=>{n.value=!1}),()=>r("div",{class:["vp-dropdown-wrapper",{open:n.value}]},[r("button",{type:"button",class:"vp-dropdown-title","aria-label":e.value,onClick:t},[s.title?.()??[r(Di("VPIcon"),{icon:l.value.icon}),i.config.text],r("span",{class:"arrow"}),r("ul",{class:"vp-dropdown"},l.value.children.map((a,h)=>{const k=h===l.value.children.length-1;return r("li",{class:"vp-dropdown-item"},"children"in a?[r("h4",{class:"vp-dropdown-subtitle"},a.link?r(Ki,{config:a,onFocusout:()=>{a.children.length===0&&k&&(n.value=!1)}}):a.text),r("ul",{class:"vp-dropdown-subitems"},a.children.map((d,p)=>r("li",{class:"vp-dropdown-subitem"},r(Ki,{config:d,onFocusout:()=>{p===a.children.length-1&&k&&(n.value=!1)}}))))]:r(Ki,{config:a,onFocusout:()=>{k&&(n.value=!1)}}))}))])])}}),Sy=O({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(i){const s=he(i,"config"),l=Ms(),e=C(()=>s.value.ariaLabel??s.value.text),n=ii(!1),t=(a,h)=>h[h.length-1]===a;return As(()=>{n.value=!1}),Si(()=>l.fullPath,()=>{n.value=!1}),()=>[r("button",{type:"button",class:["vp-nav-screen-menu-title",{active:n.value}],"aria-label":e.value,onClick:()=>{n.value=!n.value}},[r("span",{class:"text"},[r(Di("VPIcon"),{icon:s.value.icon,sizing:"both"}),i.config.text]),r("span",{class:["arrow",n.value?"down":"end"]})]),r("ul",{class:["vp-nav-screen-menu",{hide:!n.value}]},s.value.children.map(a=>r("li",{class:"vp-nav-screen-menu-item"},"children"in a?[r("h4",{class:"vp-nav-screen-menu-subtitle"},a.link?r(Ki,{config:a,onFocusout:()=>{t(a,s.value.children)&&a.children.length===0&&(n.value=!1)}}):a.text),r("ul",{class:"vp-nav-screen-menu-subitems"},a.children.map(h=>r("li",{class:"vp-nav-screen-menu-subitem"},r(Ki,{config:h,onFocusout:()=>{t(h,a.children)&&t(a,s.value.children)&&(n.value=!1)}}))))]:r(Ki,{config:a,onFocusout:()=>{t(a,s.value.children)&&(n.value=!1)}}))))]}});const $d=(i,s="")=>Bi(i)?xn(Fl(s,i)):"children"in i?{...i,...i.link&&zt(i.link)?{link:os(Fl(s,i.link)).path}:{},children:i.children.map(l=>$d(l,Fl(s,i.prefix)))}:{...i,link:zt(i.link)?os(Fl(s,i.link)).path:i.link},jd=()=>{const i=Ts();return C(()=>(i.value.navbar||[]).map(s=>$d(s)))};var Ty=O({name:"NavScreenLinks",setup(){const i=jd();return()=>i.value.length?r("nav",{class:"nav-screen-links"},i.value.map(s=>r("div",{class:"navbar-links-item"},"children"in s?r(Sy,{config:s}):r(Ki,{config:s})))):null}});const{mobileBreakPoint:wy,pcBreakPoint:xy}=ce,Rr=i=>i.endsWith("px")?Number(i.slice(0,-2)):null,Un=()=>{const i=ii(!1),s=ii(!1),l=()=>{i.value=window.innerWidth<=(Rr(wy)??719),s.value=window.innerWidth>=(Rr(xy)??1440)};return ki("resize",l,!1),ki("orientationchange",l,!1),oi(()=>{l()}),{isMobile:i,isPC:s}};var Ly=O({name:"NavScreen",props:{show:Boolean},slots:Object,setup(i,{slots:s}){const{isMobile:l}=Un(),e=ei(),n=Oa(e);return As(()=>{n.value=!1}),Si(l,t=>{!t&&i.show&&(n.value=!1)}),oi(()=>{e.value=document.body}),Ds(()=>{n.value=!1}),()=>r(ee,{name:"fade-in-down",onEnter:()=>{n.value=!0},onAfterLeave:()=>{n.value=!1}},()=>i.show?r("div",{id:"nav-screen",class:"vp-nav-screen"},r("div",{class:"vp-nav-screen-container"},[s.navScreenTop?.(),r(Ty),r("div",{class:"vp-appearance-wrapper"},r(Nd)),s.navScreenBottom?.()])):null)}}),Ry=O({name:"NavbarBrand",setup(){const{routeLocale:i,siteLocale:s,themeLocale:l}=xi(),e=C(()=>l.value.home??i.value),n=C(()=>s.value.title),t=C(()=>l.value.navbarTitle??n.value),a=C(()=>l.value.logo?mi(l.value.logo):null),h=C(()=>l.value.logoDark?mi(l.value.logoDark):null);return()=>r(Li,{to:e.value,class:"vp-brand","aria-label":l.value.routerLocales.home},()=>[a.value?r("img",{class:["vp-nav-logo",{light:!!h.value}],src:a.value,alt:""}):null,h.value?r("img",{class:["vp-nav-logo dark"],src:h.value,alt:""}):null,t.value?r("span",{class:["vp-site-name",{"hide-in-pad":a.value&&(l.value.hideSiteNameOnMobile??!0)}]},t.value):null])}}),Py=O({name:"NavbarLinks",setup(){const i=jd();return()=>i.value.length?r("nav",{class:"vp-nav-links"},i.value.map(s=>r("div",{class:"vp-nav-item hide-in-mobile"},"children"in s?r(Dy,{config:s}):r(Ki,{config:s,iconSizing:"height"})))):null}});const Iy=()=>{const i=Ts(),s=C(()=>i.value.repo),l=C(()=>s.value?X4(s.value):null),e=C(()=>s.value?$a(s.value):null),n=C(()=>l.value?i.value.repoLabel??e.value??"Source":null);return C(()=>!l.value||!n.value||i.value.repoDisplay===!1?null:{type:e.value??"Source",label:n.value,link:l.value})};var Oy=O({name:"RepoLink",setup(){const i=Iy();return()=>i.value?r("div",{class:"vp-nav-item vp-action"},r("a",{class:"vp-action-link",href:i.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":i.value.label},r(iy,{type:i.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const Vd=({active:i=!1},{emit:s})=>r("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":i}],"aria-label":"Toggle Navbar","aria-expanded":i,"aria-controls":"nav-screen",onClick:()=>{s("toggle")}},r("span",[r("span",{class:"vp-top"}),r("span",{class:"vp-middle"}),r("span",{class:"vp-bottom"})]));Vd.displayName="ToggleNavbarButton";const Ut=(i,{emit:s})=>r("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>{s("toggle")}},r("span",{class:"icon"}));Ut.displayName="ToggleSidebarButton",Ut.emits=["toggle"];var My=O({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(i,{emit:s,slots:l}){const e=Ts(),{isMobile:n}=Un(),t=ii(!1),a=C(()=>{const{navbarAutoHide:p="mobile"}=e.value;return p!=="none"&&(p==="always"||n.value)}),h=C(()=>e.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),k={Brand:Ry,Language:Fn,Links:Py,Repo:Oy,Outlook:_y,Search:Xi("SearchBox")?Di("SearchBox"):Fn},d=p=>k[p]??(Xi(p)?Di(p):Fn);return As(()=>{t.value=!1}),Si(n,p=>{p||(t.value=!1)}),()=>[r("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":a.value}],"vp-navbar":""},[r("div",{class:"vp-navbar-start"},[r(Ut,{onToggle:()=>{t.value&&(t.value=!1),s("toggleSidebar")}}),h.value.start?.map(p=>r(d(p)))]),r("div",{class:"vp-navbar-center"},[h.value.center?.map(p=>r(d(p)))]),r("div",{class:"vp-navbar-end"},[h.value.end?.map(p=>r(d(p))),r(Vd,{active:t.value,onToggle:()=>{t.value=!t.value}})])]),r(Ly,{show:t.value},l)]}});const Ha=(i,s)=>s.activeMatch?new RegExp(s.activeMatch,"u").test(i.path):cd(i,s.link);var Ny=O({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(i){const s=Ms();return()=>Bi(i.config.link)?r(Ki,{class:["vp-sidebar-link",{active:Ha(s,i.config)}],config:{...i.config,exact:!0}}):r("p",i,[r(Di("VPIcon"),{icon:i.config.icon,sizing:"both"}),i.config.text])}});const za=(i,s)=>"children"in s?!!s.prefix&&cd(i,s.prefix)||s.children.some(l=>za(i,l)):Ha(i,s);var $y=O({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(i,{emit:s}){const l=Ms(),e=ii(!1),n=C(()=>za(l,i.config)),t=C(()=>Ha(l,i.config)),a=C(()=>i.open||i.config.expanded&&!e.value);return()=>{const{collapsible:h,children:k=[],icon:d,prefix:p,link:c,text:g}=i.config;return r("section",{class:"vp-sidebar-group"},[r(h?"button":"p",{class:["vp-sidebar-header",{clickable:h||c,exact:t.value,active:n.value}],...h?{type:"button",onClick:()=>{e.value=!0,s("toggle")}}:{}},[r(Di("VPIcon"),{icon:d,sizing:"both"}),c?r(Ki,{class:"vp-sidebar-title no-external-link-icon",config:{text:g,link:c}}):r("span",{class:"vp-sidebar-title"},g),h?r("span",{class:["vp-arrow",a.value?"down":"end"]}):null]),a.value||!h?r(Hd,{key:p,config:k}):null])}}}),Hd=O({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(i){const s=Ms(),l=vu(),e=ii(-1),n=t=>{e.value=t===e.value?-1:t};return us(l,()=>{const t=i.config.findIndex(a=>za(s,a));e.value=t},{flush:"post"}),()=>r("ul",{class:"vp-sidebar-links"},i.config.map((t,a)=>r("li","children"in t?r($y,{config:t,open:a===e.value,onToggle:()=>{n(a)}}):r(Ny,{config:t}))))}}),jy=O({name:"SideBar",slots:Object,setup(i,{slots:s}){const l=Ms(),e=Va(),n=ei();return oi(()=>{us(()=>l.hash,t=>{const a=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${l.path}${t}"]`);if(!a)return;const{top:h,height:k}=n.value.getBoundingClientRect(),{top:d,height:p}=a.getBoundingClientRect();d<h?a.scrollIntoView(!0):d+p>h+k&&a.scrollIntoView(!1)})}),()=>r("aside",{ref:n,key:"sidebar",id:"sidebar",class:"vp-sidebar","vp-sidebar":""},[s.sidebarTop?.(),s.sidebarItems?.(e.value)??r(Hd,{config:e.value}),s.sidebarBottom?.()])}}),qa=O({name:"MainLayout",props:{containerClass:String,noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(i,{slots:s}){const{frontmatter:l,theme:e,themeLocale:n}=xi(),{isMobile:t,isPC:a}=Un(),h=is(),[k,d]=Me(!1),[p,c]=Me(!1),g=Va(),o=ei(),B=Oa(o),m=ii(!1),E=C(()=>i.noNavbar||l.value.navbar===!1||n.value.navbar===!1?!1:!!(n.value.logo??n.value.repo??n.value.navbar)),_=C(()=>l.value.externalLinkIcon??e.value.externalLinkIcon??!0),f=C(()=>!i.noToc&&!l.value.home&&!!(l.value.toc??n.value.toc??!0)),A={x:0,y:0},F=M=>{A.x=M.changedTouches[0].clientX,A.y=M.changedTouches[0].clientY},w=M=>{const z=M.changedTouches[0].clientX-A.x,D=M.changedTouches[0].clientY-A.y;Math.abs(z)>Math.abs(D)*1.5&&Math.abs(z)>40&&(z>0&&A.x<=80?d(!0):d(!1))};let j=0;return ki("scroll",Np(()=>{const M=window.scrollY;M<=58||M<j?m.value=!1:j+200<M&&!k.value&&(m.value=!0),j=M},300,!0)),Si(t,M=>{M||d(!1)}),Si(k,M=>{B.value=M}),As(()=>{d(!1)}),oi(()=>{o.value=document.body}),Ds(()=>{B.value=!1}),()=>{const M=s.sidebarTop?.(),z=s.sidebarItems?.(g.value),D=s.sidebarBottom?.(),P=Yl(M)&&Yl(z)&&Yl(D),H=i.noSidebar||l.value.sidebar===!1||(l.value.home||g.value.length===0)&&P;return r(Xi("GlobalEncrypt")?Di("GlobalEncrypt"):Ta,()=>r("div",{class:["theme-container",{"hide-navbar":m.value,"no-navbar":!E.value,"sidebar-collapsed":!t.value&&!a.value&&p.value,"sidebar-open":t.value&&k.value,"no-sidebar":H,"external-link-icon":_.value,pure:h.value,"has-toc":f.value},i.containerClass??"",l.value.containerClass??""],"vp-container":"",onTouchStart:F,onTouchEnd:w},[E.value?r(My,{onToggleSidebar:()=>d()},s):null,r(ee,{name:"fade-in"},()=>k.value?r("div",{class:"vp-sidebar-mask",onClick:()=>d(!1)}):null),r(ee,{name:"fade-in"},()=>t.value?null:r("div",{class:"toggle-sidebar-wrapper",onClick:()=>c()},r("span",{class:["arrow",p.value?"end":"start"]}))),H?null:r(jy,null,s),s.default(),r(Cy)]))}}});const zd=()=>{const{frontmatter:i,themeLocale:s}=xi(),l=C(()=>i.value.changelog??((s.value.changelog??!1)&&!i.value.home)),e=C(()=>{const{contributors:t,home:a}=i.value;return Qs(t)?a?!1:s.value.contributors??!0:t??(a?!1:s.value.contributors??!0)}),n=C(()=>i.value.lastUpdated??s.value.lastUpdated??!0);return{changelog:l,contributors:e,lastUpdated:n}};var Gn=O({name:"MarkdownContent",props:{custom:Boolean},slots:Object,setup(i,{slots:s}){const l=ul(),{changelog:e,contributors:n}=zd(),t=ii(),a=L3(t,{delayEnter:mn(l.value.focus)?l.value.focus:1500,delayLeave:0}),h=C(()=>!!(l.value.focus??l.value.pure)&&a.value);return oi(()=>{const k=document.documentElement;us(h,d=>{d?k.classList.add("is-focusing"):k.classList.remove("is-focusing")})}),()=>r("div",{class:{custom:i.custom},"vp-content":""},[s.contentBefore?.(),r(Cp,{ref:t,id:"markdown-content"}),s.contentAfter?.(),e.value&&Xi("GitChangelog")?r(Di("GitChangelog")):null,n.value==="content"&&Xi("GitContributors")?r(Di("GitContributors")):null])}}),Ua=O({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(i){const s=Ts(),l=ei(),e=({target:n})=>{const t=document.querySelector(n.hash);if(t){const a=()=>{t.removeAttribute("tabindex"),t.removeEventListener("blur",a)};t.setAttribute("tabindex","-1"),t.addEventListener("blur",a),t.focus(),window.scrollTo(0,0)}};return As(()=>{l.value?.focus()}),()=>[r("span",{ref:l,tabindex:"-1"}),r("a",{href:`#${i.content}`,class:"vp-skip-link sr-only",onClick:e},s.value.routerLocales.skipToContent)]}});const Gt=()=>r(Fi,{name:"slide-down"},()=>r("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Gt.displayName="SlideDownIcon";const Ga=(i,{emit:s})=>r("button",{type:"button",class:"vp-hero-slide-down-button",onClick:()=>s("click")},[r(Gt),r(Gt)]);Ga.displayName="HeroSlideDownButton";var ri=O({name:"DropTransition",props:{delay:{type:Number,default:0},duration:{type:Number,default:.25},group:Boolean,appear:Boolean},slots:Object,setup(i,{slots:s}){const l=n=>{n.style.transition=`transform ${i.duration}s ease-in-out ${i.delay}s, opacity ${i.duration}s ease-in-out ${i.delay}s`,n.style.transform="translateY(-20px)",n.style.opacity="0"},e=n=>{n.style.transform="translateY(0)",n.style.opacity="1"};return()=>{const n={name:"drop",appear:i.appear,onAppear:l,onAfterAppear:e,onEnter:l,onAfterEnter:e,onBeforeLeave:l};return i.group?r(ep,n,s.default):r(ee,n,s.default)}}});let mt=null,Ft=null;const Wt={wait:()=>mt,pending:()=>{mt=new Promise(i=>{Ft=i})},resolve:()=>{Ft?.(),mt=null,Ft=null}};var qd=O({name:"MainFadeInUpTransition",slots:Object,setup(i,{slots:s}){const l=is();return()=>l.value?r(Ta,s.default):r(ee,{name:"fade-in-up",mode:"out-in",onBeforeEnter:Wt.resolve,onBeforeLeave:Wt.pending},s.default)}}),Ud=O({name:"PageTitle",setup(){const{frontmatter:i,page:s,themeLocale:l}=xi(),{info:e,items:n}=ky();return()=>r("div",{class:"vp-page-title"},[r("h1",[l.value.titleIcon===!1?null:r(Di("VPIcon"),{icon:i.value.icon}),s.value.title]),r(bd,{info:e.value,items:n.value}),r("hr")])}});const Vy=(i,s)=>{const l=i.replace(s,"/").split("/"),e=[];let n=fa(s);return l.forEach((t,a)=>{a!==l.length-1?(n+=`${t}/`,e.push({link:n,name:t||"Home"})):t!==""&&(n+=t,e.push({link:n,name:t}))}),e};var Hy=O({name:"BreadCrumb",setup(){const{frontmatter:i,page:s,routeLocale:l,routePath:e,themeLocale:n}=xi(),t=ei([]),a=C(()=>(i.value.breadcrumb??n.value.breadcrumb??!0)&&t.value.length>1),h=C(()=>i.value.breadcrumbIcon??n.value.breadcrumbIcon??!0),k=()=>{const d=Vy(s.value.path,l.value).map(({link:p,name:c})=>{const{path:g,meta:o,notFound:B}=os(p);return B||o.breadcrumbExclude?null:{title:o.shortTitle||o.title||c,icon:o.icon,path:g}}).filter(p=>p!==null);d.length>1&&(t.value=d)};return oi(()=>{us(e,k)}),()=>r("nav",{class:["vp-breadcrumb",{disable:!a.value}]},a.value?r("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},t.value.map((d,p)=>r("li",{class:{"is-active":t.value.length-1===p},property:"itemListElement",typeof:"ListItem"},[r(Li,{to:d.path,property:"item",typeof:"WebPage"},()=>[h.value?r(Di("VPIcon"),{icon:d.icon}):null,r("span",{property:"name"},d.title||"Unknown")]),r("meta",{property:"position",content:p+1})]))):[])}});const Pr=(i,s)=>i===!1?i:ol(i)?{...i,link:xn(i.link,!0,s).link}:Bi(i)?xn(i,!0,s):null,Kt=(i,s,l)=>{const e=i.findIndex(t=>t.link===s);if(e!==-1){if(!i[e+l])return null;const t=i[e+l];return t.link?t:"prefix"in t&&!os(t.prefix).notFound?{...t,link:t.prefix}:null}for(const t of i)if("children"in t){const a=Kt(t.children,s,l);if(a)return a}const n=i.findIndex(t=>"prefix"in t&&t.prefix===s);if(n!==-1){if(!i[n+l])return null;const t=i[n+l];return t.link?t:"prefix"in t&&!os(t.prefix).notFound?{...t,link:t.prefix}:null}return null},zy=()=>{const{frontmatter:i,routePath:s,themeLocale:l}=xi(),e=Va(),n=C(()=>{const a=Pr(i.value.prev,s.value);return a===!1?null:a??(l.value.prevLink===!1?null:Kt(e.value,s.value,-1))}),t=C(()=>{const a=Pr(i.value.next,s.value);return a===!1?null:a??(l.value.nextLink===!1?null:Kt(e.value,s.value,1))});return{prevLink:n,nextLink:t}};var qy=O({name:"PageNav",setup(){const i=ys(),s=il(),{prevLink:l,nextLink:e}=zy();return ki("keydown",n=>{n.altKey&&(n.key==="ArrowRight"?e.value&&(s(e.value.link),n.preventDefault()):n.key==="ArrowLeft"&&l.value&&(s(l.value.link),n.preventDefault()))}),()=>l.value||e.value?r("nav",{class:"vp-page-nav"},[l.value?r(Ki,{class:"prev",config:l.value},()=>[r("div",{class:"hint"},[r("span",{class:"arrow start"}),i.value.prev]),r("div",{class:"link"},[r(Di("VPIcon"),{icon:l.value?.icon}),l.value?.text])]):null,e.value?r(Ki,{class:"next",config:e.value},()=>[r("div",{class:"hint"},[i.value.next,r("span",{class:"arrow end"})]),r("div",{class:"link"},[e.value?.text,r(Di("VPIcon"),{icon:e.value?.icon})])]):null]):null}}),Uy=O({name:"PrintButton",setup(){const i=ys(),s=ul();return()=>s.value.print===!1?null:r("button",{type:"button",class:"print-button",title:i.value.print,onClick:()=>{window.print()}},r(Fd))}});const Ir={selector:[...Array.from({length:6}).map((i,s)=>`#markdown-content > h${s+1}`),"[vp-content] > h2"].join(", "),levels:"deep",ignore:[".vp-badge",".vp-icon"]};var Gy=O({name:"TOC",props:{items:Array},slots:Object,setup(i,{slots:s}){const{frontmatter:l,themeLocale:e}=xi(),n=C(()=>{const E=l.value.toc??e.value.toc;return ol(E)?{...Ir,...E}:E??!0?Ir:void 0}),t=a3(n),a=Ms(),h=ys(),[k,d]=Me(),p=ei(),c=ii("-2rem"),g=E=>{p.value?.scrollTo({top:E,behavior:"smooth"})},o=()=>{if(p.value){const E=document.querySelector(".vp-toc-item.active");E?c.value=`${E.getBoundingClientRect().top-p.value.getBoundingClientRect().top+p.value.scrollTop}px`:c.value="-2rem"}else c.value="-2rem"};oi(()=>{us(()=>a.hash,E=>{if(p.value){const _=document.querySelector(`#toc a.vp-toc-link[href$="${E}"]`);if(!_)return;const{top:f,height:A}=p.value.getBoundingClientRect(),{top:F,height:w}=_.getBoundingClientRect();F<f?g(p.value.scrollTop+F-f):F+w>f+A&&g(p.value.scrollTop+F+w-f-A)}},{flush:"post"}),us(()=>a.fullPath,o,{flush:"post"})});const B=({title:E,level:_,slug:f})=>r(Li,{to:`#${f}`,class:["vp-toc-link",`level${_}`],onClick:()=>{d()}},()=>E),m=E=>E.length?r("ul",{class:"vp-toc-list"},E.map(_=>{const f=m(_.children);return[r("li",{class:["vp-toc-item",{active:a.hash===`#${_.slug}`}]},B(_)),f?r("li",f):null]})):null;return()=>n.value||i.items?.length?r(Da,()=>{const E=i.items?.length?m(i.items):m(t.value),_=s.toc?.(t.value)??(E?[r("div",{class:"vp-toc-header",onClick:()=>{d()}},[h.value.toc,r(Uy),r("div",{class:["arrow",k.value?"down":"end"]})]),r("div",{class:["vp-toc-wrapper",k.value?"open":""],ref:p},[E,r("div",{class:"vp-toc-marker",style:{top:c.value}})])]:null),f=s.tocBefore?.(),A=s.tocAfter?.();return Yl(_)&&Yl(f)&&Yl(A)?null:r("div",{class:"vp-toc-placeholder"},[r("aside",{id:"toc","vp-toc":""},[f,_,A])])}):null}});const Gd=()=>r(Fi,{name:"edit"},()=>[r("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),r("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);Gd.displayName="EditIcon";const Wy={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},Ky=({docsRepo:i,docsBranch:s,docsDir:l,filePathRelative:e,editLinkPattern:n})=>{if(!e)return null;const t=$a(i);let a;return n?a=n:t!==null&&(a=Wy[t]),a?a.replace(/:repo/u,re(i)?i:`https://github.com/${i}`).replace(/:branch/u,s).replace(/:path/u,ap(`${fa(l)}/${e}`)):null},Qy=()=>{const{frontmatter:i,page:s,themeLocale:l}=xi(),e=ys();return C(()=>{const{repo:n,docsRepo:t=n,docsBranch:a="main",docsDir:h="",editLink:k,editLinkPattern:d=""}=l.value;if(!(i.value.editLink??k??!0)||!t)return null;const p=Ky({docsRepo:t,docsBranch:a,docsDir:h,editLinkPattern:d,filePathRelative:s.value.filePathRelative});return p?{text:e.value.editLink,link:p}:null})};var Jy=O({name:"PageMeta",setup(){const i=zd(),s=zp(),l=Qy(),e=z3(i.lastUpdated),n=ys();return()=>r("footer",{class:"vp-page-meta"},[l.value?r("div",{class:"vp-meta-item edit-link"},r(Ki,{class:"vp-meta-label",config:l.value},{before:()=>r(Gd)})):null,r("div",{class:"vp-meta-item git-info"},[(!i.changelog.value||!Xi("GitChangelog"))&&e.value?r("div",{class:"update-time"},[r("span",{class:"vp-meta-label"},e.value.locale),r("time",{class:"vp-meta-info",datetime:e.value.iso,"data-allow-mismatch":""},e.value.text)]):null,i.contributors.value&&i.contributors.value!=="content"&&s.value.length?r("div",{class:"contributors"},[r("span",{class:"vp-meta-label"},`${n.value.contributors}: `),s.value.map(({email:t,name:a},h,k)=>[r("span",{class:"vp-meta-info",title:`email: ${t}`},a),h!==k.length-1?",":""])]):null])])}}),Zy=O({name:"PageContent",slots:Object,setup(i,{slots:s}){const{frontmatter:l}=xi(),{isDarkMode:e}=Xe();return()=>r("main",{id:"main-content",class:"vp-page"},r(Xi("LocalEncrypt")?Di("LocalEncrypt"):Ta,()=>[s.pageTop?.(),l.value.cover?r("div",{class:"page-cover"},r("img",{src:mi(l.value.cover),alt:"","no-view":""})):null,r(Hy),r(Ud),r(Gy,null,s),s.content?.()??r(Gn,null,s),r(Jy),r(qy),Xi("CommentService")?r(Di("CommentService"),{darkmode:e.value}):null,s.pageBottom?.()]))}});const Qt=(i,{slots:s})=>{const{bgImage:l,bgImageDark:e,bgImageStyle:n,color:t,description:a,image:h,imageDark:k,header:d,features:p=[]}=i;return r("div",{class:"vp-feature-wrapper"},[l?r("div",{class:["vp-feature-bg",{light:e}],style:[{"background-image":`url(${l})`},n]}):null,e?r("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${e})`},n]}):null,r("div",{class:"vp-feature",style:t?{color:t}:{}},[s.image?.(i)??[h?r("img",{class:["vp-feature-image",{light:k}],src:mi(h),alt:""}):null,k?r("img",{class:"vp-feature-image dark",src:mi(k),alt:""}):null],s.info?.(i)??[d?r("h2",{class:"vp-feature-header"},d):null,a?r("div",{class:"vp-feature-description",innerHTML:a}):null],p.length?r("div",{class:"vp-features"},p.map(({icon:c,title:g,details:o,link:B})=>{const m=[r("h3",{class:"vp-feature-title"},[r(Di("VPIcon"),{icon:c}),r("span",{innerHTML:g})]),r("div",{class:"vp-feature-details",innerHTML:o})];return B?jn(B)?r("a",{class:"vp-feature-item link",href:B,"aria-label":g,target:"_blank"},m):r(Li,{class:"vp-feature-item link",to:B,"aria-label":g},()=>m):r("div",{class:"vp-feature-item"},m)})):null])])};Qt.displayName="FeaturePanel";var Yy=O({name:"HeroInfo",slots:Object,setup(i,{slots:s}){const{frontmatter:l,siteLocale:e}=xi(),n=C(()=>{const{heroText:k,tagline:d,heroStyle:p,heroFullScreen:c=!1}=l.value;return{text:k??(e.value.title||"Hello"),tagline:d??e.value.description,style:p??null,isFullScreen:c}}),t=C(()=>{const{heroImage:k,heroImageDark:d,heroAlt:p,heroImageStyle:c}=l.value;return{image:k?mi(k):null,imageDark:d?mi(d):null,style:c??null,alt:p??""}}),a=C(()=>{const{bgImage:k,bgImageDark:d,bgImageStyle:p}=l.value;return{image:Bi(k)?mi(k):null,imageDark:Bi(d)?mi(d):null,style:p??null}}),h=C(()=>l.value.actions??[]);return()=>r("header",{class:["vp-hero-info-wrapper",{"hero-fullscreen":n.value.isFullScreen}],style:n.value.style},[s.heroBg?.(a.value)??[a.value.image?r("div",{class:["vp-hero-mask",{light:a.value.imageDark}],style:[{"background-image":`url(${a.value.image})`},a.value.style]}):null,a.value.imageDark?r("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${a.value.imageDark})`},a.value.style]}):null],r("div",{class:"vp-hero-info"},[s.heroLogo?.(t.value)??r(ri,{appear:!0,group:!0},()=>{const{image:k,imageDark:d,style:p,alt:c}=t.value;return[k?r("img",{key:"light",class:["vp-hero-image",{light:d}],style:p,src:k,alt:c}):null,d?r("img",{key:"dark",class:"vp-hero-image dark",style:p,src:d,alt:c}):null]}),s.heroInfo?.(n.value)??r("div",{class:"vp-hero-infos"},[n.value.text?r(ri,{appear:!0,delay:.04},()=>r("h1",{id:"main-title",class:"vp-hero-title"},n.value.text)):null,n.value.tagline?r(ri,{appear:!0,delay:.08},()=>r("div",{id:"main-description",innerHTML:n.value.tagline})):null,h.value.length?r(ri,{appear:!0,delay:.12},()=>r("p",{class:"vp-hero-actions"},h.value.map(k=>r(Ki,{class:["vp-hero-action",k.type??"default","no-external-link-icon"],config:k})))):null])]),n.value.isFullScreen?r(Ga,{onClick:()=>window.scrollTo({top:window.innerHeight-(document.querySelector("[vp-navbar]")?.clientHeight??0),behavior:"smooth"})}):null])}});const Wd=(i,{slots:s})=>{const{bgImage:l,bgImageDark:e,bgImageStyle:n,color:t,description:a,image:h,imageDark:k,header:d,highlights:p=[],type:c="un-order"}=i;return r("div",{class:"vp-highlight-wrapper",style:t?{color:t}:{}},[l?r("div",{class:["vp-highlight-bg",{light:e}],style:[{"background-image":`url(${l})`},n]}):null,e?r("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${e})`},n]}):null,r("div",{class:"vp-highlight"},[s.image?.(i)??[h?r("img",{class:["vp-highlight-image",{light:k}],src:mi(h),alt:""}):null,k?r("img",{class:"vp-highlight-image dark",src:mi(k),alt:""}):null],s.info?.(i)??[r("div",{class:"vp-highlight-info-wrapper"},r("div",{class:"vp-highlight-info"},[d?r("h2",{class:"vp-highlight-header",innerHTML:d}):null,a?r("div",{class:"vp-highlight-description",innerHTML:a}):null,s.highlights?.(p)??r(c==="order"?"ol":c==="no-order"?"dl":"ul",{class:"vp-highlights"},p.map(({icon:g,title:o,details:B,link:m})=>{const E=[r(c==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[g?r(Di("VPIcon"),{class:"vp-highlight-icon",icon:g}):null,r("span",{innerHTML:o})]),B?r(c==="no-order"?"dd":"div",{class:"vp-highlight-details",innerHTML:B}):null];return r(c==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:m}]},m?jn(m)?r("a",{class:"vp-highlight-item link",href:m,"aria-label":o,target:"_blank"},E):r(Li,{class:"vp-highlight-item link",to:m,"aria-label":o},()=>E):r("div",{class:"vp-highlight-item"},E))}))]))]])])};Wd.displayName="HighlightSection";var Xy=O({name:"HomePage",slots:Object,setup(i,{slots:s}){const l=ks();return()=>{const{features:e,highlights:n}=l.value;return r("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":l.value.heroText===""?"":"main-title"},[s.heroBefore?.(),r(Yy,null,s),s.heroAfter?.(),Qs(n)?n.map(t=>"features"in t?r(Qt,t):r(Wd,t)):Qs(e)?r(ri,{appear:!0,delay:.24},()=>r(Qt,{features:e})):null,s.content?.()??r(ri,{appear:!0,delay:.32},()=>r(Gn,null,s))])}}}),iB=O({name:"PortfolioHero",slots:Object,setup(i,{slots:s}){const l=gd(),e=ks(),n=ii(0),t=C(()=>e.value.titles?.[n.value]??""),a=ii(""),h=C(()=>{const{name:g,avatar:o,avatarDark:B,avatarAlt:m,avatarStyle:E}=e.value;return{name:g??l.value.name,avatar:o?mi(o):null,avatarDark:B?mi(B):null,alt:(m||g)??"",style:E??null}}),k=C(()=>{const{bgImage:g,bgImageDark:o,bgImageStyle:B}=e.value;return{image:Bi(g)?mi(g):null,imageDark:Bi(o)?mi(o):null,style:B??null}}),d=C(()=>{const{welcome:g,name:o,titles:B=[],medias:m}=e.value;return{name:o??l.value.name,welcome:g??"👋 Hi There, I'm",title:a.value,titles:B,medias:m??null}}),p=()=>{a.value="";let g=0,o=!1;const B=async()=>{if(!o)if(a.value+=t.value[g],g+=1,await Os(),g<t.value.length)setTimeout(()=>{B()},150);else{const m=d.value.titles.length;setTimeout(()=>{n.value=m<=1||n.value===d.value.titles.length-1?0:n.value+1},1e3)}};return B(),()=>{o=!0}};let c;return oi(()=>{us(t,()=>{c?.(),c=p()})}),()=>r("section",{id:"portfolio",class:["vp-portfolio",{bg:k.value.image}]},[s.portfolioBg?.(k.value)??[k.value.image?r("div",{class:["vp-portfolio-mask",{light:k.value.imageDark}],style:[{background:`url(${k.value.image}) center/cover no-repeat`},k.value.style]}):null,k.value.imageDark?r("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${k.value.imageDark}) center/cover no-repeat`},k.value.style]}):null],s.portfolioAvatar?.(h.value)??r("div",{class:"vp-portfolio-avatar"},[r(ri,{delay:.04},()=>{const{avatar:g,avatarDark:o,name:B,alt:m,style:E}=h.value;return[g?r("img",{key:"light",class:{light:o},src:g,title:B,alt:m,style:E}):null,o?r("img",{key:"dark",class:"dark",src:o,title:B,alt:m,style:E}):null]})]),r("div",{class:"vp-portfolio-container"},s.portfolioInfo?.(d.value)??r("div",{class:"vp-portfolio-info"},[r(ri,{appear:!0,delay:.08},()=>r("h6",{class:"vp-portfolio-welcome"},d.value.welcome)),r(ri,{appear:!0,delay:.12},()=>r("h1",{class:"vp-portfolio-name",id:"main-title"},d.value.name)),r(ri,{appear:!0,delay:.16},()=>r("h2",{class:"vp-portfolio-title"},a.value)),r(ri,{appear:!0,delay:.2},()=>d.value.medias?r("div",{class:"vp-portfolio-medias"},d.value.medias.map(({name:g,url:o,icon:B})=>r("a",{class:"vp-portfolio-media",href:o,rel:"noopener noreferrer",target:"_blank",title:g},r(Di("VPIcon"),{icon:B,sizing:"both"})))):Xi("SocialMedias")?r(Di("SocialMedias")):null)]))])}}),sB=O({name:"PortfolioHome",slots:Object,setup(i,{slots:s}){const l=ks();return()=>{const e=l.value.content??"portfolio";return r("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[r(iB,null,s),e==="none"?null:s.content?.()??r("div",r(ri,{appear:!0,delay:.24},()=>r(Gn,{class:{"vp-portfolio-content":e==="portfolio"}},s)))])}}}),lB=O({name:"Layout",slots:Object,setup(i,{slots:s}){const{frontmatter:l,page:e}=xi();return()=>[r(Ua),r(qa,null,{...s,default:s.default??(()=>l.value.portfolio?r(sB,null,s):l.value.home?r(Xy,null,s):r(qd,()=>r(Zy,{key:e.value.path},s))),navScreenBottom:s.navScreenBottom??(Xi("BloggerInfo")?()=>r(Di("BloggerInfo")):null)})]}}),eB=O({name:"NotFound",slots:Object,setup(i,{slots:s}){const{routeLocale:l,theme:e,themeLocale:n}=xi(),t=Xs(),a=ii(!1),h=C(()=>e.value.locales[a.value?l.value:"/"].routerLocales),k=()=>{if(!a.value)return h.value.notFoundMsg[0];const d=h.value.notFoundMsg;return d[Math.floor(Math.random()*d.length)]};return oi(()=>{a.value=!0}),()=>[r(Ua),r(qa,{noSidebar:!0},{...s,default:()=>r("main",{id:"main-content",class:"vp-page not-found"},s.default?.()??[r("div",{class:"not-found-hint"},[r("p",{class:"error-code"},"404"),r("h1",{class:"error-title"},h.value.notFoundTitle),r("p",{class:"error-hint"},k())]),r("div",{class:"actions"},[r("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},h.value.back),r("button",{type:"button",class:"action-button",onClick:()=>{t.push(n.value.home??l.value)}},h.value.home)])])})]}});const Wa=()=>r(Fi,{name:"lock"},()=>r("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));Wa.displayName="LockIcon";const nB=JSON.parse('{"category":{"/":{"path":"/category/","map":{"ApiGateway":{"path":"/category/apigateway/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},"DisTx":{"path":"/category/distx/","indexes":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]},"Cache":{"path":"/category/cache/","indexes":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73]},"MQ":{"path":"/category/mq/","indexes":[74,75,76,77,78,79,80,81,82,83,84,85,86]},"RegisterCenter":{"path":"/category/registercenter/","indexes":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109]},"rpc":{"path":"/category/rpc/","indexes":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134]},"Schedule":{"path":"/category/schedule/","indexes":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155]},"Search":{"path":"/category/search/","indexes":[156,157,158,159,160,161,162,163,164,165,166,167]},"Trace":{"path":"/category/trace/","indexes":[168,169,170,171,172,173,174,175,176,177,178,179,180]}}}},"tag":{"/":{"path":"/tag/","map":{"api-gateway":{"path":"/tag/api-gateway/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},"dis-tx":{"path":"/tag/dis-tx/","indexes":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]},"cache":{"path":"/tag/cache/","indexes":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73]},"mq":{"path":"/tag/mq/","indexes":[74,75,76,77,78,79,80,81,82,83,84,85,86]},"register-center":{"path":"/tag/register-center/","indexes":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109]},"microservices":{"path":"/tag/microservices/","indexes":[87]},"service-discovery":{"path":"/tag/service-discovery/","indexes":[88]},"heartbeat":{"path":"/tag/heartbeat/","indexes":[88]},"apollo":{"path":"/tag/apollo/","indexes":[96,97,98,99]},"rpc":{"path":"/tag/rpc/","indexes":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134]},"schedule":{"path":"/tag/schedule/","indexes":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155]},"search":{"path":"/tag/search/","indexes":[156,157,158,159,160,161,162,163,164,165,166,167]},"data-analysis":{"path":"/tag/data-analysis/","indexes":[156,157,158,159,160,161,162,163,164,165,166,167]},"trace":{"path":"/tag/trace/","indexes":[168,169,170,171,172,173,174,175,176,177,178,179,180]},"monitor":{"path":"/tag/monitor/","indexes":[168,169,170,171,172,173,174,175,176,177,178,179,180]}}}}}'),Kd=JSON.parse('["/posts/api-gateway/1-1-1-api-gateway-definition-and-positioning.html","/posts/api-gateway/1-1-2-api-gateway-role-in-microservices-evolution.html","/posts/api-gateway/1-1-3-differences-between-api-gateway-and-other-components.html","/posts/api-gateway/1-1-what-is-api-gateway.html","/posts/api-gateway/1-2-1-api-gateway-request-routing.html","/posts/api-gateway/1-2-2-api-gateway-protocol-conversion.html","/posts/api-gateway/1-2-3-api-gateway-security-authentication-authorization.html","/posts/api-gateway/1-2-4-api-gateway-rate-limiting-circuit-breaker-degradation.html","/posts/api-gateway/1-2-5-api-gateway-logging-monitoring.html","/posts/api-gateway/1-2-api-gateway-core-responsibilities.html","/posts/api-gateway/1-3-1-collaboration-with-service-registration-discovery.html","/posts/api-gateway/1-3-2-relationship-with-configuration-center-message-queue.html","/posts/api-gateway/1-3-3-api-gateway-position-in-service-governance-system.html","/posts/api-gateway/1-3-api-gateway-and-microservices-architecture.html","/posts/api-gateway/1-4-1-static-and-dynamic-routing-implementation.html","/posts/api-gateway/1-4-2-reverse-proxy-implementation-principles.html","/posts/api-gateway/1-4-3-multi-protocol-support-implementation.html","/posts/api-gateway/1-4-request-routing-and-forwarding-mechanisms.html","/posts/api-gateway/2-5-1-identity-authentication-mechanisms.html","/posts/api-gateway/2-5-2-authorization-and-rbac-model.html","/posts/api-gateway/2-5-api-gateway-security-mechanisms.html","/posts/distributed-tx/5-3-big-data-message-transaction.html","/posts/distributed-tx/1-1-what-is-distributed-transaction.html","/posts/distributed-tx/1-2-distributed-transaction-pain-points.html","/posts/distributed-tx/1-3-distributed-transaction-theoretical-models.html","/posts/distributed-tx/2-1-local-transaction-message-queue.html","/posts/distributed-tx/2-2-tcc-try-confirm-cancel.html","/posts/distributed-tx/2-3-saga-pattern.html","/posts/distributed-tx/2-4-other-patterns-and-practices.html","/posts/distributed-tx/3-1-seata-deep-dive.html","/posts/distributed-tx/3-2-spring-cloud-transaction-management.html","/posts/distributed-tx/3-3-other-frameworks-analysis.html","/posts/distributed-tx/4-1-idempotency-design-guarantee.html","/posts/distributed-tx/4-2-transaction-monitoring-tracing.html","/posts/distributed-tx/4-3-high-concurrency-performance-optimization.html","/posts/distributed-tx/4-4-cap-trade-offs-distributed-transactions.html","/posts/distributed-tx/5-1-ecommerce-flash-sale-inventory-transaction.html","/posts/distributed-tx/5-2-financial-system-transaction-case.html","/posts/cache/1-1-0_Cache_Basics_Overview.html","/posts/cache/1-1-1_Why_Cache_Is_Needed.html","/posts/cache/1-1-2_Cache_Applicable_Scenarios_And_Risks.html","/posts/cache/1-1-3_Local_Cache_vs_Distributed_Cache.html","/posts/cache/1-1-4_Cache_Advantages_And_Challenges.html","/posts/cache/1-2-0_Distributed_Cache_Core_Principles_Overview.html","/posts/cache/1-2-1_Distributed_Architecture_Cache_Requirements.html","/posts/cache/1-2-2_CAP_Theorem_And_Cache_System_Tradeoffs.html","/posts/cache/1-2-3_Consistent_Hashing_And_Node_Sharding.html","/posts/cache/1-2-4_Cache_And_Database_Relationship.html","/posts/cache/1-3-0_Common_Distributed_Cache_Selection_Overview.html","/posts/cache/1-3-1_Memcached_Lightweight_High_Speed_Cache.html","/posts/cache/1-3-2_Redis_All_Powerful_Cache_Database.html","/posts/cache/1-3-3_Tair_Couchbase_Aerospike_Introduction.html","/posts/cache/1-3-4_How_To_Choose_Cache_Technology.html","/posts/cache/1-4-0_Cache_Patterns_And_Design_Strategies_Overview.html","/posts/cache/1-4-1_Cache_Patterns_And_Design_Strategies.html","/posts/cache/1-4-2_Cache_Expiration_And_Update_Strategies.html","/posts/cache/1-4-3_Cache_And_Database_Consistency.html","/posts/cache/1-5-0_Redis_Basics_And_Core_Data_Structures_Overview.html","/posts/cache/1-5-1_Redis_Basics_And_Core_Data_Structures.html","/posts/cache/1-5-2_Redis_Advanced_Features_And_Extensions.html","/posts/cache/1-5-3_Redis_Cluster_Principles_And_Applications.html","/posts/cache/1-6-0_Memcached_In_Action_Overview.html","/posts/cache/1-6-1_Memcached_Architecture_And_Working_Principles.html","/posts/cache/1-6-2_Memcached_Memory_Management_And_LRU_Eviction_Strategy.html","/posts/cache/1-6-3_Memcached_And_Redis_Comparison_And_Combined_Use.html","/posts/cache/1-7-0_Redis_Basics_And_Core_Data_Structures_Overview.html","/posts/cache/1-7-1_Redis_Core_Data_Structures_In_Depth.html","/posts/cache/1-7-2_Redis_Transactions_And_Lua_Scripts.html","/posts/cache/1-8-0_Redis_Advanced_Features_And_Extensions_Overview.html","/posts/cache/1-8-1_Redis_Persistence_Mechanisms.html","/posts/cache/1-8-2_Redis_PubSub_And_Stream.html","/posts/cache/1-8-3_Redis_Modules_Extensions.html","/posts/cache/1-8-4_Redis_Cluster_Principles_And_Applications.html","/posts/cache/1-9-0_Memcached_In_Action_Overview.html","/posts/mq/1-1-why-message-queues.html","/posts/mq/1-2-system-communication-comparison.html","/posts/mq/1-3-mq-benefits-risks.html","/posts/mq/2-1-message-queue-basic-concepts-overview.html","/posts/mq/2-2-point-to-point-vs-publish-subscribe-in-depth.html","/posts/mq/2-3-push-vs-pull-consumption-in-depth.html","/posts/mq/3-1-message-queue-core-elements-overview.html","/posts/mq/3-2-producers-brokers-consumers-in-depth.html","/posts/mq/3-3-message-persistence-in-depth.html","/posts/mq/4-1-message-reliability-consistency.html","/posts/mq/4-2-delivery-semantics-details.html","/posts/mq/4-3-message-loss-duplication-ordering.html","/posts/mq/4-4-idempotency-design.html","/posts/register-center/1-1-1-evolution-from-monolith-to-microservices.html","/posts/register-center/1-2-1-service-registration-discovery-and-heartbeat.html","/posts/register-center/2-1-minimal-viable-registry.html","/posts/register-center/2-2-config-center-prototype.html","/posts/register-center/2-3-persistence-and-high-availability-design.html","/posts/register-center/3-1-zookeeper.html","/posts/register-center/3-2-eureka.html","/posts/register-center/3-3-consul.html","/posts/register-center/3-4-nacos.html","/posts/register-center/3-5-1-apollo-namespace-cluster-model.html","/posts/register-center/3-5-2-apollo-config-publishing-and-gray-release.html","/posts/register-center/3-5-3-apollo-client-cache-and-rollback.html","/posts/register-center/3-5-4-apollo-enterprise-best-practices.html","/posts/register-center/4-1-service-discovery-patterns.html","/posts/register-center/4-2-config-center-advanced-features.html","/posts/register-center/4-3-consistency-and-high-availability.html","/posts/register-center/4-4-performance-and-scalability-optimization.html","/posts/register-center/5-1-service-registry-and-config-center-in-e-commerce.html","/posts/register-center/5-2-enterprise-best-practices.html","/posts/register-center/5-3-monitoring-and-operations.html","/posts/register-center/6-1-cloud-native-and-service-mesh.html","/posts/register-center/6-2-configuration-as-code.html","/posts/register-center/6-3-summary-and-learning-path.html","/posts/rpc/1-1-what-is-rpc.html","/posts/rpc/1-2-rpc-vs-local-call.html","/posts/rpc/1-3-rpc-vs-rest-vs-grpc.html","/posts/rpc/1-4-why-microservices-need-rpc.html","/posts/rpc/2-1-rpc-core-components.html","/posts/rpc/2-2-client-server-model.html","/posts/rpc/2-3-serialization-deserialization.html","/posts/rpc/2-4-network-protocols.html","/posts/rpc/2-5-service-discovery-load-balancing.html","/posts/rpc/3-1-rpc-applications.html","/posts/rpc/3-2-distributed-system-position.html","/posts/rpc/3-3-ecommerce-payment-log-recommendation-practices.html","/posts/rpc/3-4-when-to-use-rpc-mq-rest.html","/posts/rpc/4-1-rpc-implementation-foundations.html","/posts/rpc/4-2-socket-programming-for-remote-calls.html","/posts/rpc/4-3-blocking-io-nio-netty-basics.html","/posts/rpc/4-4-netty-request-response-encapsulation.html","/posts/rpc/4-5-dynamic-proxy-service-invocation.html","/posts/rpc/5-1-service-registration-discovery.html","/posts/rpc/5-2-zookeeper-service-registration.html","/posts/rpc/5-3-nacos-consul-eureka-service-discovery.html","/posts/rpc/6-1-timeout-retry-mechanism.html","/posts/rpc/6-2-circuit-breaker-degradation.html","/posts/rpc/6-3-service-rate-limiting.html","/posts/rpc/7-1-dubbo-architecture-core-modules.html","/posts/schedule/1-1-1-why-distributed-scheduling.html","/posts/schedule/1-1-2-core-concepts-of-scheduling.html","/posts/schedule/1-1-3-basic-model-of-distributed-scheduling.html","/posts/schedule/1-2-1-minimal-viable-scheduler.html","/posts/schedule/1-2-2-distributed-scheduling-prototype.html","/posts/schedule/1-2-3-high-availability-and-scalability.html","/posts/schedule/1-3-1-quartz-framework.html","/posts/schedule/1-3-2-elastic-job-framework.html","/posts/schedule/1-3-3-xxl-job-framework.html","/posts/schedule/1-3-4-other-scheduling-systems.html","/posts/schedule/1-4-1-distributed-coordination-mechanisms.html","/posts/schedule/1-4-2-task-dependency-and-workflow-scheduling.html","/posts/schedule/1-4-3-task-execution-and-fault-tolerance.html","/posts/schedule/1-4-4-scheduling-performance-optimization.html","/posts/schedule/1-4-5-security-and-multi-tenancy.html","/posts/schedule/1-5-1-scheduling-platform-enterprise-practices.html","/posts/schedule/1-5-2-microservices-integration.html","/posts/schedule/1-5-3-monitoring-and-operations.html","/posts/schedule/1-6-1-cloud-native-and-containerized-scheduling.html","/posts/schedule/1-6-2-ai-driven-intelligent-scheduling.html","/posts/schedule/1-6-3-summary-and-learning-path.html","/posts/search/1-1-1-traditional-database-vs-search-engine.html","/posts/search/1-1-2-olap-log-analytics-realtime-demand.html","/posts/search/1-1-3-enterprise-information-retrieval-data-driven-decision.html","/posts/search/1-1-why-search-and-analytics-middleware.html","/posts/search/1-2-1-index-inverted-index-forward-index.html","/posts/search/1-2-2-document-field-tokenization-analyzer.html","/posts/search/1-2-3-aggregation-filter-sort-scoring.html","/posts/search/1-2-core-concepts.html","/posts/search/1-3-1-standalone-vs-distributed-architecture.html","/posts/search/1-3-2-real-time-streaming-vs-batch-processing.html","/posts/search/1-3-3-data-ingestion-storage-query-visualization-pipeline.html","/posts/search/1-3-search-analytics-architecture.html","/posts/trace/1-1-why-distributed-tracing-and-monitoring.html","/posts/trace/1-2-evolution-from-monolith-to-distributed-systems.html","/posts/trace/1-3-complexity-of-service-call-chains.html","/posts/trace/1-4-performance-analysis-and-fault-diagnosis.html","/posts/trace/2-1-core-concepts-and-metrics-system.html","/posts/trace/2-2-span-trace-traceid.html","/posts/trace/2-3-logs-metrics-traces.html","/posts/trace/2-4-sla-slo-sli.html","/posts/trace/2-5-metrics-system-design-principles.html","/posts/trace/4-1-log-structured-and-unstructured.html","/posts/trace/4-2-log-collection-tools.html","/posts/trace/4-3-distributed-log-aggregation-and-query.html","/posts/trace/4-4-log-analysis-and-troubleshooting.html","/intro.html","/posts/schedule/","/posts/api-gateway/","/posts/mq/","/posts/register-center/","/posts/search/","/posts/trace/","/posts/api-gateway/index-desc.html","/posts/distributed-tx/index-desc.html","/posts/cache/index-desc.html","/posts/mq/index-desc.html","/posts/register-center/index-desc.html","/posts/rpc/index-desc.html","/posts/schedule/index-desc.html","/posts/search/index-desc.html","/posts/trace/index-desc.html"]'),tB=JSON.parse('{"article":{"/":{"path":"/article/","indexes":[181,21,87,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180]}},"star":{"/":{"path":"/star/","indexes":[181]}},"timeline":{"/":{"path":"/timeline/","indexes":[21,87,182,183,184,185,186,187,181,188,189,190,191,192,193,194,195,196,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180]}}}'),Jt=ei(nB);Tl(Jt);const Qd=i=>{const{frontmatter:s,page:l,routeLocale:e}=wl();return C(()=>{const n=i??s.value.blog?.key??"";if(!n)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!(n in Jt.value))throw new Error(`useBlogCategory: key ${n} is invalid`);const t=Jt.value[n][e.value],a={path:t.path,map:{}};for(const h in t.map){const k=t.map[h];a.map[h]={path:k.path,items:[]};for(const d of k.indexes){const{path:p,meta:c}=os(Kd[d]);a.map[h].items.push({path:p,info:c})}l.value.path===k.path&&(a.currentItems=a.map[h].items)}return a})},Zt=ei(tB);Tl(Zt);const Wn=i=>{const{frontmatter:s,routeLocale:l}=wl();return C(()=>{const e=i??s.value.blog?.key??"";if(!e)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!(e in Zt.value))throw new Error(`useBlogType: key ${i} is invalid`);const n=Zt.value[e][l.value],t={path:n.path,items:[]};for(const a of n.indexes){const{path:h,meta:k}=os(Kd[a]);t.items.push({path:h,info:k})}return t})},aB={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',Gitlab:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitlab-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#E8F0FF"/><path fill="#E24329" d="m512 808 110-340H402z"/><path fill="#FC6D26" d="M512 808 402 468H247z"/><path fill="#E24329" d="M247 468h155l-67-204c-4-11-19-11-22 0z"/><path fill="#FC6D26" d="m512 808 110-340h156z"/><path fill="#FCA326" d="m778 468 33 104c3 10-1 19-9 25L512 808z"/><path fill="#E24329" d="M778 468H622l68-204c3-11 18-11 21 0z"/><path fill="#FCA326" d="M512 808 222 597c-8-5-12-16-9-25l34-104z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Wechat:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon wechat-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2AAE67"/><path fill="#FFF" d="M501 417c-14 0-25-12-25-26s11-26 25-26 26 12 26 26-12 26-26 26m-144 0c-15 0-26-12-26-26s11-26 26-26 25 12 25 26-11 26-25 26m72-150c-120 0-217 82-217 183 0 55 29 104 75 138a15 15 0 0 1 6 11l-1 5-9 37-2 5c0 4 4 8 8 8l4-2 47-27c4-3 8-4 12-4l6 1a255 255 0 0 0 83 10c-5-14-7-29-7-45 0-92 88-166 197-166h9c-16-87-103-154-211-154"/><path fill="#FFF" d="M692 561c-13 0-23-10-23-23 0-12 10-22 23-22 12 0 22 10 22 22 0 13-10 23-22 23m-121 0c-12 0-23-10-23-23 0-12 11-22 23-22s23 10 23 22c0 13-11 23-23 23m179 141c38-28 62-69 62-115 0-84-81-152-181-152s-180 68-180 152 80 152 180 152a212 212 0 0 0 65-9l9 3 40 23 3 1a6 6 0 0 0 6-6l-1-5-8-30v-4c0-4 2-8 5-10"/></svg>'};var hB=[];const sn=()=>{const{theme:i,themeLocale:s}=xi();return C(()=>({...i.value.blog,...s.value.blog}))};var Jd=O({name:"SocialMedias",setup(){const i=sn(),s=is(),l=C(()=>ke(i.value.medias??{}).map(([e,n])=>typeof n=="string"?{name:e,icon:aB[e],link:n}:{name:e,...n}));return()=>l.value.length?r("div",{class:"vp-social-medias"},l.value.map(({name:e,icon:n,link:t})=>r("a",{class:"vp-social-media",href:t,rel:"noopener noreferrer",target:"_blank","aria-label":e||"",...s.value?{}:{"data-balloon-pos":"up"},innerHTML:re(n)?`<img class="vp-social-media-icon ${e}-icon" src="${n}">`:n}))):null}});const Zd=Symbol(""),ln=()=>{const i=bi(Zd);if(!i)throw new Error("useArticles() is called without provider.");return i},rB=()=>{const i=Wn("article");Cs(Zd,i)},sl=()=>{const i=Ts();return C(()=>i.value.blogLocales)},Yd=Symbol.for("categoryMap"),en=()=>{const i=bi(Yd);if(!i)throw new Error("useCategoryMap() is called without provider.");return i},kB=()=>{const i=Qd("category");Cs(Yd,i)},Xd=Symbol.for("tagMap"),nn=()=>{const i=bi(Xd);if(!i)throw new Error("useTagMap() is called without provider.");return i},pB=()=>{const i=Qd("tag");Cs(Xd,i)},ic=Symbol(""),Ka=()=>{const i=bi(ic);if(!i)throw new Error("useTimeline() is called without provider.");return i},dB=()=>{const i=Wn("timeline"),s=Fp(),l=C(()=>{const e=[];return i.value.items.forEach(({info:n,path:t})=>{const a=xa(n.date);if(a){const h=a.getFullYear();(!e[0]||e[0].year!==h)&&e.unshift({year:h,items:[]}),e[0].items.push({date:a.toLocaleDateString(s.value,{month:"numeric",day:"numeric"}),info:n,path:t})}}),{...i.value,config:e.reverse()}});Cs(ic,l)};var Qa=O({name:"BloggerInfo",slots:Object,setup(i,{slots:s}){const l=sl(),e=sn(),{siteLocale:n,themeLocale:t}=xi(),a=ln(),h=en(),k=nn(),d=Ka(),p=il(),c=C(()=>({name:e.value.name??Ne(t.value.author)[0]?.name??n.value.title,avatar:e.value.avatar??t.value.logo??null,description:e.value.description??null})),g=C(()=>e.value.intro);return()=>{const{article:o,category:B,tag:m,timeline:E}=l.value,_=[[a.value.path,a.value.items.length,o],[h.value.path,_s(h.value.map).length,B],[k.value.path,_s(k.value.map).length,m],[d.value.path,d.value.items.length,E]];return r("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},s.bloggerInfo?.(c.value)??[r("div",{class:"vp-blogger",...g.value?{"aria-label":l.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>{p(g.value)}}:{}},[c.value.avatar?r("img",{class:"vp-blogger-avatar",src:mi(c.value.avatar),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,c.value.name?r("div",{class:"vp-blogger-name",property:"name"},c.value.name):null,c.value.description?r("div",{class:"vp-blogger-description",innerHTML:c.value.description}):null,g.value?r("meta",{property:"url",content:mi(g.value)}):null]),r("div",{class:"vp-blog-counts"},_.map(([f,A,F])=>r(Li,{class:"vp-blog-count",to:f},()=>[r("div",{class:"count"},A),r("div",F)]))),r(Jd)])}}});const sc=Symbol(""),Ja=()=>{const i=bi(sc);if(!i)throw new Error("useStars() is called without provider.");return i},cB=()=>{const i=Wn("star");Cs(sc,i)},Za=()=>r(Fi,{name:"category"},()=>r("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Za.displayName="CategoryIcon";const Ya=()=>r(Fi,{name:"tag"},()=>r("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Ya.displayName="TagIcon";const Xa=()=>r(Fi,{name:"timeline"},()=>r("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Xa.displayName="TimelineIcon";const lc=()=>r(Fi,{name:"slides"},()=>r("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));lc.displayName="SlideIcon";const ec=()=>r(Fi,{name:"sticky"},()=>[r("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);ec.displayName="StickyIcon";const ih=()=>r(Fi,{name:"article"},()=>r("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));ih.displayName="ArticleIcon";const gB=i=>{const s=Ts();return C(()=>{const{["author"]:l}=i.value;return l?Ne(l):l===!1?[]:Ne(s.value.author,!1)})},oB=i=>{const s=en();return C(()=>ud(i.value.category).map(l=>({name:l,path:s.value.map[l].path})))},uB=i=>{const s=nn();return C(()=>Ad(i.value.tag).map(l=>({name:l,path:s.value.map[l].path})))},AB=i=>C(()=>{const{["date"]:s}=i.value;return xa(s)}),yB=i=>{const s=he(i,"info"),l=sn(),e=gB(s),n=oB(s),t=uB(s),a=AB(s),h=ad(),k=C(()=>({author:e.value,category:n.value,date:a.value,tag:t.value,isOriginal:s.value.isOriginal??!1,readingTime:s.value.readingTime??null,readingTimeLocale:s.value.readingTime&&h.value?td(s.value.readingTime,h.value):null,pageview:i.path})),d=C(()=>l.value.articleInfo??null);return{info:k,items:d}};var BB=O({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(i,{slots:s}){const l=he(i,"info"),{info:e,items:n}=yB(i),t=Xs();return()=>{const{title:a,type:h,isEncrypted:k=!1,cover:d=null,excerpt:p=null,sticky:c}=l.value,g=e.value;return r("div",{class:"vp-article-wrapper",onClick:o=>{o.target?.matches("summary")||(o.preventDefault(),t.push(i.path))}},r("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[s.articleCover?.({cover:d})??(d?[r("img",{class:"vp-article-cover",src:mi(d),alt:"",loading:"lazy"}),r("meta",{property:"image",content:mi(d)})]:[]),c?r(ec):null,r(Li,{to:i.path},()=>s.articleTitle?.({title:a,isEncrypted:k,type:h})??r("header",{class:"vp-article-title"},[k?r(Wa):null,h==="slide"?r(lc):null,r("span",{property:"headline"},a)])),s.articleExcerpt?.({excerpt:p})??(p?r("div",{class:"vp-article-excerpt",innerHTML:p}):null),r("hr",{class:"vp-article-hr"}),s.articleInfo?.(g)??r(bd,{info:g,items:n.value,onClick:o=>{o.stopPropagation()}})]))}}});const vB='<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>';var mB=O({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(i,{emit:s}){const l=new La,e=Ts(),n=ii(""),t=C(()=>e.value.paginationLocales),a=C(()=>Math.ceil(i.total/i.perPage)),h=C(()=>!!a.value&&a.value!==1),k=C(()=>a.value<7?!1:i.current>4),d=C(()=>a.value<7?!1:i.current<a.value-3),p=C(()=>{const{current:o}=i;let B=1,m=a.value;const E=[];a.value>=7&&(o<=4&&o<a.value-3?(B=1,m=5):o>4&&o>=a.value-3?(m=a.value,B=a.value-4):a.value>7&&(B=o-2,m=o+2));for(let _=B;_<=m;_++)E.push(_);return E}),c=o=>{s("updateCurrentPage",o)},g=o=>{const B=parseInt(o,10);B<=a.value&&B>0?c(B):l.pop(`${vB}${t.value.errorText.replace(/\$page/gu,a.value.toString())}`)};return()=>r("div",{class:"vp-pagination"},h.value?r("nav",{class:"vp-pagination-list"},[r("div",{class:"vp-pagination-number "},[i.current>1?r("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>{c(i.current-1)}},t.value.prev):null,k.value?[r("div",{role:"navigation",onClick:()=>{c(1)}},1),r("div",{class:"ellipsis"},"...")]:null,p.value.map(o=>r("div",{key:o,class:{active:i.current===o},role:"navigation",onClick:()=>{c(o)}},o)),d.value?[r("div",{class:"ellipsis"},"..."),r("div",{role:"navigation",onClick:()=>{c(a.value)}},a.value)]:null,i.current<a.value?r("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>{c(i.current+1)}},t.value.next):null]),r("div",{class:"vp-pagination-nav"},[r("label",{for:"navigation-text"},`${t.value.navigate}: `),r("input",{id:"navigation-text",value:n.value,onInput:({target:o})=>{n.value=o.value},onKeydown:o=>{o.key==="Enter"&&(o.preventDefault(),g(n.value))}}),r("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:t.value.action,onClick:()=>{g(n.value)}},t.value.action)])]):[])}}),sh=O({name:"ArticleList",props:{items:{type:Array,required:!0}},slots:Object,setup(i,{slots:s}){const l=Ms(),e=Xs(),n=sl(),t=sn(),a=ii(1),h=C(()=>t.value.articlePerPage??10),k=C(()=>i.items.slice((a.value-1)*h.value,a.value*h.value)),d=async p=>{a.value=p;const c={...l.query};!(c.page===p.toString()||p===1&&!c.page)&&(p===1?delete c.page:c.page=p.toString(),await e.push({path:l.path,query:c}))};return oi(()=>{const{page:p}=l.query;d(p?Number(p):1),Si(a,()=>{const c=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,c)},100)})}),()=>r("div",{id:"article-list",class:"vp-article-list",role:"feed"},k.value.length?[...k.value.map(({info:p,path:c},g)=>r(ri,{appear:!0,delay:g*.04},()=>r(BB,{key:c,info:p,path:c},s))),r(mB,{current:a.value,perPage:h.value,total:i.items.length,onUpdateCurrentPage:d})]:r("h2",{class:"vp-empty-hint"},n.value.empty.replace("$text",n.value.article.toLocaleLowerCase())))}});const FB="//theme-hope-assets.vuejs.press/hero/default.jpg";var fB=O({name:"BlogHero",slots:Object,setup(i,{slots:s}){const{frontmatter:l,siteLocale:e}=xi(),n=C(()=>{const{heroText:h,heroStyle:k,tagline:d,heroFullScreen:p=!1}=l.value;return{text:h??(e.value.title||"Hello"),tagline:d??"",style:k??null,isFullScreen:p}}),t=C(()=>{const{heroImage:h,heroImageDark:k,heroAlt:d,heroImageStyle:p}=l.value;return{image:h?mi(h):null,imageDark:k?mi(k):null,style:p??null,alt:d??""}}),a=C(()=>{const{bgImage:h,bgImageDark:k,bgImageStyle:d}=l.value;return{image:Bi(h)?mi(h):h===!1?null:FB,imageDark:Bi(k)?mi(k):null,style:d??null}});return()=>l.value.hero===!1?null:r("div",{class:["vp-blog-hero",{"hero-fullscreen":l.value.heroFullScreen,"no-bg":!a.value.image}]},[s.heroBg?.(a.value)??[a.value.image?r("div",{class:["vp-blog-mask",{light:a.value.imageDark}],style:[{background:`url(${a.value.image}) center/cover no-repeat`},a.value.style]}):null,a.value.imageDark?r("div",{class:"vp-blog-mask dark",style:[{background:`url(${a.value.imageDark}) center/cover no-repeat`},a.value.style]}):null],s.heroLogo?.(t.value)??r(ri,{appear:!0,group:!0,delay:.04},()=>{const{image:h,imageDark:k,style:d,alt:p}=t.value;return[h?r("img",{key:"light",class:["vp-blog-hero-image",{light:k}],style:d,src:h,alt:p}):null,k?r("img",{key:"dark",class:"vp-blog-hero-image dark",style:d,src:k,alt:p}):null]}),s.heroInfo?.(n.value)??r("div",{class:"vp-blog-hero-info"},[r(ri,{appear:!0,delay:.08},()=>n.value.text?r("h1",{class:"vp-blog-hero-title"},n.value.text):null),r(ri,{appear:!0,delay:.12},()=>n.value.tagline?r("div",{class:"vp-blog-hero-description",innerHTML:n.value.tagline}):null)]),l.value.heroFullScreen?r(Ga,{onClick:()=>window.scrollTo({top:window.innerHeight-(document.querySelector("[vp-navbar]")?.clientHeight??0),behavior:"smooth"})}):null])}}),CB=O({name:"ArticlesInfo",setup(){const i=ln(),s=sl(),l=Ja(),e=il(),n=C(()=>i.value.items.length),t=C(()=>l.value.items);return()=>r(ri,()=>r("div",{class:"vp-star-article-wrapper"},[r("div",{class:"title",onClick:()=>{e(i.value.path)}},[r(ih),r("span",{class:"num"},n.value),s.value.article]),r("hr"),t.value.length?r("ul",{class:"vp-star-articles"},t.value.map(({info:a,path:h},k)=>r(ri,{appear:!0,delay:.08*(k+1)},()=>r("li",{class:"vp-star-article"},r(Li,{to:h},()=>a.title))))):r("div",{class:"vp-star-article-empty"},s.value.empty.replace("$text",s.value.star))]))}}),nc=O({name:"CategoryList",setup(){const i=Ke(),s=en();return()=>r("ul",{class:"vp-category-list"},ke(s.value.map).sort(([,l],[,e])=>e.items.length-l.items.length).map(([l,{path:e,items:n}])=>r("li",{class:"vp-category-item"},r(Li,{class:["vp-category",`color${Ye(l,Number(ce.colorNumber))}`,{active:e===i.value.path}],to:e},()=>[l,r("span",{class:"vp-category-count"},n.length)]))))}}),EB=O({name:"CategoriesInfo",setup(){const i=sl(),s=en(),l=il(),e=C(()=>_s(s.value.map).length);return()=>r("div",{class:"vp-category-wrapper"},[e.value?[r("div",{class:"title",onClick:()=>{l(s.value.path)}},[r(Za),r("span",{class:"num"},e.value),i.value.category]),r("hr"),r(ri,{delay:.04},()=>r(nc))]:r("div",{class:"vp-category-empty"},i.value.empty.replace("$text",i.value.category))])}}),tc=O({name:"TagList",setup(){const i=ks(),s=nn(),l=e=>e===i.value.blog?.name;return()=>r("ul",{class:"vp-tag-list"},ke(s.value.map).sort(([,e],[,n])=>n.items.length-e.items.length).map(([e,{path:n,items:t}])=>r("li",{class:"vp-tag-item"},r(Li,{class:["vp-tag",`color${Ye(e,Number(ce.colorNumber))}`,{active:l(e)}],to:n},()=>[e,r("span",{class:"vp-tag-count"},t.length)]))))}}),bB=O({name:"TagsInfo",setup(){const i=sl(),s=nn(),l=il(),e=C(()=>_s(s.value.map).length);return()=>r("div",{class:"vp-tag-wrapper"},[e.value?[r("div",{class:"title",onClick:()=>{l(s.value.path)}},[r(Ya),r("span",{class:"num"},e.value),i.value.tag]),r("hr"),r(ri,{delay:.04},()=>r(tc))]:r("div",{class:"vp-tag-empty"},i.value.empty.replace("$text",i.value.tag))])}}),_B=O({name:"TimelineList",setup(){const i=sl(),s=Ka(),l=il();return()=>r("div",{class:"timeline-list-wrapper"},[r("div",{class:"title",onClick:()=>{l(s.value.path)}},[r(Xa),r("span",{class:"num"},s.value.items.length),i.value.timeline]),r("hr"),r("div",{class:"timeline-content"},r("ul",{class:"timeline-list"},s.value.config.map(({year:e,items:n},t)=>r(ri,{appear:!0,delay:.08*(t+1)},()=>r("li",[r("h3",{class:"timeline-year"},e),r("ul",{class:"timeline-year-wrapper"},n.map(({date:a,info:h,path:k})=>r("li",{class:"timeline-item"},[r("span",{class:"timeline-date"},a),r(Li,{class:"timeline-title",to:k},()=>h.title)])))])))))])}});const DB={article:ih,category:Za,tag:Ya,timeline:Xa};var ac=O({name:"InfoList",setup(){const i=sl(),s=ii("article");return()=>r("div",{class:"vp-blog-infos"},[r("div",{class:"vp-blog-type-switcher"},ke(DB).map(([l,e])=>r("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{s.value=l}},r("div",{class:["vp-blog-type-icon-wrapper",{active:s.value===l}],"aria-label":i.value[l],"data-balloon-pos":"down"},r(e))))),r(ri,()=>s.value==="article"?r(CB):s.value==="category"?r(EB):s.value==="tag"?r(bB):r(_B))])}});const tn=(i,{slots:s})=>r("aside",{class:"vp-blog-info-wrapper"},[s.infoBefore?.(),r(ri,()=>r(Qa,{},s)),r(ri,{delay:.04},()=>r(ac)),s.infoAfter?.()]);tn.displayName="InfoPanel";var SB=O({name:"ProjectPanel",props:{items:{type:Array,required:!0}},setup(i){const s=is(),l=il();return()=>r("div",{class:"vp-project-panel"},i.items.map(({icon:e,link:n,name:t,desc:a,background:h})=>r("a",{class:["vp-project-card",{[`color${Ye(t,Number(ce.colorNumber))}`]:!s.value&&!h}],...h?{style:h}:{},href:zn(n)?mi(n):n,onClick:k=>{l(n),k.preventDefault()}},[e?r(Di("VPIcon"),{class:"vp-project-icon",icon:e}):null,r("div",{class:"vp-project-name"},t),r("div",{class:"vp-project-desc"},a)])))}}),TB=O({name:"BlogHome",slots:Object,setup(i,{slots:s}){const l=ln(),e=ks(),n=C(()=>e.value.projects??[]);return()=>r("div",{class:"vp-page vp-blog-home"},[s.heroBefore?.(),r(fB,{},s),s.heroAfter?.(),r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},[s.articlesBefore?.()??(n.value.length?r(ri,{appear:!0,delay:.16},()=>r(SB,{items:n.value})):null),r(ri,{appear:!0,delay:.24},()=>r(sh,{items:l.value.items},s)),s.articlesAfter?.()]),r(ri,{appear:!0,delay:.16},()=>r(tn,{key:"blog"},s))]),s.content?.()??r(ri,{appear:!0,delay:.28},()=>r(Gn,{},s))])}}),wB=O({name:"BlogMainLayout",slots:Object,setup(i,{slots:s}){const{isMobile:l}=Un();return()=>[r(Ua),r(qa,{noSidebar:!l.value,noToc:!0},{...s,navScreenBottom:()=>s.navScreenBottom?.()??r(Qa,{},s),sidebarItems:e=>s.sidebarItems?.(e)??(l.value?r(ac):null)})]}}),xB=O({name:"CategoryPage",slots:Object,setup(i,{slots:s}){const l=Ke(),e=ks(),n=en(),t=nn(),a=C(()=>{const h=e.value.blog;if(h?.type!=="category")return null;const{name:k,key:d}=h;return d==="category"?{component:nc,items:k?n.value.map[k].items:null}:d==="tag"?{component:tc,items:k?t.value.map[k].items:null}:null});return()=>r("div",{class:"vp-page vp-blog"},r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},s.default?.()??[r(ri,{appear:!0},()=>a.value?r(a.value.component):null),s.articlesBefore?.(),a.value?.items?r(ri,{appear:!0,delay:.08},()=>[r(sh,{key:l.value.path,items:a.value.items},s)]):null,s.articlesAfter?.()]),r(ri,{delay:.16},()=>r(tn,{key:"blog"},s))]))}}),LB=O({name:"TimelineItems",setup(){const i=sn(),s=sl(),l=Ka(),e=C(()=>i.value.timeline??s.value.timelineTitle);return()=>r("div",{class:"timeline-wrapper"},r("ul",{class:"timeline-content"},[r(ri,()=>r("li",{class:"motto"},e.value)),l.value.config.map(({year:n,items:t},a)=>r(ri,{appear:!0,delay:.08*(a+1),group:!0},()=>[r("h3",{key:"title",id:n,class:"timeline-year-title"},r("span",n)),r("li",{key:"content",class:"timeline-year-list"},[r("ul",{class:"timeline-year-wrapper"},t.map(({date:h,info:k,path:d})=>r("li",{class:"timeline-item"},[r("span",{class:"timeline-date"},h),r(Li,{class:"timeline-title",to:d},()=>k.title)])))])]))]))}});const hc=(i,{slots:s})=>r("div",{class:"vp-page vp-blog"},r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},[s.articlesBefore?.(),r(ri,{appear:!0},()=>r(LB)),s.articlesAfter?.()]),r(ri,{appear:!0},()=>r(tn,{key:"blog"},s))]));hc.displayName="TimelinePage";var RB=O({name:"ArticleType",setup(){const{page:i,routeLocale:s}=xi(),l=ln(),e=Ja(),n=sl(),t=C(()=>[{text:n.value.all,path:l.value.path},{text:n.value.star,path:e.value.path},...hB.map(({key:a,path:h})=>{const k=h.replace(/^\//,s.value);return{text:n.value[a]??os(k).meta.title??a,path:k}})]);return()=>r("ul",{class:"vp-article-type-wrapper"},t.value.map(a=>r("li",{class:["vp-article-type",{active:a.path===i.value.path}]},r(Li,{to:a.path},()=>a.text))))}}),PB=O({name:"TypePage",slots:Object,setup(i,{slots:s}){const l=Wn(),e=ks(),n=Ke(),t=ln(),a=Ja(),h=C(()=>{const k=e.value.blog;return k?.type!=="type"||!k.key?t.value.items:k.key==="star"?a.value.items:l.value.items});return()=>r("div",{class:"vp-page vp-blog"},r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},s.default?.()??[r(ri,()=>r(RB)),s.articlesBefore?.(),r(ri,{appear:!0,delay:.08},()=>r(sh,{key:n.value.path,items:h.value})),s.articlesAfter?.()]),r(ri,{appear:!0,delay:.08},()=>r(tn,{key:"blog"},s))]))}}),IB=O({name:"Blog",slots:Object,setup(i,{slots:s}){const l=ks();return()=>{const{type:e,key:n}=l.value.blog??{};return r(wB,null,{...s,default:()=>s.default?.()??r(e==="category"?xB:e==="type"?n==="timeline"?hc:PB:TB,null,s)})}}});const OB=()=>{rB(),kB(),cB(),pB(),dB()},MB=setTimeout,Se=16,rc=10,NB=16,$B=100,Ml="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),nl=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,54,55,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,-1,-1,-1,-1,-1,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,-1,-1,-1,-1,-1],jB=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],VB=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],kc=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],Yt=(i,s)=>{if(s<=0||s>i.length)throw Error(`Illegal length: ${s}`);let l=0,e,n;const t=[];for(;l<s;){if(e=i[l++]&255,t.push(Ml[e>>2&63]),e=(e&3)<<4,l>=s){t.push(Ml[e&63]);break}if(n=i[l++]&255,e|=n>>4&15,t.push(Ml[e&63]),e=(n&15)<<2,l>=s){t.push(Ml[e&63]);break}n=i[l++]&255,e|=n>>6&3,t.push(Ml[e&63]),t.push(Ml[n&63])}return t.join("")},HB=(i,s)=>{const l=i.length;let e=0,n=0,t,a,h,k,d,p;const c=[];for(;e<l-1&&n<s&&(p=i.charCodeAt(e++),t=p<nl.length?nl[p]:-1,p=i.charCodeAt(e++),a=p<nl.length?nl[p]:-1,!(t===-1||a===-1||(d=t<<2>>>0,d|=(a&48)>>4,c.push(String.fromCharCode(d)),++n>=s||e>=l)||(p=i.charCodeAt(e++),h=p<nl.length?nl[p]:-1,h===-1)||(d=(a&15)<<4>>>0,d|=(h&60)>>2,c.push(String.fromCharCode(d)),++n>=s||e>=l)));)p=i.charCodeAt(e++),k=p<nl.length?nl[p]:-1,d=(h&3)<<6>>>0,d|=k,c.push(String.fromCharCode(d)),++n;return c.map(g=>g.charCodeAt(0))},$e=(i,s,l,e)=>{let n,t=i[s],a=i[s+1];return t^=l[0],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[1],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[2],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[3],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[4],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[5],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[6],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[7],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[8],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[9],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[10],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[11],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[12],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[13],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[14],n=e[t>>>24],n+=e[256|t>>16&255],n^=e[512|t>>8&255],n+=e[768|t&255],a^=n^l[15],n=e[a>>>24],n+=e[256|a>>16&255],n^=e[512|a>>8&255],n+=e[768|a&255],t^=n^l[16],i[s]=a^l[NB+1],i[s+1]=t,i},Vl=(i,s)=>{let l=0;for(let e=0;e<4;++e)l=l<<8|i[s]&255,s=(s+1)%i.length;return{key:l,offp:s}},Or=(i,s,l)=>{const e=s.length,n=l.length;let t=0,a=new Int32Array([0,0]),h;for(let k=0;k<e;k++)h=Vl(i,t),t=h.offp,s[k]^=h.key;for(let k=0;k<e;k+=2)a=$e(a,0,s,l),s[k]=a[0],s[k+1]=a[1];for(let k=0;k<n;k+=2)a=$e(a,0,s,l),l[k]=a[0],l[k+1]=a[1]},zB=(i,s,l,e)=>{const n=l.length,t=e.length;let a=0,h=new Int32Array([0,0]),k;for(let d=0;d<n;d++)k=Vl(s,a),a=k.offp,l[d]^=k.key;a=0;for(let d=0;d<n;d+=2)k=Vl(i,a),a=k.offp,h[0]^=k.key,k=Vl(i,a),a=k.offp,h[1]^=k.key,h=$e(h,0,l,e),l[d]=h[0],l[d+1]=h[1];for(let d=0;d<t;d+=2)k=Vl(i,a),a=k.offp,h[0]^=k.key,k=Vl(i,a),a=k.offp,h[1]^=k.key,h=$e(h,0,l,e),e[d]=h[0],e[d+1]=h[1]},Mr=(i,s,l,e,n)=>{const t=new Int32Array(kc),a=t.length;l=1<<l>>>0;const h=new Int32Array(jB),k=new Int32Array(VB);zB(s,i,h,k);let d=0;const p=()=>{if(d<l){const g=Date.now();for(;d<l&&(d+=1,Or(i,h,k),Or(s,h,k),!(Date.now()-g>$B)););}else{for(let o=0;o<64;o++)for(let B=0;B<a>>1;B++)$e(t,B<<1,h,k);const g=[];for(let o=0;o<a;o++)g.push(t[o]>>24&255),g.push(t[o]>>16&255),g.push(t[o]>>8&255),g.push(t[o]&255);return e?g:Promise.resolve(g)}if(!e)return new Promise(g=>MB(()=>{p().then(g)}))};if(!e)return p();let c;do c=p();while(!c);return c},qB=i=>{try{const s=new Uint32Array(i);return globalThis.crypto.getRandomValues(s),Array.from(s)}catch{throw Error("WebCryptoAPI / globalThis is not available")}},pc=(...i)=>new Error(`Illegal arguments: ${i.map(s=>typeof s).join(", ")}`),UB=(i=rc)=>{if(typeof i!="number")throw pc(i);return i=i<4?4:i>31?31:i,`$2b$${i<10?"0":""}${i}$${Yt(qB(Se),Se)}`},GB=i=>{let s=0,l=0;for(let e=0;e<i.length;++e)l=i.charCodeAt(e),l<128?s+=1:l<2048?s+=2:(l&64512)===55296&&(i.charCodeAt(e+1)&64512)===56320?(e++,s+=4):s+=3;return s},WB=i=>{let s=0,l,e;const n=new Array(GB(i));for(let t=0,a=i.length;t<a;++t)l=i.charCodeAt(t),l<128?n[s++]=l:l<2048?(n[s++]=l>>6|192,n[s++]=l&63|128):(l&64512)===55296&&((e=i.charCodeAt(t+1))&64512)===56320?(l=65536+((l&1023)<<10)+(e&1023),++t,n[s++]=l>>18|240,n[s++]=l>>12&63|128,n[s++]=l>>6&63|128,n[s++]=l&63|128):(n[s++]=l>>12|224,n[s++]=l>>6&63|128,n[s++]=l&63|128);return n},KB=(i,s,l,e)=>{if(typeof i!="string"||typeof s!="string")throw new Error("Invalid content / salt: not a string");let n,t;if(s.charAt(0)!=="$"||s.charAt(1)!=="2")throw new Error("Invalid salt version: "+s.substring(0,2));if(s.charAt(2)==="$")n="\0",t=3;else{if(n=s.charAt(2),n!=="a"&&n!=="b"&&n!=="y"||s.charAt(3)!=="$")throw Error("Invalid salt revision: "+s.substring(2,4));t=4}const a=s.substring(t,t+2),h=/\d\d/.test(a)?Number(a):null;if(h===null)throw new Error("Missing salt rounds");if(h<4||h>31)throw new Error(`Illegal number of rounds (4-31): ${h}`);const k=s.substring(t+3,t+25);i+=n>="a"?"\0":"";const d=WB(i),p=HB(k,Se);if(p.length!==Se)throw new Error(`Illegal salt: ${k}`);const c=g=>`$2${n>="a"?n:""}$${h<10?"0":""}${h}$${Yt(p,Se)}${Yt(g,kc.length*4-1)}`;return l?c(Mr(d,p,h,!0)):Mr(d,p,h,!1).then(g=>c(g))},QB=(i,s=rc)=>KB(i,typeof s=="number"?UB(s):s,!0),Xt=(i,s)=>{if(typeof i!="string"||typeof s!="string")throw pc(i,s);return s.length!==60?!1:QB(i,s.substring(0,29))===s};var dc=O({name:"PasswordModal",props:{hint:String,full:Boolean,showTitle:Boolean},emits:["verify"],setup(i,{emit:s}){const{frontmatter:l,themeLocale:e}=xi(),n=ii(""),t=ii(!1),a=ii(!1),h=C(()=>e.value.encryptLocales);let k=null;const d=()=>{k&&clearTimeout(k),t.value=!1,s("verify",n.value,a.value),Os().then(()=>{t.value=!0,k=setTimeout(()=>{t.value=!1},1e3)})};return()=>r("div",{class:["vp-decrypt-layer",{expand:i.full||l.value.home}]},[i.showTitle?r(Ud):null,r("div",{class:"vp-decrypt-modal"},[r("div",{class:["vp-decrypt-hint",{tried:t.value}]},t.value?h.value.errorHint:r(Wa,{"aria-label":h.value.iconLabel})),i.hint?r("div",{class:"vp-decrypt-hint"},i.hint):null,r("div",{class:"vp-decrypt-input"},[r("input",{type:"password",value:n.value,placeholder:h.value.placeholder,onInput:({target:p})=>{n.value=p.value},onKeydown:({key:p})=>{p==="Enter"&&d()}})]),r("div",{class:"vp-remember-password"},[r("input",{id:"remember-password",type:"checkbox",value:a.value,onChange:()=>{a.value=!a.value}}),r("label",{for:"remember-password"},h.value.remember)]),r("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>{d()}},"OK")])])}});const cc=()=>{const i=ul();return C(()=>i.value.encrypt)},Nr="VUEPRESS_HOPE_GLOBAL_TOKEN",JB=()=>{const i=cc(),s=Pl(Nr,""),l=Ma(Nr,"");return{status:C(()=>{const{global:e=!1,admin:n}=i.value,t=e&&!!n?.tokens.length,a=t?s.value?i.value.admin.tokens.every(h=>!Xt(s.value,h)):i.value.admin.tokens.every(h=>!Xt(l.value,h)):!1;return{isEncrypted:t,isLocked:a,hint:n?.hint??""}}),validate:(e,n=!1)=>{(n?s:l).value=e}}};var ZB=O({name:"GlobalEncrypt",slots:Object,setup(i,{slots:s}){const{status:l,validate:e}=JB(),n=ii(!1);return oi(()=>{n.value=!0}),()=>{const{isEncrypted:t,isLocked:a,hint:h}=l.value;return r(qd,()=>t?n.value?a?r(dc,{full:!0,hint:h,onVerify:e}):s.default():null:s.default())}}});const ft=(i="",s)=>!!i&&Xt(i,s),$r="VUEPRESS_HOPE_PATH_TOKEN",YB=()=>{const i=Ke(),s=cc(),l=Pl($r,{}),e=Ma($r,{}),n=a=>ol(s.value.config)?_s(s.value.config).filter(h=>Oe(decodeURI(a),h)).sort((h,k)=>k.length-h.length):[],t=a=>{const{config:h={}}=s.value,k=n(a);if(k.length>0){const d=k.find(p=>h[p].hint);return{isEncrypted:!0,isLocked:k.some(p=>(l.value[p]?h[p].tokens.every(c=>!ft(l.value[p],c)):!0)&&(e.value[p]?h[p].tokens.every(c=>!ft(e.value[p],c)):!0)),hint:d?h[d].hint:""}}return{isEncrypted:!1,isLocked:!1,hint:""}};return{status:C(()=>t(i.value.path)),getStatus:t,validate:(a,h=!1)=>{const{config:k={}}=s.value,d=n(i.value.path);for(const p of d)if(k[p].tokens.some(c=>ft(a,c))){(h?l:e).value[p]=a;break}}}};var XB=O({name:"LocalEncrypt",slots:Object,setup(i,{slots:s}){const{status:l,validate:e}=YB(),n=ii(!1);return oi(()=>{n.value=!0}),()=>{const{isEncrypted:t,isLocked:a,hint:h}=l.value;return t?n.value?a?r(dc,{showTitle:!0,full:!0,hint:h,onVerify:e}):s.default():null:s.default()}}});B4(i=>{const s=i.title,l=i.index??!0,e=i.icon;return l?{title:s,content:e?()=>[r(Di("VPIcon"),{icon:e,sizing:"both"}),s]:null,order:i.order,index:i.index}:null});const iv={enhance:({app:i,router:s})=>{const{scrollBehavior:l}=s.options;s.options.scrollBehavior=async(...e)=>(await Wt.wait(),l(...e)),By(i),i.component("BloggerInfo",Qa),i.component("SocialMedias",Jd),i.component("GlobalEncrypt",ZB),i.component("LocalEncrypt",XB)},setup:()=>{vy(),fy(),OB()},layouts:{Layout:lB,NotFound:eB,Blog:IB}},sv=Object.freeze(Object.defineProperty({__proto__:null,default:iv},Symbol.toStringTag,{value:"Module"})),lv=(i,s)=>s==="json"?JSON.parse(i):new Function(`let config,__chart_js_config__;
{
${i}
__chart_js_config__=config;
}
return __chart_js_config__;`)();var ev=O({name:"ChartJS",props:{config:{type:String,required:!0},title:String,type:{type:String,default:"json"}},setup(i){const s=Pp(),l=ei(),e=qe(),n=ii(!1);let t;const a=()=>{t?.destroy(),t=null},h=async()=>{const{default:k}=await y(async()=>{const{default:c}=await import("./auto-BUYG9-ss.js");return{default:c}},[]);k.defaults.borderColor=s.value?"#ccc":"#36A2EB",k.defaults.color=s.value?"#fff":"#000",k.defaults.maintainAspectRatio=!1;const d=gl(i.config),p=lv(d,i.type);t=new k(e,p)};return oi(()=>{us(s,async()=>{a(),await Os(),await h(),n.value=!0},{flush:"post"})}),Ds(a),()=>[i.title?r("div",{class:"chartjs-title"},decodeURIComponent(i.title)):null,n.value?null:r(xl,{class:"chartjs-loading",height:192}),r("div",{ref:l,class:"chartjs-wrapper",style:{display:n.value?"block":"none"}},r("canvas",{id:e,height:400}))]}});let nv={};const tv=()=>nv,av=(async()=>{}).constructor,hv=(i,s,l)=>s==="js"?av("echarts",`let width,height,option,__echarts_config__;
{
${i}
__echarts_config__={width,height,option};
}
return __echarts_config__;
`)(l):Promise.resolve({option:JSON.parse(i)});var rv=O({name:"ECharts",props:{config:{type:String,required:!0},title:String,type:{type:String,default:"json"}},setup(i){const s=tv(),l=ei(),e=ii(!1);let n=null;ki("resize",Ze(()=>{n?.resize()},100));const t=()=>{n?.dispose(),n=null},a=async()=>{const h=await y(()=>import("./index-C1rb1p6e.js"),[]);await s.setup?.(),n=h.init(l.value);const{option:k,...d}=await hv(gl(i.config),i.type,n);n.resize(d),n.setOption({...s.option,...k})};return As(async h=>{h==="mounted"&&(await a(),e.value=!0)}),oi(()=>{}),Ds(t),()=>[i.title?r("div",{class:"echarts-title"},decodeURIComponent(i.title)):null,r("div",{class:"echarts-wrapper"},[r("div",{ref:l,class:"echarts-container"}),e.value?null:r(xl,{class:"echarts-loading",height:360})])]}}),lh={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},kv={...lh,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":0},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":0},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":0},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":0},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":0},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":0}}},pv={...lh,"line-width":1,symbols:{start:{class:"start-element",fill:"#ccc","line-color":"#5c6ac4","font-color":"#000"},end:{class:"end-element",fill:"#ccc","line-color":"#5c6ac4","font-color":"#000"},operation:{class:"operation-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},inputoutput:{class:"inputoutput-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},subroutine:{class:"subroutine-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},condition:{class:"condition-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"},parallel:{class:"parallel-element",fill:"#f1f1f1","line-color":"#5c6ac4","font-color":"#000"}}},dv={...lh,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":0},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":0},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":0},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":0},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":0},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":0}}};const jr={ant:kv,vue:dv,pie:pv};var cv=O({name:"FlowChart",props:{code:{type:String,required:!0},preset:{type:String,default:"vue"}},setup(i){const s=qe(),{code:l,preset:e}=da(i),n=ei(),t=ii(!1),a=ii(1);let h=null;const k=c=>c<419?.8:c>1280?1:.9;ki("resize",Ze(()=>{if(h){const c=k(window.innerWidth);a.value!==c&&(a.value=c,h.draw(s,{...jr[i.preset],scale:c}))}},100));const d=()=>{h?.clean(),h=null},p=async()=>{const{parse:c}=await y(async()=>{const{parse:g}=await import("./flowchart-G1WAoCnn.js");return{parse:g}},[]);h=c(gl(l.value)),a.value=k(window.innerWidth),t.value=!0,h.draw(s,{...jr[i.preset],scale:a.value})};return As(async c=>{c==="mounted"&&await p()}),oi(()=>{}),Ds(d),()=>[t.value?null:r(xl,{class:"flowchart-loading",height:192}),r("div",{ref:n,class:["flowchart-wrapper",i.preset],id:s,style:{display:t.value?"block":"none"}})]}}),gv=O({name:"MarkMap",props:{content:{type:String,required:!0}},setup(i){const{content:s}=da(i),l=ei(),e=ei(),n=ii(!1);let t=null;ki("resize",Ze(()=>{t?.fit()},100));const a=()=>{t?.destroy(),t=null},h=async()=>{const[{Transformer:k},d,{Toolbar:p}]=await Promise.all([y(()=>import("./index-DtWMYcbt.js"),__vite__mapDeps([233,234])),y(()=>import("./index-DMDrkyre.js"),__vite__mapDeps([235,234])),y(()=>import("./index-BPAdBlYL.js"),[])]),{Markmap:c,deriveOptions:g,loadJS:o,loadCSS:B}=d,m=new k,{frontmatter:E,features:_,root:f}=m.transform(gl(i.content)),{styles:A,scripts:F}=m.getUsedAssets(_);await Promise.all([F?o(F,{getMarkmap:()=>d}):Promise.resolve(),A?B(A):Promise.resolve()]),t=c.create(e.value,g({maxWidth:240,...E?.markmap}));const{el:w}=p.create(t);await t.setData(f),await t.fit(),w.style.position="absolute",w.style.bottom="0.5rem",w.style.right="0.5rem",l.value.append(w)};return As(async k=>{k==="mounted"&&(await h(),n.value=!0)}),oi(()=>{}),Ds(a),()=>r("div",{class:"markmap-wrapper",ref:l},[r("svg",{ref:e,class:"markmap-svg"}),n.value?null:r(xl,{class:"markmap-loading",height:360})])}});let ov={};const uv=()=>ov,Av=i=>`data:image/svg+xml;charset=utf8,${i.replace(/<br>/g,"<br />").replace(/%/g,"%25").replace(/"/g,"%22").replace(/'/g,"%27").replace(/&/g,"%26").replace(/#/g,"%23").replace(/{/g,"%7B").replace(/}/g,"%7D").replace(/</g,"%3C").replace(/>/g,"%3E")}`,yv='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1316 1024" fill="currentColor"><path d="M658.286 0C415.89 0 0 297.106 0 512c0 214.82 415.89 512 658.286 512 242.322 0 658.285-294.839 658.285-512S900.608 0 658.286 0zm0 877.714c-161.573 0-512-221.769-512-365.714 0-144.018 350.427-365.714 512-365.714 161.572 0 512 217.16 512 365.714s-350.428 365.714-512 365.714z"/><path d="M658.286 292.571a219.429 219.429 0 1 0 0 438.858 219.429 219.429 0 0 0 0-438.858zm0 292.572a73.143 73.143 0 1 1 0-146.286 73.143 73.143 0 0 1 0 146.286z"/></svg>',Bv='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor"><path d="M828.976 894.125H190.189c-70.55 0-127.754-57.185-127.754-127.753V606.674c0-17.634 14.31-31.933 31.933-31.933h63.889c17.634 0 31.932 14.299 31.932 31.933v95.822c0 35.282 28.596 63.877 63.877 63.877h511.033c35.281 0 63.877-28.595 63.877-63.877v-95.822c0-17.634 14.298-31.933 31.943-31.933h63.878c17.635 0 31.933 14.299 31.933 31.933v159.7c0 70.566-57.191 127.751-127.754 127.751zM249.939 267.51c12.921-12.92 33.885-12.92 46.807 0l148.97 148.972V94.893c0-17.634 14.302-31.947 31.934-31.947h63.876c17.638 0 31.946 14.313 31.946 31.947v321.589l148.97-148.972c12.922-12.92 33.876-12.92 46.797 0l46.814 46.818c12.922 12.922 12.922 33.874 0 46.807L552.261 624.93c-1.14 1.138-21.664 13.684-42.315 13.693-20.877.01-41.88-12.542-43.021-13.693L203.122 361.135c-12.923-12.934-12.923-33.885 0-46.807l46.817-46.818z"/></svg>',Nl={useMaxWidth:!1};var vv=O({name:"Mermaid",props:{code:{type:String,required:!0},title:String},setup(i){const s=qe(),l=Pp(),{themeVariables:e,...n}=uv(),t=ei(),a=C(()=>gl(i.code)),h=ii(""),k=async()=>{const{default:c}=await y(async()=>{const{default:g}=await import("./mermaid.esm.min-DnfdSAxm.js").then(o=>o.bF);return{default:g}},[]);c.initialize({theme:l.value?"dark":"default",themeVariables:{dark:l.value,...h2(e)?e(l.value):e},flowchart:Nl,sequence:Nl,journey:Nl,gantt:Nl,er:Nl,pie:Nl,...n,startOnLoad:!1}),h.value=(await c.render(s,a.value)).svg},d=()=>{const{body:c}=document,g=document.createElement("div");g.classList.add("mermaid-preview"),g.innerHTML=h.value,c.appendChild(g),g.addEventListener("click",()=>{c.removeChild(g)})},p=()=>{const c=Av(h.value),g=document.createElement("a");g.setAttribute("href",c),g.setAttribute("download",`${i.title?gl(i.title):s}.svg`),g.click()};return oi(()=>{us(l,k,{flush:"post"})}),()=>[r("div",{class:"mermaid-actions"},[r("button",{class:"preview-button",title:"preview",innerHTML:yv,onClick:d}),r("button",{class:"download-button",title:"download",innerHTML:Bv,onClick:p})]),r("div",{ref:t,class:"mermaid-wrapper"},h.value?r("div",{class:"mermaid-content",innerHTML:h.value}):r(xl,{class:"mermaid-loading",height:96}))]}});const mv=Ss({enhance:({app:i})=>{i.component("ChartJS",ev),i.component("ECharts",rv),i.component("FlowChart",cv),i.component("MarkMap",gv),i.component("Mermaid",vv)}}),Fv=Object.freeze(Object.defineProperty({__proto__:null,default:mv},Symbol.toStringTag,{value:"Module"})),yn=[K3,Q3,J3,Z3,X3,tA,SA,TA,wA,OA,jA,UA,KA,r4,p4,y4,E4,w4,U4,Z4,sv,Fv].map(i=>i.default).filter(Boolean),fv=JSON.parse('{"base":"/blog-middleware/","lang":"en-US","title":"","description":"","head":[],"locales":{"/":{"lang":"zh-CN","title":"老马啸西风","description":"老马啸西风的技术博客"}}}');var Hl=ei(fv),Cv=H2,Ev=()=>{const i=gu({history:Cv(fa("/blog-middleware/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(s,l,e)=>e||(s.hash?{el:s.hash}:{top:0})});return i.beforeResolve(async(s,l)=>{if(s.path!==l.path||l===zs){const e=os(s.fullPath);if(e.path!==s.fullPath)return e.path;const n=await e.loader();s.meta={...e.meta,_pageChunk:n}}else s.path===l.path&&(s.meta=l.meta)}),i},bv=i=>{i.component("ClientOnly",Da),i.component("Content",Cp),i.component("RouteLink",Li)},_v=(i,s,l)=>{const e=C(()=>s.currentRoute.value.path),n=dk((E,_)=>({get(){return E(),s.currentRoute.value.meta._pageChunk},set(f){s.currentRoute.value.meta._pageChunk=f,_()}})),t=C(()=>Bl.resolveLayouts(l)),a=C(()=>Bl.resolveRouteLocale(Hl.value.locales,e.value)),h=C(()=>Bl.resolveSiteLocaleData(Hl.value,a.value)),k=C(()=>n.value.comp),d=C(()=>n.value.data),p=C(()=>d.value.frontmatter),c=C(()=>Bl.resolvePageHeadTitle(d.value,h.value)),g=C(()=>Bl.resolvePageHead(c.value,p.value,h.value)),o=C(()=>Bl.resolvePageLang(d.value,h.value)),B=C(()=>Bl.resolvePageLayout(d.value,t.value)),m={layouts:t,pageData:d,pageComponent:k,pageFrontmatter:p,pageHead:g,pageHeadTitle:c,pageLang:o,pageLayout:B,redirects:Nt,routeLocale:a,routePath:e,routes:Zl,siteData:Hl,siteLocaleData:h,frontmatter:p,head:g,headTitle:c,lang:o,page:d,site:Hl,siteLocale:h};return i.provide(ba,m),Object.defineProperties(i.config.globalProperties,{$pageFrontmatter:{get:()=>p.value},$pageHead:{get:()=>g.value},$pageHeadTitle:{get:()=>c.value},$pageLang:{get:()=>o.value},$pageData:{get:()=>d.value},$routeLocale:{get:()=>a.value},$withBase:{get:()=>mi},$frontmatter:{get:()=>p.value},$head:{get:()=>g.value},$headTitle:{get:()=>c.value},$lang:{get:()=>o.value},$page:{get:()=>d.value},$site:{get:()=>Hl.value},$siteLocale:{get:()=>h.value}}),m},Dv=([i,s,l=""])=>{const e=Object.entries(s).map(([h,k])=>Bi(k)?`[${h}=${JSON.stringify(k)}]`:k?`[${h}]`:"").join(""),n=`head > ${i}${e}`;return Array.from(document.querySelectorAll(n)).find(h=>h.innerText===l)??null},Sv=([i,s,l])=>{if(!Bi(i))return null;const e=document.createElement(i);return ol(s)&&Object.entries(s).forEach(([n,t])=>{Bi(t)?e.setAttribute(n,t):t&&e.setAttribute(n,"")}),Bi(l)&&e.appendChild(document.createTextNode(l)),e},Tv=()=>{const i=yu(),s=mp();let l=[];const e=()=>{i.value.forEach(a=>{const h=Dv(a);h&&l.push(h)})},n=()=>{const a=[];return i.value.forEach(h=>{const k=Sv(h);k&&a.push(k)}),a},t=()=>{document.documentElement.lang=s.value;const a=n();l.forEach((h,k)=>{const d=a.findIndex(p=>h.isEqualNode(p));d===-1?(h.remove(),delete l[k]):a.splice(d,1)}),a.forEach(h=>document.head.appendChild(h)),l=[...l.filter(h=>!!h),...a]};Cs(Fu,t),oi(()=>{e(),Si(i,t,{immediate:!1})})},wv=Ko,xv=async()=>{const i=wv({name:"Vuepress",setup(){Tv();for(const n of yn)n.setup?.();const l=yn.flatMap(({rootComponents:n=[]})=>n.map(t=>r(t))),e=Bu();return()=>[r(e.value),l]}}),s=Ev();bv(i),_v(i,s,yn);for(const l of yn)await l.enhance?.({app:i,router:s,siteData:Hl});return i.use(s),{app:i,router:s}};xv().then(({app:i,router:s})=>{s.isReady().then(()=>{i.mount("#app")})});export{y as _,Pv as a,Gk as b,Rv as c,xv as createVueApp,Pi as d,Wk as e,Lv as o,Di as r,kg as w};

import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as d,b as t,d as n,w as o,e,r,o as a}from"./app-BqzWBAFn.js";const p={},m={start:"4"},h={start:"7"},f={start:"11"},g={start:"16"},b={start:"19"};function k(y,l){const s=r("RouteLink");return a(),u("div",null,[l[105]||(l[105]=d('<h1 id="《分布式任务调度-从入门到精通》索引" tabindex="-1"><a class="header-anchor" href="#《分布式任务调度-从入门到精通》索引"><span>《分布式任务调度：从入门到精通》索引</span></a></h1><p>本系列文章全面介绍了分布式任务调度系统的核心概念、实现原理、关键技术以及实践应用。从基础理论到高级架构，从框架解析到企业实践，帮助读者构建完整的分布式任务调度知识体系。</p><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><h3 id="第一部分-基础篇-理解调度" tabindex="-1"><a class="header-anchor" href="#第一部分-基础篇-理解调度"><span>第一部分 基础篇：理解调度</span></a></h3>',4)),t("ol",null,[t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-1-1-why-distributed-scheduling.html"},{default:o(()=>[...l[0]||(l[0]=[e("为什么需要分布式任务调度？",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-1-1-1-limitations-of-single-machine-cron.html"},{default:o(()=>[...l[1]||(l[1]=[e("1.1 单机 Cron 的局限",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1.2-distributed-system-task-requirements.html"},{default:o(()=>[...l[2]||(l[2]=[e("1.2 分布式系统中的任务需求",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-1-3-timed-tasks-vs-real-time-tasks.html"},{default:o(()=>[...l[3]||(l[3]=[e("1.3 定时任务 vs 实时任务",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-1-4-challenges-and-opportunities-of-distributed-scheduling.html"},{default:o(()=>[...l[4]||(l[4]=[e("1.4 分布式调度的挑战与机遇",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-1-2-core-concepts-of-scheduling.html"},{default:o(()=>[...l[5]||(l[5]=[e("任务调度的核心概念",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-1-2-1-tasks-schedulers-executors.html"},{default:o(()=>[...l[6]||(l[6]=[e("2.1 任务、调度器、执行器",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-2-2-time-expressions-cron-expression-details.html"},{default:o(()=>[...l[7]||(l[7]=[e("2.2 时间表达式（Cron 表达式详解）",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-2-3-one-time-periodic-dependency-execution.html"},{default:o(()=>[...l[8]||(l[8]=[e("2.3 单次执行、周期执行、依赖执行",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-2-4-task-status-and-lifecycle-management.html"},{default:o(()=>[...l[9]||(l[9]=[e("2.4 任务状态与生命周期管理",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-1-3-basic-model-of-distributed-scheduling.html"},{default:o(()=>[...l[10]||(l[10]=[e("分布式调度的基本模型",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-1-3-1-master-worker-architecture.html"},{default:o(()=>[...l[11]||(l[11]=[e("3.1 Master/Worker 架构",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-3-2-scheduling-center-vs-execution-nodes.html"},{default:o(()=>[...l[12]||(l[12]=[e("3.2 调度中心 vs 执行节点",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-3-3-state-storage-and-consistency.html"},{default:o(()=>[...l[13]||(l[13]=[e("3.3 状态存储与一致性",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-1-3-4-communication-mechanisms-in-distributed-scheduling.html"},{default:o(()=>[...l[14]||(l[14]=[e("3.4 分布式调度的通信机制",-1)])]),_:1})])])])]),l[106]||(l[106]=t("h3",{id:"第二部分-实战篇-从零实现一个调度系统",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#第二部分-实战篇-从零实现一个调度系统"},[t("span",null,"第二部分 实战篇：从零实现一个调度系统")])],-1)),t("ol",m,[t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-2-1-minimal-viable-scheduler.html"},{default:o(()=>[...l[15]||(l[15]=[e("最小可用调度器",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-2-1-1-java-timer-scheduledexecutorservice.html"},{default:o(()=>[...l[16]||(l[16]=[e("4.1 基于 Java Timer/ScheduledExecutorService",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-1-2-simple-cron-expression-parsing.html"},{default:o(()=>[...l[17]||(l[17]=[e("4.2 简单的 Cron 表达式解析",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-1-3-single-machine-timed-task-implementation.html"},{default:o(()=>[...l[18]||(l[18]=[e("4.3 单机定时任务实现",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-1-4-scheduler-monitoring-and-management.html"},{default:o(()=>[...l[19]||(l[19]=[e("4.4 调度器的监控与管理",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-2-2-distributed-scheduling-prototype.html"},{default:o(()=>[...l[20]||(l[20]=[e("分布式调度雏形",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-2-2-1-using-database-to-store-tasks.html"},{default:o(()=>[...l[21]||(l[21]=[e("5.1 使用数据库存储任务",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-2-2-distributed-locks-for-unique-task-execution.html"},{default:o(()=>[...l[22]||(l[22]=[e("5.2 分布式锁保证任务唯一执行",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-2-3-execution-logs-and-task-status-management.html"},{default:o(()=>[...l[23]||(l[23]=[e("5.3 执行日志与任务状态管理",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-2-4-task-sharding-and-load-balancing.html"},{default:o(()=>[...l[24]||(l[24]=[e("5.4 任务分片与负载均衡",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-2-3-high-availability-and-scalability.html"},{default:o(()=>[...l[25]||(l[25]=[e("高可用与扩展性设计",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-2-3-1-leader-election-zookeeper-etcd-implementation.html"},{default:o(()=>[...l[26]||(l[26]=[e("6.1 Leader 选举（Zookeeper/Etcd 实现）",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-3-2-multi-node-fault-tolerance-and-failover.html"},{default:o(()=>[...l[27]||(l[27]=[e("6.2 多节点容错与 Failover",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-3-3-dynamic-scaling-mechanism.html"},{default:o(()=>[...l[28]||(l[28]=[e("6.3 动态扩缩容机制",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-2-3-4-cluster-status-monitoring-and-alerting.html"},{default:o(()=>[...l[29]||(l[29]=[e("6.4 集群状态监控与告警",-1)])]),_:1})])])])]),l[107]||(l[107]=t("h3",{id:"第三部分-框架篇-主流分布式调度框架解析",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#第三部分-框架篇-主流分布式调度框架解析"},[t("span",null,"第三部分 框架篇：主流分布式调度框架解析")])],-1)),t("ol",h,[t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-3-1-quartz-framework.html"},{default:o(()=>[...l[30]||(l[30]=[e("Quartz",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-3-1-1-quartz-architecture-and-core-components.html"},{default:o(()=>[...l[31]||(l[31]=[e("7.1 Quartz 架构与核心组件",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-1-2-cluster-mode-and-database-persistence.html"},{default:o(()=>[...l[32]||(l[32]=[e("7.2 集群模式与数据库持久化",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-1-3-pros-cons-and-typical-applications.html"},{default:o(()=>[...l[33]||(l[33]=[e("7.3 优缺点与典型应用",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-1-4-quartz-advanced-features-and-best-practices.html"},{default:o(()=>[...l[34]||(l[34]=[e("7.4 Quartz 高级特性与最佳实践",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-3-2-elastic-job-framework.html"},{default:o(()=>[...l[35]||(l[35]=[e("Elastic-Job",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-3-2-1-sharding-tasks-and-elastic-scaling.html"},{default:o(()=>[...l[36]||(l[36]=[e("8.1 分片任务与弹性扩容",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-2-2-zookeeper-coordination-mechanism.html"},{default:o(()=>[...l[37]||(l[37]=[e("8.2 Zookeeper 协调机制",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-2-3-job-event-tracking-and-monitoring.html"},{default:o(()=>[...l[38]||(l[38]=[e("8.3 作业事件追踪与监控",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-2-4-elastic-job-configuration-optimization-and-troubleshooting.html"},{default:o(()=>[...l[39]||(l[39]=[e("8.4 Elastic-Job 配置优化与故障排查",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-3-3-xxl-job-framework.html"},{default:o(()=>[...l[40]||(l[40]=[e("xxl-job",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-3-3-1-scheduling-center-executor-architecture.html"},{default:o(()=>[...l[41]||(l[41]=[e("9.1 调度中心 + 执行器架构",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-3-2-dynamic-task-management-and-log-query.html"},{default:o(()=>[...l[42]||(l[42]=[e("9.2 动态任务管理与日志查询",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-3-3-distributed-scheduling-and-task-routing-strategies.html"},{default:o(()=>[...l[43]||(l[43]=[e("9.3 分布式调度与任务路由策略",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-3-4-xxl-job-performance-tuning-and-production-practice.html"},{default:o(()=>[...l[44]||(l[44]=[e("9.4 xxl-job 性能调优与生产实践",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-3-4-other-scheduling-systems.html"},{default:o(()=>[...l[45]||(l[45]=[e("其他调度系统简析",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-3-4-1-tbschedule-architecture-and-features.html"},{default:o(()=>[...l[46]||(l[46]=[e("10.1 TBSchedule 架构与特性",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-4-2-saturn-distributed-scheduling-solution.html"},{default:o(()=>[...l[47]||(l[47]=[e("10.2 Saturn 分布式调度方案",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-4-3-kubernetes-cronjob-principles-and-practice.html"},{default:o(()=>[...l[48]||(l[48]=[e("10.3 Kubernetes CronJob 原理与实践",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-3-4-4-comparison-of-other-emerging-scheduling-frameworks.html"},{default:o(()=>[...l[49]||(l[49]=[e("10.4 其他新兴调度框架对比",-1)])]),_:1})])])])]),l[108]||(l[108]=t("h3",{id:"第四部分-高级篇-进阶与架构思维",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#第四部分-高级篇-进阶与架构思维"},[t("span",null,"第四部分 高级篇：进阶与架构思维")])],-1)),t("ol",f,[t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-4-1-distributed-coordination-mechanisms.html"},{default:o(()=>[...l[50]||(l[50]=[e("分布式协调机制",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-4-1-1-distributed-lock-implementation-zookeeper-redis.html"},{default:o(()=>[...l[51]||(l[51]=[e("11.1 分布式锁实现（Zookeeper/Redis）",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-1-2-heartbeat-and-task-preemption-mechanism.html"},{default:o(()=>[...l[52]||(l[52]=[e("11.2 心跳与任务抢占机制",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-1-3-application-of-consensus-protocols-raft-paxos-in-scheduling.html"},{default:o(()=>[...l[53]||(l[53]=[e("11.3 一致性协议（Raft/Paxos）在调度中的应用",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-1-4-distributed-transactions-and-scheduling-consistency.html"},{default:o(()=>[...l[54]||(l[54]=[e("11.4 分布式事务与调度一致性",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-4-2-task-dependency-and-workflow-scheduling.html"},{default:o(()=>[...l[55]||(l[55]=[e("任务依赖与工作流调度",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-4-2-1-dag-directed-acyclic-graph-model-details.html"},{default:o(()=>[...l[56]||(l[56]=[e("12.1 DAG（有向无环图）模型详解",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-2-2-upstream-downstream-dependency-processing-mechanism.html"},{default:o(()=>[...l[57]||(l[57]=[e("12.2 上下游依赖处理机制",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-2-3-workflow-engines-azkaban-airflow-dolphinscheduler.html"},{default:o(()=>[...l[58]||(l[58]=[e("12.3 工作流引擎（Azkaban、Airflow、DolphinScheduler）",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-2-4-design-and-implementation-of-complex-workflows.html"},{default:o(()=>[...l[59]||(l[59]=[e("12.4 复杂工作流的设计与实现",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-4-3-task-execution-and-fault-tolerance.html"},{default:o(()=>[...l[60]||(l[60]=[e("任务执行与容错机制",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-4-3-1-retry-mechanism-and-compensation-task-design.html"},{default:o(()=>[...l[61]||(l[61]=[e("13.1 重试机制与补偿任务设计",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-3-2-timeout-control-and-interrupt-execution.html"},{default:o(()=>[...l[62]||(l[62]=[e("13.2 超时控制与中断执行",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-3-3-idempotency-guarantee-strategies.html"},{default:o(()=>[...l[63]||(l[63]=[e("13.3 幂等性保障策略",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-3-4-task-execution-monitoring-and-diagnosis.html"},{default:o(()=>[...l[64]||(l[64]=[e("13.4 任务执行的监控与诊断",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-4-4-scheduling-performance-optimization.html"},{default:o(()=>[...l[65]||(l[65]=[e("调度性能优化",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-4-4-1-large-scale-concurrent-task-scheduling-strategies.html"},{default:o(()=>[...l[66]||(l[66]=[e("14.1 大规模任务并发调度策略",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-4-2-data-sharding-and-batch-processing-optimization.html"},{default:o(()=>[...l[67]||(l[67]=[e("14.2 数据分片与批处理优化",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-4-3-scheduling-delay-and-accuracy-optimization.html"},{default:o(()=>[...l[68]||(l[68]=[e("14.3 调度延迟与准确性优化",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-4-4-resource-scheduling-and-load-balancing-optimization.html"},{default:o(()=>[...l[69]||(l[69]=[e("14.4 资源调度与负载均衡优化",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-4-5-security-and-multi-tenancy.html"},{default:o(()=>[...l[70]||(l[70]=[e("安全与多租户",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-4-5-1-task-isolation-and-access-control.html"},{default:o(()=>[...l[71]||(l[71]=[e("15.1 任务隔离与权限控制",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-5-2-task-data-encryption-and-audit.html"},{default:o(()=>[...l[72]||(l[72]=[e("15.2 任务数据加密与审计",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-5-3-multi-tenant-architecture-design.html"},{default:o(()=>[...l[73]||(l[73]=[e("15.3 多租户架构设计",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-4-5-4-security-hardening-of-scheduling-systems.html"},{default:o(()=>[...l[74]||(l[74]=[e("15.4 调度系统的安全加固",-1)])]),_:1})])])])]),l[109]||(l[109]=t("h3",{id:"第五部分-实践篇-生产环境落地",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#第五部分-实践篇-生产环境落地"},[t("span",null,"第五部分 实践篇：生产环境落地")])],-1)),t("ol",g,[t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-5-1-scheduling-platform-enterprise-practices.html"},{default:o(()=>[...l[75]||(l[75]=[e("调度平台的企业实践",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-5-1-1-e-commerce-order-timed-closure-scenarios.html"},{default:o(()=>[...l[76]||(l[76]=[e("16.1 电商订单定时关闭场景",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-1-2-big-data-etl-and-batch-computing-practices.html"},{default:o(()=>[...l[77]||(l[77]=[e("16.2 大数据 ETL 与批量计算实践",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-1-3-financial-risk-control-timed-verification-solutions.html"},{default:o(()=>[...l[78]||(l[78]=[e("16.3 金融风控定时校验方案",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-1-4-enterprise-level-scheduling-platform-architecture-design.html"},{default:o(()=>[...l[79]||(l[79]=[e("16.4 企业级调度平台架构设计",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-5-2-microservices-integration.html"},{default:o(()=>[...l[80]||(l[80]=[e("与微服务体系的结合",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-5-2-1-spring-cloud-spring-boot-integration-with-scheduling-frameworks.html"},{default:o(()=>[...l[81]||(l[81]=[e("17.1 Spring Cloud/Spring Boot 集成调度框架",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-2-2-configuration-center-and-scheduling-interaction.html"},{default:o(()=>[...l[82]||(l[82]=[e("17.2 配置中心与调度的联动",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-2-3-service-discovery-and-task-routing.html"},{default:o(()=>[...l[83]||(l[83]=[e("17.3 服务发现与任务路由",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-2-4-scheduling-governance-in-microservices-environment.html"},{default:o(()=>[...l[84]||(l[84]=[e("17.4 微服务环境下的调度治理",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-5-3-monitoring-and-operations.html"},{default:o(()=>[...l[85]||(l[85]=[e("监控与运维",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-5-3-1-task-execution-log-collection-and-analysis.html"},{default:o(()=>[...l[86]||(l[86]=[e("18.1 任务执行日志采集与分析",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-3-2-scheduling-metrics-monitoring-latency-failure-rate-qps.html"},{default:o(()=>[...l[87]||(l[87]=[e("18.2 调度指标监控（延迟、失败率、QPS）",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-3-3-alerting-and-automated-operations.html"},{default:o(()=>[...l[88]||(l[88]=[e("18.3 告警与自动化运维",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-5-3-4-capacity-planning-and-fault-drills-for-scheduling-systems.html"},{default:o(()=>[...l[89]||(l[89]=[e("18.4 调度系统的容量规划与故障演练",-1)])]),_:1})])])])]),l[110]||(l[110]=t("h3",{id:"第六部分-展望篇-未来趋势",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#第六部分-展望篇-未来趋势"},[t("span",null,"第六部分 展望篇：未来趋势")])],-1)),t("ol",b,[t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-6-1-cloud-native-and-containerized-scheduling.html"},{default:o(()=>[...l[90]||(l[90]=[e("云原生与容器化调度",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-6-1-1-kubernetes-cronjob-principles-and-practices.html"},{default:o(()=>[...l[91]||(l[91]=[e("19.1 Kubernetes CronJob 的原理与实践",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-1-2-scheduling-and-service-mesh-integration.html"},{default:o(()=>[...l[92]||(l[92]=[e("19.2 调度与 Service Mesh 结合",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-1-3-task-scheduling-under-serverless.html"},{default:o(()=>[...l[93]||(l[93]=[e("19.3 Serverless 下的任务调度",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-1-4-scheduling-challenges-in-edge-computing-environments.html"},{default:o(()=>[...l[94]||(l[94]=[e("19.4 边缘计算环境下的调度挑战",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-6-2-ai-driven-intelligent-scheduling.html"},{default:o(()=>[...l[95]||(l[95]=[e("AI 驱动的智能调度",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-6-2-1-task-optimization-based-on-historical-data.html"},{default:o(()=>[...l[96]||(l[96]=[e("20.1 基于历史数据的任务优化",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-2-2-intelligent-task-prioritization-and-resource-allocation.html"},{default:o(()=>[...l[97]||(l[97]=[e("20.2 智能任务优先级与资源分配",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-2-3-aiops-application-in-scheduling-platforms.html"},{default:o(()=>[...l[98]||(l[98]=[e("20.3 AIOps 在调度平台中的应用",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-2-4-machine-learning-practices-in-scheduling-prediction.html"},{default:o(()=>[...l[99]||(l[99]=[e("20.4 机器学习在调度预测中的实践",-1)])]),_:1})])])]),t("li",null,[t("p",null,[n(s,{to:"/posts/schedule/1-6-3-summary-and-learning-path.html"},{default:o(()=>[...l[100]||(l[100]=[e("总结与学习路径",-1)])]),_:1})]),t("ul",null,[t("li",null,[n(s,{to:"/posts/schedule/1-6-3-1-progression-path-from-single-machine-to-distributed.html"},{default:o(()=>[...l[101]||(l[101]=[e("21.1 从单机到分布式的进阶路线",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-3-2-transition-from-user-to-architect.html"},{default:o(()=>[...l[102]||(l[102]=[e("21.2 从使用者到架构师的转变",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-3-3-future-evolution-of-task-scheduling.html"},{default:o(()=>[...l[103]||(l[103]=[e("21.3 任务调度的未来演进",-1)])]),_:1})]),t("li",null,[n(s,{to:"/posts/schedule/1-6-3-4-learning-resources-and-communities-for-scheduling-technology.html"},{default:o(()=>[...l[104]||(l[104]=[e("21.4 调度技术的学习资源与社区",-1)])]),_:1})])])])]),l[111]||(l[111]=t("hr",null,null,-1)),l[112]||(l[112]=t("p",null,[e("📌 "),t("strong",null,"特色设计"),e("：")],-1)),l[113]||(l[113]=t("ul",null,[t("li",null,[e("每个框架章节都配 "),t("strong",null,"架构图 + 核心原理 + Demo + 优缺点"),e("。")]),t("li",null,'第二部分提供"手写一个最小分布式调度系统"，让读者从 0 到 1 构建自己的"迷你 xxl-job"。'),t("li",null,"第四部分和第五部分能让读者真正掌握在生产环境中如何落地。")],-1))])}const v=i(p,[["render",k]]),z=JSON.parse('{"path":"/posts/schedule/","title":"《分布式任务调度：从入门到精通》索引","lang":"zh-CN","frontmatter":{"description":"《分布式任务调度：从入门到精通》索引 本系列文章全面介绍了分布式任务调度系统的核心概念、实现原理、关键技术以及实践应用。从基础理论到高级架构，从框架解析到企业实践，帮助读者构建完整的分布式任务调度知识体系。 目录结构 第一部分 基础篇：理解调度 第二部分 实战篇：从零实现一个调度系统 第三部分 框架篇：主流分布式调度框架解析 第四部分 高级篇：进阶与架...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《分布式任务调度：从入门到精通》索引\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-01T16:42:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-middleware/posts/schedule/"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"《分布式任务调度：从入门到精通》索引"}],["meta",{"property":"og:description","content":"《分布式任务调度：从入门到精通》索引 本系列文章全面介绍了分布式任务调度系统的核心概念、实现原理、关键技术以及实践应用。从基础理论到高级架构，从框架解析到企业实践，帮助读者构建完整的分布式任务调度知识体系。 目录结构 第一部分 基础篇：理解调度 第二部分 实战篇：从零实现一个调度系统 第三部分 框架篇：主流分布式调度框架解析 第四部分 高级篇：进阶与架..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T16:42:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T16:42:59.000Z"}]]},"git":{"createdTime":1756744979000,"updatedTime":1756744979000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":7.43,"words":2230},"filePathRelative":"posts/schedule/README.md","excerpt":"\\n<p>本系列文章全面介绍了分布式任务调度系统的核心概念、实现原理、关键技术以及实践应用。从基础理论到高级架构，从框架解析到企业实践，帮助读者构建完整的分布式任务调度知识体系。</p>\\n<h2>目录结构</h2>\\n<h3>第一部分 基础篇：理解调度</h3>\\n<ol>\\n<li>\\n<p><a href=\\"/blog-middleware/posts/schedule/1-1-1-why-distributed-scheduling.html\\" target=\\"_blank\\">为什么需要分布式任务调度？</a></p>\\n<ul>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-1-1-limitations-of-single-machine-cron.html\\" target=\\"_blank\\">1.1 单机 Cron 的局限</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1.2-distributed-system-task-requirements.html\\" target=\\"_blank\\">1.2 分布式系统中的任务需求</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-1-3-timed-tasks-vs-real-time-tasks.html\\" target=\\"_blank\\">1.3 定时任务 vs 实时任务</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-1-4-challenges-and-opportunities-of-distributed-scheduling.html\\" target=\\"_blank\\">1.4 分布式调度的挑战与机遇</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/blog-middleware/posts/schedule/1-1-2-core-concepts-of-scheduling.html\\" target=\\"_blank\\">任务调度的核心概念</a></p>\\n<ul>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-2-1-tasks-schedulers-executors.html\\" target=\\"_blank\\">2.1 任务、调度器、执行器</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-2-2-time-expressions-cron-expression-details.html\\" target=\\"_blank\\">2.2 时间表达式（Cron 表达式详解）</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-2-3-one-time-periodic-dependency-execution.html\\" target=\\"_blank\\">2.3 单次执行、周期执行、依赖执行</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-2-4-task-status-and-lifecycle-management.html\\" target=\\"_blank\\">2.4 任务状态与生命周期管理</a></li>\\n</ul>\\n</li>\\n<li>\\n<p><a href=\\"/blog-middleware/posts/schedule/1-1-3-basic-model-of-distributed-scheduling.html\\" target=\\"_blank\\">分布式调度的基本模型</a></p>\\n<ul>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-3-1-master-worker-architecture.html\\" target=\\"_blank\\">3.1 Master/Worker 架构</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-3-2-scheduling-center-vs-execution-nodes.html\\" target=\\"_blank\\">3.2 调度中心 vs 执行节点</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-3-3-state-storage-and-consistency.html\\" target=\\"_blank\\">3.3 状态存储与一致性</a></li>\\n<li><a href=\\"/blog-middleware/posts/schedule/1-1-3-4-communication-mechanisms-in-distributed-scheduling.html\\" target=\\"_blank\\">3.4 分布式调度的通信机制</a></li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{v as comp,z as data};

import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o as e}from"./app-BEwSPBqv.js";const s={};function n(o,l){return e(),t("div",null,[...l[0]||(l[0]=[r('<p>链路追踪（Distributed Tracing）和监控中间件（Observability）在现代分布式系统中至关重要，尤其是微服务架构下的故障排查、性能分析和系统优化。</p><p>一本 <strong>《链路追踪 &amp; 监控中间件：从入门到精通》</strong> 可以按照 <strong>基础概念 → 数据采集 → 核心中间件 → 实践案例 → 高级优化 → 企业落地 → 未来趋势</strong> 的逻辑设计目录。</p><hr><h1 id="《链路追踪-监控中间件-从入门到精通》目录" tabindex="-1"><a class="header-anchor" href="#《链路追踪-监控中间件-从入门到精通》目录"><span><strong>《链路追踪 &amp; 监控中间件：从入门到精通》目录</strong></span></a></h1><hr><h2 id="第一篇-基础篇-·-理解链路与监控" tabindex="-1"><a class="header-anchor" href="#第一篇-基础篇-·-理解链路与监控"><span><strong>第一篇：基础篇 · 理解链路与监控</strong></span></a></h2><ol><li><p><strong>第1章 为什么需要链路追踪与监控</strong></p><ul><li>单体 vs 微服务的运维挑战</li><li>服务调用链复杂性</li><li>性能分析与故障定位难点</li></ul></li><li><p><strong>第2章 核心概念与指标体系</strong></p><ul><li>链路追踪：Span、Trace、TraceID</li><li>日志、指标（Metrics）、事件（Event）</li><li>SLA、SLO、SLI 的理解</li><li>指标体系设计原则</li></ul></li><li><p><strong>第3章 分布式系统中的可观测性</strong></p><ul><li>Observability vs Monitoring</li><li>三大支柱：Logs、Metrics、Traces</li><li>监控的闭环：采集 → 存储 → 可视化 → 告警</li></ul></li></ol><hr><h2 id="第二篇-数据采集篇" tabindex="-1"><a class="header-anchor" href="#第二篇-数据采集篇"><span><strong>第二篇：数据采集篇</strong></span></a></h2><ol start="4"><li><p><strong>第4章 日志采集</strong></p><ul><li>日志结构化与非结构化</li><li>日志采集工具：Fluentd、Logstash、Filebeat</li><li>分布式日志聚合与查询</li></ul></li><li><p><strong>第5章 指标采集</strong></p><ul><li>应用指标、系统指标、业务指标</li><li>Prometheus 数据模型与 Pull 模式</li><li>指标标签与多维分析</li></ul></li><li><p><strong>第6章 链路追踪采集</strong></p><ul><li>OpenTelemetry、OpenTracing、Zipkin SDK</li><li>自动注入 vs 手动埋点</li><li>Trace 上下文传递（Context Propagation）</li></ul></li></ol><hr><h2 id="第三篇-核心中间件篇" tabindex="-1"><a class="header-anchor" href="#第三篇-核心中间件篇"><span><strong>第三篇：核心中间件篇</strong></span></a></h2><ol start="7"><li><p><strong>第7章 Zipkin 深度解析</strong></p><ul><li>架构与数据模型</li><li>收集、存储与查询</li><li>与 Spring Cloud Sleuth 集成</li></ul></li><li><p><strong>第8章 Jaeger 实战</strong></p><ul><li>架构与存储方案（Elasticsearch、Cassandra）</li><li>客户端 SDK 与自动埋点</li><li>Trace 查询与可视化</li></ul></li><li><p><strong>第9章 OpenTelemetry &amp; OTLP</strong></p><ul><li>统一标准与跨语言支持</li><li>Metrics、Traces、Logs 的统一采集</li><li>Collector 部署与扩展</li></ul></li><li><p><strong>第10章 监控系统实战</strong></p><ul><li>Prometheus + Grafana</li><li>Alertmanager 告警配置</li><li>数据聚合与仪表盘设计</li></ul></li></ol><hr><h2 id="第四篇-实践篇-·-构建完整的可观测体系" tabindex="-1"><a class="header-anchor" href="#第四篇-实践篇-·-构建完整的可观测体系"><span><strong>第四篇：实践篇 · 构建完整的可观测体系</strong></span></a></h2><ol start="11"><li><p><strong>第11章 链路追踪在微服务中的落地</strong></p><ul><li>服务调用链可视化</li><li>异常与性能瓶颈定位</li><li>分布式事务追踪</li></ul></li><li><p><strong>第12章 指标与告警实践</strong></p><ul><li>业务指标设计</li><li>SLA/SLO 指标告警</li><li>异常检测与智能告警策略</li></ul></li><li><p><strong>第13章 日志关联与追踪分析</strong></p><ul><li>Trace 与日志关联</li><li>日志聚合分析最佳实践</li><li>问题排查案例</li></ul></li></ol><hr><h2 id="第五篇-高阶篇-·-性能优化与扩展" tabindex="-1"><a class="header-anchor" href="#第五篇-高阶篇-·-性能优化与扩展"><span><strong>第五篇：高阶篇 · 性能优化与扩展</strong></span></a></h2><ol start="14"><li><p><strong>第14章 大规模系统的采集优化</strong></p><ul><li>Trace 与 Metrics 数据压缩</li><li>采样策略（Head Sampling、Probabilistic Sampling）</li><li>高并发环境下的数据收集优化</li></ul></li><li><p><strong>第15章 存储与查询优化</strong></p><ul><li>Trace 数据存储方案（ES、Cassandra、ClickHouse）</li><li>指标时序数据存储优化</li><li>高性能查询与聚合</li></ul></li><li><p><strong>第16章 可观测性与微服务治理结合</strong></p><ul><li>服务熔断、限流与追踪结合</li><li>性能回溯与容量规划</li><li>调优闭环案例</li></ul></li></ol><hr><h2 id="第六篇-企业级落地篇" tabindex="-1"><a class="header-anchor" href="#第六篇-企业级落地篇"><span><strong>第六篇：企业级落地篇</strong></span></a></h2><ol start="17"><li><p><strong>第17章 架构设计与最佳实践</strong></p><ul><li>多集群与多数据中心可观测架构</li><li>跨语言、跨平台追踪方案</li><li>灰度发布与指标评估</li></ul></li><li><p><strong>第18章 运维与可视化实践</strong></p><ul><li>Grafana、Kibana、Jaeger UI 实战</li><li>告警体系设计</li><li>可观测性 SLO 运营</li></ul></li><li><p><strong>第19章 企业案例分析</strong></p><ul><li>电商高并发下的链路追踪</li><li>金融风控系统指标监控</li><li>IoT 设备端日志与 Trace 聚合</li></ul></li></ol><hr><h2 id="第七篇-未来趋势篇" tabindex="-1"><a class="header-anchor" href="#第七篇-未来趋势篇"><span><strong>第七篇：未来趋势篇</strong></span></a></h2><ol start="20"><li><p><strong>第20章 云原生可观测性</strong></p><ul><li>Kubernetes 原生监控与追踪</li><li>Service Mesh + Observability（Envoy + Istio）</li><li>Serverless 环境下的可观测</li></ul></li><li><p><strong>第21章 AI 与智能监控</strong></p><ul><li>异常检测与预测告警</li><li>自动化根因分析</li><li>自适应采样与智能聚合</li></ul></li><li><p><strong>第22章 总结与学习路线</strong></p><ul><li>从开发者到运维/架构师的成长路径</li><li>开源工具与社区推荐</li><li>构建完整可观测体系的路线图</li></ul></li></ol><hr><p>📌 <strong>特色设计</strong>：</p><ul><li>兼顾理论原理与实战案例</li><li>每个工具章节配 <strong>架构图 + 原理分析 + 示例代码 + 实战落地</strong></li><li>第二、三篇重点指导读者从 0 到 1 搭建可观测体系</li><li>第五、六篇覆盖大规模系统优化和企业落地经验</li></ul>',28)])])}const g=i(s,[["render",n]]),c=JSON.parse('{"path":"/posts/trace/index-desc.html","title":"《链路追踪 & 监控中间件：从入门到精通》目录","lang":"zh-CN","frontmatter":{"description":"链路追踪（Distributed Tracing）和监控中间件（Observability）在现代分布式系统中至关重要，尤其是微服务架构下的故障排查、性能分析和系统优化。 一本 《链路追踪 & 监控中间件：从入门到精通》 可以按照 基础概念 → 数据采集 → 核心中间件 → 实践案例 → 高级优化 → 企业落地 → 未来趋势 的逻辑设计目录。 《链路追...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《链路追踪 & 监控中间件：从入门到精通》目录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-01T14:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-middleware/posts/trace/index-desc.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"《链路追踪 & 监控中间件：从入门到精通》目录"}],["meta",{"property":"og:description","content":"链路追踪（Distributed Tracing）和监控中间件（Observability）在现代分布式系统中至关重要，尤其是微服务架构下的故障排查、性能分析和系统优化。 一本 《链路追踪 & 监控中间件：从入门到精通》 可以按照 基础概念 → 数据采集 → 核心中间件 → 实践案例 → 高级优化 → 企业落地 → 未来趋势 的逻辑设计目录。 《链路追..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T14:56:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T14:56:59.000Z"}]]},"git":{"createdTime":1756738619000,"updatedTime":1756738619000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":3.65,"words":1094},"filePathRelative":"posts/trace/index-desc.md","excerpt":"<p>链路追踪（Distributed Tracing）和监控中间件（Observability）在现代分布式系统中至关重要，尤其是微服务架构下的故障排查、性能分析和系统优化。</p>\\n<p>一本 <strong>《链路追踪 &amp; 监控中间件：从入门到精通》</strong> 可以按照 <strong>基础概念 → 数据采集 → 核心中间件 → 实践案例 → 高级优化 → 企业落地 → 未来趋势</strong> 的逻辑设计目录。</p>\\n<hr>\\n<h1><strong>《链路追踪 &amp; 监控中间件：从入门到精通》目录</strong></h1>\\n<hr>\\n<h2><strong>第一篇：基础篇 · 理解链路与监控</strong></h2>","autoDesc":true}');export{g as comp,c as data};
